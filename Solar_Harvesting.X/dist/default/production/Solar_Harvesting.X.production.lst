

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 30 19:02:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72  0000                     
    73                           ; Version 2.05
    74                           ; Generated 20/12/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F46K22 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     _CCPTMRS0	set	3913
   108  0000                     _ANSELE	set	3900
   109  0000                     _ANSELD	set	3899
   110  0000                     _ANSELC	set	3898
   111  0000                     _ANSELB	set	3897
   112  0000                     _ANSELA	set	3896
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADRESH	set	4036
   116  0000                     _CCPR1L	set	4030
   117  0000                     _CCPR2L	set	3943
   118  0000                     _SSPBUF	set	4041
   119  0000                     _SSP1BUF	set	4041
   120  0000                     _SSP1CON2bits	set	4037
   121  0000                     _SSP1STAT	set	4039
   122  0000                     _SSP1ADD	set	4040
   123  0000                     _SSP1CON2	set	4037
   124  0000                     _SSP1CON1	set	4038
   125  0000                     _PIE1bits	set	3997
   126  0000                     _INTCONbits	set	4082
   127  0000                     _TRISCbits	set	3988
   128  0000                     _ADCON2bits	set	4032
   129  0000                     _ADCON2	set	4032
   130  0000                     _ADCON1	set	4033
   131  0000                     _PR2	set	4027
   132  0000                     _T2CON	set	4026
   133  0000                     _CCP1CON	set	4029
   134  0000                     _CCP2CON	set	3942
   135  0000                     _OSCTUNEbits	set	3995
   136  0000                     _OSCCON	set	4051
   137  0000                     _LATE	set	3981
   138  0000                     _LATD	set	3980
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _LATA	set	3977
   142  0000                     _PORTE	set	3972
   143  0000                     _PORTD	set	3971
   144  0000                     _PORTC	set	3970
   145  0000                     _PORTB	set	3969
   146  0000                     _PORTA	set	3968
   147  0000                     _TRISE	set	3990
   148  0000                     _TRISD	set	3989
   149  0000                     _TRISC	set	3988
   150  0000                     _TRISB	set	3987
   151  0000                     _TRISA	set	3986
   152                           
   153                           	psect	smallconst
   154  001000                     __psmallconst:
   155                           	opt callstack 0
   156  001000  00                 	db	0
   157  001001                     STR_6:
   158  001001  4F                 	db	79	;'O'
   159  001002  76                 	db	118	;'v'
   160  001003  65                 	db	101	;'e'
   161  001004  72                 	db	114	;'r'
   162  001005  20                 	db	32
   163  001006  56                 	db	86	;'V'
   164  001007  6F                 	db	111	;'o'
   165  001008  6C                 	db	108	;'l'
   166  001009  74                 	db	116	;'t'
   167  00100A  61                 	db	97	;'a'
   168  00100B  67                 	db	103	;'g'
   169  00100C  65                 	db	101	;'e'
   170  00100D  00                 	db	0
   171  00100E                     STR_2:
   172  00100E  4F                 	db	79	;'O'
   173  00100F  76                 	db	118	;'v'
   174  001010  65                 	db	101	;'e'
   175  001011  72                 	db	114	;'r'
   176  001012  20                 	db	32
   177  001013  43                 	db	67	;'C'
   178  001014  75                 	db	117	;'u'
   179  001015  72                 	db	114	;'r'
   180  001016  72                 	db	114	;'r'
   181  001017  65                 	db	101	;'e'
   182  001018  6E                 	db	110	;'n'
   183  001019  74                 	db	116	;'t'
   184  00101A  00                 	db	0
   185  00101B                     STR_4:
   186  00101B  25                 	db	37
   187  00101C  2E                 	db	46
   188  00101D  32                 	db	50	;'2'
   189  00101E  66                 	db	102	;'f'
   190  00101F  00                 	db	0
   191  001020                     STR_1:
   192  001020  54                 	db	84	;'T'
   193  001021  65                 	db	101	;'e'
   194  001022  73                 	db	115	;'s'
   195  001023  74                 	db	116	;'t'
   196  001024  00                 	db	0
   197  001025                     STR_14:
   198  001025  49                 	db	73	;'I'
   199  001026  4E                 	db	78	;'N'
   200  001027  46                 	db	70	;'F'
   201  001028  00                 	db	0
   202  001029                     STR_18:
   203  001029  4E                 	db	78	;'N'
   204  00102A  41                 	db	65	;'A'
   205  00102B  4E                 	db	78	;'N'
   206  00102C  00                 	db	0
   207  00102D                     STR_15:
   208  00102D  69                 	db	105	;'i'
   209  00102E  6E                 	db	110	;'n'
   210  00102F  66                 	db	102	;'f'
   211  001030  00                 	db	0
   212  001031                     STR_19:
   213  001031  6E                 	db	110	;'n'
   214  001032  61                 	db	97	;'a'
   215  001033  6E                 	db	110	;'n'
   216  001034  00                 	db	0
   217  001035                     STR_9:
   218  001035  55                 	db	85	;'U'
   219  001036  69                 	db	105	;'i'
   220  001037  3D                 	db	61	;'='
   221  001038  00                 	db	0
   222  001039                     STR_22:
   223  001039  6C                 	db	108	;'l'
   224  00103A  66                 	db	102	;'f'
   225  00103B  00                 	db	0
   226  00103C                     STR_3:
   227  00103C  49                 	db	73	;'I'
   228  00103D  3D                 	db	61	;'='
   229  00103E  00                 	db	0
   230  00103F                     STR_7:
   231  00103F  55                 	db	85	;'U'
   232  001040  3D                 	db	61	;'='
   233  001041  00                 	db	0
   234  001042                     STR_5:
   235  001042  20                 	db	32
   236  001043  41                 	db	65	;'A'
   237  001044  00                 	db	0
   238  001045                     STR_11:
   239  001045  20                 	db	32
   240  001046  56                 	db	86	;'V'
   241  001047  00                 	db	0
   242  001048                     STR_13:
   243  001048  20                 	db	32
   244  001049  57                 	db	87	;'W'
   245  00104A  00                 	db	0
   246  0000                     
   247                           ; #config settings
   248  00104B  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           	psect	cinit
   251  003F78                     __pcinit:
   252                           	opt callstack 0
   253  003F78                     start_initialization:
   254                           	opt callstack 0
   255  003F78                     __initialization:
   256                           	opt callstack 0
   257                           
   258                           ; Clear objects allocated to BANK1 (96 bytes)
   259  003F78  EE01  F000         	lfsr	0,__pbssBANK1
   260  003F7C  0E60               	movlw	96
   261  003F7E                     clear_0:
   262  003F7E  6AEE               	clrf	postinc0,c
   263  003F80  06E8               	decf	wreg,f,c
   264  003F82  E1FD               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to BANK0 (66 bytes)
   267  003F84  EE00  F0BA         	lfsr	0,__pbssBANK0
   268  003F88  0E42               	movlw	66
   269  003F8A                     clear_1:
   270  003F8A  6AEE               	clrf	postinc0,c
   271  003F8C  06E8               	decf	wreg,f,c
   272  003F8E  E1FD               	bnz	clear_1
   273  003F90                     end_of_initialization:
   274                           	opt callstack 0
   275  003F90                     __end_of__initialization:
   276                           	opt callstack 0
   277  003F90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  003F92  6EF8               	movwf	tblptru,c
   279  003F94  0100               	movlb	0
   280  003F96  EF5F  F010         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  0000BA                     __pbssBANK0:
   284                           	opt callstack 0
   285  0000BA                     floorf@F524:
   286                           	opt callstack 0
   287  0000BA                     	ds	4
   288  0000BE                     ___fpclassifyf@F463:
   289                           	opt callstack 0
   290  0000BE                     	ds	4
   291  0000C2                     _Power_a:
   292                           	opt callstack 0
   293  0000C2                     	ds	4
   294  0000C6                     _tens:
   295                           	opt callstack 0
   296  0000C6                     	ds	4
   297  0000CA                     _rez_adc_U:
   298                           	opt callstack 0
   299  0000CA                     	ds	4
   300  0000CE                     _tens_A:
   301                           	opt callstack 0
   302  0000CE                     	ds	4
   303  0000D2                     _rez_adc_A:
   304                           	opt callstack 0
   305  0000D2                     	ds	4
   306  0000D6                     _Iout:
   307                           	opt callstack 0
   308  0000D6                     	ds	4
   309  0000DA                     _Uout:
   310                           	opt callstack 0
   311  0000DA                     	ds	4
   312  0000DE                     _Uin:
   313                           	opt callstack 0
   314  0000DE                     	ds	4
   315  0000E2                     _nout:
   316                           	opt callstack 0
   317  0000E2                     	ds	2
   318  0000E4                     _width:
   319                           	opt callstack 0
   320  0000E4                     	ds	2
   321  0000E6                     _prec:
   322                           	opt callstack 0
   323  0000E6                     	ds	2
   324  0000E8                     _flags:
   325                           	opt callstack 0
   326  0000E8                     	ds	2
   327  0000EA                     _c:
   328                           	opt callstack 0
   329  0000EA                     	ds	2
   330  0000EC                     _dty:
   331                           	opt callstack 0
   332  0000EC                     	ds	2
   333  0000EE                     _boost_pwm:
   334                           	opt callstack 0
   335  0000EE                     	ds	2
   336  0000F0                     _buck_pwm:
   337                           	opt callstack 0
   338  0000F0                     	ds	2
   339  0000F2                     _data:
   340                           	opt callstack 0
   341  0000F2                     	ds	2
   342  0000F4                     _str_V:
   343                           	opt callstack 0
   344  0000F4                     	ds	8
   345                           
   346                           	psect	bssBANK1
   347  000100                     __pbssBANK1:
   348                           	opt callstack 0
   349  000100                     _dbuf:
   350                           	opt callstack 0
   351  000100                     	ds	80
   352  000150                     _str_P:
   353                           	opt callstack 0
   354  000150                     	ds	8
   355  000158                     _str_A:
   356                           	opt callstack 0
   357  000158                     	ds	8
   358                           
   359                           	psect	cstackBANK0
   360  000060                     __pcstackBANK0:
   361                           	opt callstack 0
   362  000060                     efgtoa@ou:
   363                           	opt callstack 0
   364                           
   365                           ; 4 bytes @ 0x0
   366  000060                     	ds	4
   367  000064                     _efgtoa$779:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x4
   371  000064                     	ds	2
   372  000066                     _efgtoa$780:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x6
   376  000066                     	ds	2
   377  000068                     _efgtoa$785:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x8
   381  000068                     	ds	2
   382  00006A                     _efgtoa$789:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0xA
   386  00006A                     	ds	2
   387  00006C                     _efgtoa$790:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0xC
   391  00006C                     	ds	2
   392  00006E                     _efgtoa$791:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0xE
   396  00006E                     	ds	2
   397  000070                     efgtoa@t:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x10
   401  000070                     	ds	2
   402  000072                     efgtoa@pp:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x12
   406  000072                     	ds	2
   407  000074                     efgtoa@m:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x14
   411  000074                     	ds	2
   412  000076                     efgtoa@ne:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x16
   416  000076                     	ds	2
   417  000078                     efgtoa@d:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x18
   421  000078                     	ds	2
   422  00007A                     efgtoa@sign:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x1A
   426  00007A                     	ds	2
   427  00007C                     efgtoa@p:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x1C
   431  00007C                     	ds	2
   432  00007E                     efgtoa@nmode:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x1E
   436  00007E                     	ds	1
   437  00007F                     efgtoa@w:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x1F
   441  00007F                     	ds	2
   442  000081                     efgtoa@mode:
   443                           	opt callstack 0
   444                           
   445                           ; 1 bytes @ 0x21
   446  000081                     	ds	1
   447  000082                     efgtoa@h:
   448                           	opt callstack 0
   449                           
   450                           ; 4 bytes @ 0x22
   451  000082                     	ds	4
   452  000086                     efgtoa@l:
   453                           	opt callstack 0
   454                           
   455                           ; 4 bytes @ 0x26
   456  000086                     	ds	4
   457  00008A                     efgtoa@i:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x2A
   461  00008A                     	ds	2
   462  00008C                     efgtoa@g:
   463                           	opt callstack 0
   464                           
   465                           ; 4 bytes @ 0x2C
   466  00008C                     	ds	4
   467  000090                     efgtoa@e:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x30
   471  000090                     	ds	2
   472  000092                     efgtoa@n:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x32
   476  000092                     	ds	2
   477  000094                     efgtoa@u:
   478                           	opt callstack 0
   479                           
   480                           ; 4 bytes @ 0x34
   481  000094                     	ds	4
   482  000098                     ?_sprintf:
   483                           	opt callstack 0
   484  000098                     sprintf@s:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x38
   488  000098                     	ds	2
   489  00009A                     sprintf@fmt:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x3A
   493  00009A                     	ds	8
   494  0000A2                     sprintf@ap:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x42
   498  0000A2                     	ds	2
   499  0000A4                     sprintf@f:
   500                           	opt callstack 0
   501                           
   502                           ; 6 bytes @ 0x44
   503  0000A4                     	ds	6
   504  0000AA                     main@Uin:
   505                           	opt callstack 0
   506                           
   507                           ; 4 bytes @ 0x4A
   508  0000AA                     	ds	4
   509  0000AE                     main@buck_pwm:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x4E
   513  0000AE                     	ds	2
   514  0000B0                     main@port:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x50
   518  0000B0                     	ds	2
   519  0000B2                     main@Power:
   520                           	opt callstack 0
   521                           
   522                           ; 4 bytes @ 0x52
   523  0000B2                     	ds	4
   524  0000B6                     main@Power_new:
   525                           	opt callstack 0
   526                           
   527                           ; 4 bytes @ 0x56
   528  0000B6                     	ds	4
   529                           
   530                           	psect	cstackCOMRAM
   531  000001                     __pcstackCOMRAM:
   532                           	opt callstack 0
   533  000001                     ??_I2C_Master_Wait:
   534  000001                     ?_strlen:
   535                           	opt callstack 0
   536  000001                     ?___fpclassifyf:
   537                           	opt callstack 0
   538  000001                     ?_isupper:
   539                           	opt callstack 0
   540  000001                     ?_isdigit:
   541                           	opt callstack 0
   542  000001                     ?_strncmp:
   543                           	opt callstack 0
   544  000001                     ?_isspace:
   545                           	opt callstack 0
   546  000001                     ?___wmul:
   547                           	opt callstack 0
   548  000001                     ?___awdiv:
   549                           	opt callstack 0
   550  000001                     ?___awmod:
   551                           	opt callstack 0
   552  000001                     ?___fladd:
   553                           	opt callstack 0
   554  000001                     ?___fldiv:
   555                           	opt callstack 0
   556  000001                     ?___lldiv:
   557                           	opt callstack 0
   558  000001                     ?___flneg:
   559                           	opt callstack 0
   560  000001                     ?___xxtofl:
   561                           	opt callstack 0
   562  000001                     ___wmul@multiplier:
   563                           	opt callstack 0
   564  000001                     ___awdiv@dividend:
   565                           	opt callstack 0
   566  000001                     ___awmod@dividend:
   567                           	opt callstack 0
   568  000001                     isdigit@c:
   569                           	opt callstack 0
   570  000001                     isspace@c:
   571                           	opt callstack 0
   572  000001                     isupper@c:
   573                           	opt callstack 0
   574  000001                     fputc@c:
   575                           	opt callstack 0
   576  000001                     strcpy@dest:
   577                           	opt callstack 0
   578  000001                     strlen@s:
   579                           	opt callstack 0
   580  000001                     strncmp@_l:
   581                           	opt callstack 0
   582  000001                     ___lldiv@dividend:
   583                           	opt callstack 0
   584  000001                     ___fleq@ff1:
   585                           	opt callstack 0
   586  000001                     ___flneg@f1:
   587                           	opt callstack 0
   588  000001                     ___fladd@b:
   589                           	opt callstack 0
   590  000001                     ___fldiv@b:
   591                           	opt callstack 0
   592  000001                     ___xxtofl@val:
   593                           	opt callstack 0
   594  000001                     ___fpclassifyf@x:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x0
   598  000001                     	ds	1
   599  000002                     I2C_Write_Display@d:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x1
   603  000002                     	ds	1
   604  000003                     ??_isupper:
   605  000003                     ??_isdigit:
   606  000003                     ??_isspace:
   607  000003                     ___wmul@multiplicand:
   608                           	opt callstack 0
   609  000003                     ___awdiv@divisor:
   610                           	opt callstack 0
   611  000003                     ___awmod@divisor:
   612                           	opt callstack 0
   613  000003                     fputc@fp:
   614                           	opt callstack 0
   615  000003                     strcpy@src:
   616                           	opt callstack 0
   617  000003                     strlen@a:
   618                           	opt callstack 0
   619  000003                     strncmp@_r:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x2
   623  000003                     	ds	1
   624  000004                     Lcd_Port@data:
   625                           	opt callstack 0
   626                           
   627                           ; 1 bytes @ 0x3
   628  000004                     	ds	1
   629  000005                     ??_fputc:
   630  000005                     ??___fpclassifyf:
   631  000005                     ??_strcpy:
   632  000005                     ??_Lcd_Cmd:
   633  000005                     ??___xxtofl:
   634  000005                     Lcd_Write_Char@a:
   635                           	opt callstack 0
   636  000005                     ___awdiv@counter:
   637                           	opt callstack 0
   638  000005                     ___awmod@counter:
   639                           	opt callstack 0
   640  000005                     ___wmul@product:
   641                           	opt callstack 0
   642  000005                     strncmp@n:
   643                           	opt callstack 0
   644  000005                     ___lldiv@divisor:
   645                           	opt callstack 0
   646  000005                     ___fleq@ff2:
   647                           	opt callstack 0
   648  000005                     ___fladd@a:
   649                           	opt callstack 0
   650  000005                     ___fldiv@a:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x4
   654  000005                     	ds	1
   655  000006                     Lcd_Write_Char@y:
   656                           	opt callstack 0
   657  000006                     ___awdiv@sign:
   658                           	opt callstack 0
   659  000006                     ___awmod@sign:
   660                           	opt callstack 0
   661                           
   662                           ; 1 bytes @ 0x5
   663  000006                     	ds	1
   664  000007                     ??_strncmp:
   665  000007                     ?_tolower:
   666                           	opt callstack 0
   667  000007                     Lcd_Write_Char@temp:
   668                           	opt callstack 0
   669  000007                     _isspace$1311:
   670                           	opt callstack 0
   671  000007                     ___awdiv@quotient:
   672                           	opt callstack 0
   673  000007                     strcpy@s:
   674                           	opt callstack 0
   675  000007                     tolower@c:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x6
   679  000007                     	ds	1
   680  000008                     ?_atoi:
   681                           	opt callstack 0
   682  000008                     Lcd_Cmd@buff:
   683                           	opt callstack 0
   684  000008                     Lcd_Write_String@a:
   685                           	opt callstack 0
   686  000008                     atoi@s:
   687                           	opt callstack 0
   688  000008                     strncmp@l:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0x7
   692  000008                     	ds	1
   693  000009                     ??_tolower:
   694  000009                     ??___fladd:
   695  000009                     ??___fldiv:
   696  000009                     ??___fleq:
   697  000009                     ___xxtofl@sign:
   698                           	opt callstack 0
   699  000009                     ___fpclassifyf@e:
   700                           	opt callstack 0
   701  000009                     strcpy@d:
   702                           	opt callstack 0
   703  000009                     ___lldiv@quotient:
   704                           	opt callstack 0
   705                           
   706                           ; 4 bytes @ 0x8
   707  000009                     	ds	1
   708  00000A                     ??_Lcd_Write_String:
   709  00000A                     ??_atoi:
   710  00000A                     Lcd_Cmd@a:
   711                           	opt callstack 0
   712  00000A                     ___xxtofl@exp:
   713                           	opt callstack 0
   714  00000A                     fputs@s:
   715                           	opt callstack 0
   716  00000A                     strncmp@r:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x9
   720  00000A                     	ds	1
   721  00000B                     ??_Lcd_Init:
   722  00000B                     Lcd_Set_Cursor@b:
   723                           	opt callstack 0
   724  00000B                     ___xxtofl@arg:
   725                           	opt callstack 0
   726  00000B                     ___fpclassifyf@u:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0xA
   730  00000B                     	ds	1
   731  00000C                     Lcd_Set_Cursor@a:
   732                           	opt callstack 0
   733  00000C                     Lcd_Write_String@i:
   734                           	opt callstack 0
   735  00000C                     fputs@fp:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0xB
   739  00000C                     	ds	1
   740  00000D                     Lcd_Set_Cursor@z:
   741                           	opt callstack 0
   742  00000D                     ___lldiv@counter:
   743                           	opt callstack 0
   744  00000D                     ___fladd@signs:
   745                           	opt callstack 0
   746  00000D                     _tolower$1396:
   747                           	opt callstack 0
   748  00000D                     ___fldiv@rem:
   749                           	opt callstack 0
   750                           
   751                           ; 4 bytes @ 0xC
   752  00000D                     	ds	1
   753  00000E                     Lcd_Set_Cursor@y:
   754                           	opt callstack 0
   755  00000E                     ___fladd@aexp:
   756                           	opt callstack 0
   757  00000E                     fputs@c:
   758                           	opt callstack 0
   759  00000E                     atoi@neg:
   760                           	opt callstack 0
   761  00000E                     I2C_Master_Init@c:
   762                           	opt callstack 0
   763                           
   764                           ; 4 bytes @ 0xD
   765  00000E                     	ds	1
   766  00000F                     ?___flmul:
   767                           	opt callstack 0
   768  00000F                     Lcd_Set_Cursor@temp:
   769                           	opt callstack 0
   770  00000F                     ___fladd@bexp:
   771                           	opt callstack 0
   772  00000F                     fputs@i:
   773                           	opt callstack 0
   774  00000F                     ___flmul@b:
   775                           	opt callstack 0
   776                           
   777                           ; 4 bytes @ 0xE
   778  00000F                     	ds	1
   779  000010                     ___fladd@grs:
   780                           	opt callstack 0
   781  000010                     _atoi$1280:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0xF
   785  000010                     	ds	1
   786  000011                     ?_pad:
   787                           	opt callstack 0
   788  000011                     ___fldiv@sign:
   789                           	opt callstack 0
   790  000011                     pad@fp:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x10
   794  000011                     	ds	1
   795  000012                     ??_I2C_Master_Init:
   796  000012                     ___fldiv@new_exp:
   797                           	opt callstack 0
   798  000012                     _atoi$1282:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x11
   802  000012                     	ds	1
   803  000013                     pad@buf:
   804                           	opt callstack 0
   805  000013                     ___flmul@a:
   806                           	opt callstack 0
   807                           
   808                           ; 4 bytes @ 0x12
   809  000013                     	ds	1
   810  000014                     _atoi$1281:
   811                           	opt callstack 0
   812  000014                     ___fldiv@grs:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x13
   816  000014                     	ds	1
   817  000015                     pad@p:
   818                           	opt callstack 0
   819  000015                     atoi@n:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x14
   823  000015                     	ds	1
   824  000016                     ??_init_io_display:
   825                           
   826                           ; 1 bytes @ 0x15
   827  000016                     	ds	1
   828  000017                     ??___flmul:
   829  000017                     ??_pad:
   830                           
   831                           ; 1 bytes @ 0x16
   832  000017                     	ds	1
   833  000018                     ___fldiv@bexp:
   834                           	opt callstack 0
   835  000018                     pad@i:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x17
   839  000018                     	ds	1
   840  000019                     ___fldiv@aexp:
   841                           	opt callstack 0
   842                           
   843                           ; 1 bytes @ 0x18
   844  000019                     	ds	1
   845  00001A                     ?_floorf:
   846                           	opt callstack 0
   847  00001A                     pad@w:
   848                           	opt callstack 0
   849  00001A                     floorf@x:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0x19
   853  00001A                     	ds	1
   854  00001B                     ___flmul@sign:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0x1A
   858  00001B                     	ds	1
   859  00001C                     ___flmul@grs:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x1B
   863  00001C                     	ds	2
   864  00001E                     ??_floorf:
   865                           
   866                           ; 1 bytes @ 0x1D
   867  00001E                     	ds	2
   868  000020                     ___flmul@aexp:
   869                           	opt callstack 0
   870                           
   871                           ; 1 bytes @ 0x1F
   872  000020                     	ds	1
   873  000021                     ___flmul@bexp:
   874                           	opt callstack 0
   875                           
   876                           ; 1 bytes @ 0x20
   877  000021                     	ds	1
   878  000022                     ___flmul@prod:
   879                           	opt callstack 0
   880                           
   881                           ; 4 bytes @ 0x21
   882  000022                     	ds	2
   883  000024                     floorf@m:
   884                           	opt callstack 0
   885                           
   886                           ; 4 bytes @ 0x23
   887  000024                     	ds	2
   888  000026                     ___flmul@temp:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x25
   892  000026                     	ds	2
   893  000028                     ??_read_Uin:
   894  000028                     ?___flsub:
   895                           	opt callstack 0
   896  000028                     ?___fltol:
   897                           	opt callstack 0
   898  000028                     floorf@e:
   899                           	opt callstack 0
   900  000028                     ___flge@ff1:
   901                           	opt callstack 0
   902  000028                     ___fltol@f1:
   903                           	opt callstack 0
   904  000028                     ___flsub@b:
   905                           	opt callstack 0
   906                           
   907                           ; 4 bytes @ 0x27
   908  000028                     	ds	2
   909  00002A                     floorf@u:
   910                           	opt callstack 0
   911                           
   912                           ; 4 bytes @ 0x29
   913  00002A                     	ds	2
   914  00002C                     ??___fltol:
   915  00002C                     ___flge@ff2:
   916                           	opt callstack 0
   917  00002C                     ___flsub@a:
   918                           	opt callstack 0
   919                           
   920                           ; 4 bytes @ 0x2B
   921  00002C                     	ds	4
   922  000030                     ??___flge:
   923  000030                     ___fltol@sign1:
   924                           	opt callstack 0
   925                           
   926                           ; 1 bytes @ 0x2F
   927  000030                     	ds	1
   928  000031                     ___fltol@exp1:
   929                           	opt callstack 0
   930                           
   931                           ; 1 bytes @ 0x30
   932  000031                     	ds	1
   933  000032                     set_boost@dty:
   934                           	opt callstack 0
   935  000032                     set_buck@dty:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x31
   939  000032                     	ds	2
   940  000034                     ??_read_Uout:
   941  000034                     ??_read_Iout:
   942  000034                     ?_efgtoa:
   943                           	opt callstack 0
   944  000034                     efgtoa@fp:
   945                           	opt callstack 0
   946  000034                     pwm_init@Uin:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0x33
   950  000034                     	ds	2
   951  000036                     efgtoa@f:
   952                           	opt callstack 0
   953                           
   954                           ; 4 bytes @ 0x35
   955  000036                     	ds	2
   956  000038                     
   957                           ; 1 bytes @ 0x37
   958  000038                     	ds	2
   959  00003A                     efgtoa@c:
   960                           	opt callstack 0
   961                           
   962                           ; 1 bytes @ 0x39
   963  00003A                     	ds	1
   964  00003B                     ??_efgtoa:
   965                           
   966                           ; 1 bytes @ 0x3A
   967  00003B                     	ds	5
   968  000040                     ?_vfpfcnvrt:
   969                           	opt callstack 0
   970  000040                     vfpfcnvrt@fp:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x3F
   974  000040                     	ds	2
   975  000042                     vfpfcnvrt@fmt:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x41
   979  000042                     	ds	2
   980  000044                     vfpfcnvrt@ap:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x43
   984  000044                     	ds	2
   985  000046                     ??_vfpfcnvrt:
   986                           
   987                           ; 1 bytes @ 0x45
   988  000046                     	ds	4
   989  00004A                     _vfpfcnvrt$805:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x49
   993  00004A                     	ds	2
   994  00004C                     _vfpfcnvrt$809:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x4B
   998  00004C                     	ds	2
   999  00004E                     vfpfcnvrt@f:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x4D
  1003  00004E                     	ds	4
  1004  000052                     vfpfcnvrt@ct:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 3 bytes @ 0x51
  1008  000052                     	ds	3
  1009  000055                     vfpfcnvrt@c:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x54
  1013  000055                     	ds	1
  1014  000056                     ?_vfprintf:
  1015                           	opt callstack 0
  1016  000056                     vfprintf@fp:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x55
  1020  000056                     	ds	2
  1021  000058                     vfprintf@fmt:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x57
  1025  000058                     	ds	2
  1026  00005A                     vfprintf@ap:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x59
  1030  00005A                     	ds	2
  1031  00005C                     vfprintf@cfmt:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x5B
  1035  00005C                     	ds	2
  1036  00005E                     ??_main:
  1037                           
  1038                           ; 1 bytes @ 0x5D
  1039  00005E                     	ds	1
  1040                           
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 7 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  Power_new       4   86[BANK0 ] float 
  1051 ;;  Power           4   82[BANK0 ] float 
  1052 ;;  Uin             4   74[BANK0 ] float 
  1053 ;;  port            2   80[BANK0 ] int 
  1054 ;;  buck_pwm        2   78[BANK0 ] int 
  1055 ;;  g               2    0        int 
  1056 ;;  f               2    0        int 
  1057 ;;  boost_pwm       2    0        int 
  1058 ;;  d               2    0        int 
  1059 ;;  c               2    0        int 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;Total ram usage:       17 bytes
  1074 ;; Hardware stack levels required when called:    9
  1075 ;; This function calls:
  1076 ;;		_Lcd_Clear
  1077 ;;		___flge
  1078 ;;		___flmul
  1079 ;;		_adc_config
  1080 ;;		_config
  1081 ;;		_init_io_display
  1082 ;;		_pwm_config
  1083 ;;		_pwm_init
  1084 ;;		_read_Iout
  1085 ;;		_read_Uin
  1086 ;;		_read_Uout
  1087 ;;		_set_boost
  1088 ;;		_set_buck
  1089 ;;		_write_Iout
  1090 ;;		_write_Power
  1091 ;;		_write_Uin
  1092 ;;		_write_Uout
  1093 ;; This function is called by:
  1094 ;;		Startup code after reset
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text0
  1099  0020BE                     __ptext0:
  1100                           	opt callstack 0
  1101  0020BE                     _main:
  1102                           	opt callstack 22
  1103                           
  1104                           ;main.c: 10:     config();
  1105                           
  1106                           ;incstack = 0
  1107  0020BE  EC0E  F01E         	call	_config	;wreg free
  1108                           
  1109                           ;main.c: 11:     pwm_config();
  1110  0020C2  ECDE  F01F         	call	_pwm_config	;wreg free
  1111                           
  1112                           ;main.c: 12:     adc_config();
  1113  0020C6  EC01  F020         	call	_adc_config	;wreg free
  1114                           
  1115                           ;main.c: 13:     init_io_display();
  1116  0020CA  ECA0  F01C         	call	_init_io_display	;wreg free
  1117                           
  1118                           ;main.c: 14:     Lcd_Clear();
  1119  0020CE  ECF3  F01F         	call	_Lcd_Clear	;wreg free
  1120                           
  1121                           ;main.c: 15:     read_Uin();
  1122  0020D2  EC1D  F019         	call	_read_Uin	;wreg free
  1123                           
  1124                           ;main.c: 16:     pwm_init(Uin);
  1125  0020D6  C0DE  F034         	movff	_Uin,pwm_init@Uin
  1126  0020DA  C0DF  F035         	movff	_Uin+1,pwm_init@Uin+1
  1127  0020DE  C0E0  F036         	movff	_Uin+2,pwm_init@Uin+2
  1128  0020E2  C0E1  F037         	movff	_Uin+3,pwm_init@Uin+3
  1129  0020E6  EC31  F01F         	call	_pwm_init	;wreg free
  1130                           
  1131                           ;main.c: 17:     float Uin,Power,Power_new;;main.c: 18:     int port,c,d,buck_pwm,boost_
      +                          pwm,f,g;;main.c: 19:     buck_pwm=50;
  1132  0020EA  0E00               	movlw	0
  1133  0020EC  0100               	movlb	0	; () banked
  1134  0020EE  6FAF               	movwf	(main@buck_pwm+1)& (0+255),b
  1135  0020F0  0E32               	movlw	50
  1136  0020F2  6FAE               	movwf	main@buck_pwm& (0+255),b
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;main.c: 20:     CCPR2L=0;
  1140  0020F4  0E00               	movlw	0
  1141  0020F6  6E67               	movwf	3943,c	;volatile
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;main.c: 21:     CCPR1L=0;
  1145  0020F8  0E00               	movlw	0
  1146  0020FA  6EBE               	movwf	4030,c	;volatile
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 22:     port=0;
  1150  0020FC  0E00               	movlw	0
  1151  0020FE  6FB1               	movwf	(main@port+1)& (0+255),b
  1152  002100  0E00               	movlw	0
  1153  002102  6FB0               	movwf	main@port& (0+255),b
  1154  002104                     l4791:
  1155                           
  1156                           ;main.c: 25:     {;main.c: 27:         if(port==0)
  1157  002104  0100               	movlb	0	; () banked
  1158  002106  51B0               	movf	main@port& (0+255),w,b
  1159  002108  11B1               	iorwf	(main@port+1)& (0+255),w,b
  1160  00210A  A4D8               	btfss	status,2,c
  1161  00210C  D019               	goto	l4805
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 28:         {;main.c: 29:             read_Uout();
  1165  00210E  ECDE  F016         	call	_read_Uout	;wreg free
  1166                           
  1167                           ;main.c: 30:             write_Uout();
  1168  002112  ECBA  F01D         	call	_write_Uout	;wreg free
  1169                           
  1170                           ;main.c: 31:             port=1;
  1171  002116  0E00               	movlw	0
  1172  002118  0100               	movlb	0	; () banked
  1173  00211A  6FB1               	movwf	(main@port+1)& (0+255),b
  1174  00211C  0E01               	movlw	1
  1175  00211E  6FB0               	movwf	main@port& (0+255),b
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;main.c: 32:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1179  002120  0ED0               	movlw	208
  1180  002122  6E5E               	movwf	??_main& (0+255),c
  1181  002124  0ECA               	movlw	202
  1182  002126                     u5317:
  1183  002126  2EE8               	decfsz	wreg,f,c
  1184  002128  D7FE               	bra	u5317
  1185  00212A  2E5E               	decfsz	??_main& (0+255),f,c
  1186  00212C  D7FC               	bra	u5317
  1187                           
  1188                           ;main.c: 33:             ADRESH=0X00;
  1189  00212E  0E00               	movlw	0
  1190  002130  6EC4               	movwf	4036,c	;volatile
  1191                           
  1192                           ;main.c: 34:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1193  002132  0ED0               	movlw	208
  1194  002134  6E5E               	movwf	??_main& (0+255),c
  1195  002136  0ECA               	movlw	202
  1196  002138                     u5327:
  1197  002138  2EE8               	decfsz	wreg,f,c
  1198  00213A  D7FE               	bra	u5327
  1199  00213C  2E5E               	decfsz	??_main& (0+255),f,c
  1200  00213E  D7FC               	bra	u5327
  1201  002140                     l4805:
  1202                           
  1203                           ;main.c: 37:         if(port==1)
  1204  002140  0100               	movlb	0	; () banked
  1205  002142  05B0               	decf	main@port& (0+255),w,b
  1206  002144  11B1               	iorwf	(main@port+1)& (0+255),w,b
  1207  002146  A4D8               	btfss	status,2,c
  1208  002148  D019               	goto	l4819
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 38:         {;main.c: 39:             read_Iout();
  1212  00214A  EC71  F017         	call	_read_Iout	;wreg free
  1213                           
  1214                           ;main.c: 40:             write_Iout();
  1215  00214E  EC06  F01D         	call	_write_Iout	;wreg free
  1216                           
  1217                           ;main.c: 41:             port=2;
  1218  002152  0E00               	movlw	0
  1219  002154  0100               	movlb	0	; () banked
  1220  002156  6FB1               	movwf	(main@port+1)& (0+255),b
  1221  002158  0E02               	movlw	2
  1222  00215A  6FB0               	movwf	main@port& (0+255),b
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 42:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1226  00215C  0ED0               	movlw	208
  1227  00215E  6E5E               	movwf	??_main& (0+255),c
  1228  002160  0ECA               	movlw	202
  1229  002162                     u5337:
  1230  002162  2EE8               	decfsz	wreg,f,c
  1231  002164  D7FE               	bra	u5337
  1232  002166  2E5E               	decfsz	??_main& (0+255),f,c
  1233  002168  D7FC               	bra	u5337
  1234                           
  1235                           ;main.c: 43:             ADRESH=0X00;
  1236  00216A  0E00               	movlw	0
  1237  00216C  6EC4               	movwf	4036,c	;volatile
  1238                           
  1239                           ;main.c: 44:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1240  00216E  0ED0               	movlw	208
  1241  002170  6E5E               	movwf	??_main& (0+255),c
  1242  002172  0ECA               	movlw	202
  1243  002174                     u5347:
  1244  002174  2EE8               	decfsz	wreg,f,c
  1245  002176  D7FE               	bra	u5347
  1246  002178  2E5E               	decfsz	??_main& (0+255),f,c
  1247  00217A  D7FC               	bra	u5347
  1248  00217C                     l4819:
  1249                           
  1250                           ;main.c: 47:         if(port==2)
  1251  00217C  0E02               	movlw	2
  1252  00217E  0100               	movlb	0	; () banked
  1253  002180  19B0               	xorwf	main@port& (0+255),w,b
  1254  002182  11B1               	iorwf	(main@port+1)& (0+255),w,b
  1255  002184  A4D8               	btfss	status,2,c
  1256  002186  D019               	goto	l4833
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 48:         {;main.c: 49:             read_Uin();
  1260  002188  EC1D  F019         	call	_read_Uin	;wreg free
  1261                           
  1262                           ;main.c: 50:             write_Uin();
  1263  00218C  ECD6  F01C         	call	_write_Uin	;wreg free
  1264                           
  1265                           ;main.c: 51:             port=0;
  1266  002190  0E00               	movlw	0
  1267  002192  0100               	movlb	0	; () banked
  1268  002194  6FB1               	movwf	(main@port+1)& (0+255),b
  1269  002196  0E00               	movlw	0
  1270  002198  6FB0               	movwf	main@port& (0+255),b
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;main.c: 52:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1274  00219A  0ED0               	movlw	208
  1275  00219C  6E5E               	movwf	??_main& (0+255),c
  1276  00219E  0ECA               	movlw	202
  1277  0021A0                     u5357:
  1278  0021A0  2EE8               	decfsz	wreg,f,c
  1279  0021A2  D7FE               	bra	u5357
  1280  0021A4  2E5E               	decfsz	??_main& (0+255),f,c
  1281  0021A6  D7FC               	bra	u5357
  1282                           
  1283                           ;main.c: 53:             ADRESH=0X00;
  1284  0021A8  0E00               	movlw	0
  1285  0021AA  6EC4               	movwf	4036,c	;volatile
  1286                           
  1287                           ;main.c: 54:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1288  0021AC  0ED0               	movlw	208
  1289  0021AE  6E5E               	movwf	??_main& (0+255),c
  1290  0021B0  0ECA               	movlw	202
  1291  0021B2                     u5367:
  1292  0021B2  2EE8               	decfsz	wreg,f,c
  1293  0021B4  D7FE               	bra	u5367
  1294  0021B6  2E5E               	decfsz	??_main& (0+255),f,c
  1295  0021B8  D7FC               	bra	u5367
  1296  0021BA                     l4833:
  1297                           
  1298                           ;main.c: 57:         write_Power();
  1299  0021BA  ECB0  F01B         	call	_write_Power	;wreg free
  1300                           
  1301                           ;main.c: 59:         if(Uin>12)
  1302  0021BE  0E00               	movlw	0
  1303  0021C0  6E28               	movwf	___flge@ff1,c
  1304  0021C2  0E00               	movlw	0
  1305  0021C4  6E29               	movwf	___flge@ff1+1,c
  1306  0021C6  0E40               	movlw	64
  1307  0021C8  6E2A               	movwf	___flge@ff1+2,c
  1308  0021CA  0E41               	movlw	65
  1309  0021CC  6E2B               	movwf	___flge@ff1+3,c
  1310  0021CE  C0AA  F02C         	movff	main@Uin,___flge@ff2
  1311  0021D2  C0AB  F02D         	movff	main@Uin+1,___flge@ff2+1
  1312  0021D6  C0AC  F02E         	movff	main@Uin+2,___flge@ff2+2
  1313  0021DA  C0AD  F02F         	movff	main@Uin+3,___flge@ff2+3
  1314  0021DE  ECF2  F017         	call	___flge	;wreg free
  1315  0021E2  B0D8               	btfsc	status,0,c
  1316  0021E4  D07C               	goto	l4865
  1317                           
  1318                           ;main.c: 60:         {;main.c: 61:             set_boost(0);
  1319  0021E6  0E00               	movlw	0
  1320  0021E8  6E33               	movwf	set_boost@dty+1,c
  1321  0021EA  0E00               	movlw	0
  1322  0021EC  6E32               	movwf	set_boost@dty,c
  1323  0021EE  EC2E  F01B         	call	_set_boost	;wreg free
  1324                           
  1325                           ;main.c: 62:             CCPR2L=buck_pwm++;
  1326  0021F2  C0AE  FF67         	movff	main@buck_pwm,3943	;volatile
  1327  0021F6  0100               	movlb	0	; () banked
  1328  0021F8  4BAE               	infsnz	main@buck_pwm& (0+255),f,b
  1329  0021FA  2BAF               	incf	(main@buck_pwm+1)& (0+255),f,b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 63:             read_Iout();
  1333  0021FC  EC71  F017         	call	_read_Iout	;wreg free
  1334                           
  1335                           ;main.c: 64:             read_Uout();
  1336  002200  ECDE  F016         	call	_read_Uout	;wreg free
  1337                           
  1338                           ;main.c: 65:             Power_new=Uout*Iout;
  1339  002204  C0DA  F00F         	movff	_Uout,___flmul@b
  1340  002208  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1341  00220C  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1342  002210  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1343  002214  C0D6  F013         	movff	_Iout,___flmul@a
  1344  002218  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1345  00221C  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1346  002220  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1347  002224  ECB6  F00E         	call	___flmul	;wreg free
  1348  002228  C00F  F0B6         	movff	?___flmul,main@Power_new
  1349  00222C  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1350  002230  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1351  002234  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1352                           
  1353                           ;main.c: 66:             if(Power_new>Power)
  1354  002238  C0B2  F028         	movff	main@Power,___flge@ff1
  1355  00223C  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1356  002240  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1357  002244  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1358  002248  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1359  00224C  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1360  002250  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1361  002254  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1362  002258  ECF2  F017         	call	___flge	;wreg free
  1363  00225C  B0D8               	btfsc	status,0,c
  1364  00225E  D009               	goto	l4853
  1365  002260                     u5260:
  1366                           
  1367                           ;main.c: 67:             {;main.c: 68:                  Power=Power_new;
  1368  002260  C0B6  F0B2         	movff	main@Power_new,main@Power
  1369  002264  C0B7  F0B3         	movff	main@Power_new+1,main@Power+1
  1370  002268  C0B8  F0B4         	movff	main@Power_new+2,main@Power+2
  1371  00226C  C0B9  F0B5         	movff	main@Power_new+3,main@Power+3
  1372                           
  1373                           ;main.c: 69:             }
  1374  002270  D036               	goto	l4865
  1375  002272                     l4853:
  1376                           
  1377                           ;main.c: 71:             {;main.c: 72:                 CCPR2L=buck_pwm-2;
  1378  002272  0100               	movlb	0	; () banked
  1379  002274  51AE               	movf	main@buck_pwm& (0+255),w,b
  1380  002276  0FFE               	addlw	254
  1381  002278  6E67               	movwf	3943,c	;volatile
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;main.c: 73:                 read_Iout();
  1385  00227A  EC71  F017         	call	_read_Iout	;wreg free
  1386                           
  1387                           ;main.c: 74:                 read_Uout();
  1388  00227E  ECDE  F016         	call	_read_Uout	;wreg free
  1389                           
  1390                           ;main.c: 75:                 Power_new=Uout*Iout;
  1391  002282  C0DA  F00F         	movff	_Uout,___flmul@b
  1392  002286  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1393  00228A  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1394  00228E  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1395  002292  C0D6  F013         	movff	_Iout,___flmul@a
  1396  002296  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1397  00229A  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1398  00229E  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1399  0022A2  ECB6  F00E         	call	___flmul	;wreg free
  1400  0022A6  C00F  F0B6         	movff	?___flmul,main@Power_new
  1401  0022AA  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1402  0022AE  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1403  0022B2  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1404                           
  1405                           ;main.c: 76:                 if(Power_new>Power)
  1406  0022B6  C0B2  F028         	movff	main@Power,___flge@ff1
  1407  0022BA  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1408  0022BE  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1409  0022C2  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1410  0022C6  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1411  0022CA  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1412  0022CE  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1413  0022D2  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1414  0022D6  ECF2  F017         	call	___flge	;wreg free
  1415  0022DA  A0D8               	btfss	status,0,c
  1416  0022DC  D7C1               	goto	u5260
  1417  0022DE                     l4865:
  1418                           
  1419                           ;main.c: 83:         if(Uin<=12)
  1420  0022DE  0E00               	movlw	0
  1421  0022E0  6E28               	movwf	___flge@ff1,c
  1422  0022E2  0E00               	movlw	0
  1423  0022E4  6E29               	movwf	___flge@ff1+1,c
  1424  0022E6  0E40               	movlw	64
  1425  0022E8  6E2A               	movwf	___flge@ff1+2,c
  1426  0022EA  0E41               	movlw	65
  1427  0022EC  6E2B               	movwf	___flge@ff1+3,c
  1428  0022EE  C0AA  F02C         	movff	main@Uin,___flge@ff2
  1429  0022F2  C0AB  F02D         	movff	main@Uin+1,___flge@ff2+1
  1430  0022F6  C0AC  F02E         	movff	main@Uin+2,___flge@ff2+2
  1431  0022FA  C0AD  F02F         	movff	main@Uin+3,___flge@ff2+3
  1432  0022FE  ECF2  F017         	call	___flge	;wreg free
  1433  002302  A0D8               	btfss	status,0,c
  1434  002304  D6FF               	goto	l4791
  1435                           
  1436                           ;main.c: 84:         {;main.c: 85:             set_buck(90);
  1437  002306  0E00               	movlw	0
  1438  002308  6E33               	movwf	set_buck@dty+1,c
  1439  00230A  0E5A               	movlw	90
  1440  00230C  6E32               	movwf	set_buck@dty,c
  1441  00230E  ECED  F01A         	call	_set_buck	;wreg free
  1442                           
  1443                           ;main.c: 86:             CCPR1L=0;
  1444  002312  0E00               	movlw	0
  1445  002314  6EBE               	movwf	4030,c	;volatile
  1446                           
  1447                           ;main.c: 87:             read_Iout();
  1448  002316  EC71  F017         	call	_read_Iout	;wreg free
  1449                           
  1450                           ;main.c: 88:             read_Uout();
  1451  00231A  ECDE  F016         	call	_read_Uout	;wreg free
  1452                           
  1453                           ;main.c: 89:             Power_new=Uout*Iout;
  1454  00231E  C0DA  F00F         	movff	_Uout,___flmul@b
  1455  002322  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1456  002326  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1457  00232A  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1458  00232E  C0D6  F013         	movff	_Iout,___flmul@a
  1459  002332  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1460  002336  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1461  00233A  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1462  00233E  ECB6  F00E         	call	___flmul	;wreg free
  1463  002342  C00F  F0B6         	movff	?___flmul,main@Power_new
  1464  002346  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1465  00234A  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1466  00234E  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1467                           
  1468                           ;main.c: 90:             if(Power_new>Power)
  1469  002352  C0B2  F028         	movff	main@Power,___flge@ff1
  1470  002356  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1471  00235A  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1472  00235E  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1473  002362  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1474  002366  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1475  00236A  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1476  00236E  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1477  002372  ECF2  F017         	call	___flge	;wreg free
  1478  002376  B0D8               	btfsc	status,0,c
  1479  002378  D009               	goto	l4881
  1480  00237A                     u5290:
  1481                           
  1482                           ;main.c: 91:             {;main.c: 92:                  Power=Power_new;
  1483  00237A  C0B6  F0B2         	movff	main@Power_new,main@Power
  1484  00237E  C0B7  F0B3         	movff	main@Power_new+1,main@Power+1
  1485  002382  C0B8  F0B4         	movff	main@Power_new+2,main@Power+2
  1486  002386  C0B9  F0B5         	movff	main@Power_new+3,main@Power+3
  1487                           
  1488                           ;main.c: 93:             }
  1489  00238A  D6BC               	goto	l4791
  1490  00238C                     l4881:
  1491                           
  1492                           ;main.c: 95:             {;main.c: 97:                 read_Iout();
  1493  00238C  EC71  F017         	call	_read_Iout	;wreg free
  1494                           
  1495                           ;main.c: 98:                 read_Uout();
  1496  002390  ECDE  F016         	call	_read_Uout	;wreg free
  1497                           
  1498                           ;main.c: 99:                 Power_new=Uout*Iout;
  1499  002394  C0DA  F00F         	movff	_Uout,___flmul@b
  1500  002398  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1501  00239C  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1502  0023A0  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1503  0023A4  C0D6  F013         	movff	_Iout,___flmul@a
  1504  0023A8  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1505  0023AC  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1506  0023B0  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1507  0023B4  ECB6  F00E         	call	___flmul	;wreg free
  1508  0023B8  C00F  F0B6         	movff	?___flmul,main@Power_new
  1509  0023BC  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1510  0023C0  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1511  0023C4  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1512                           
  1513                           ;main.c: 100:                 if(Power_new>Power)
  1514  0023C8  C0B2  F028         	movff	main@Power,___flge@ff1
  1515  0023CC  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1516  0023D0  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1517  0023D4  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1518  0023D8  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1519  0023DC  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1520  0023E0  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1521  0023E4  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1522  0023E8  ECF2  F017         	call	___flge	;wreg free
  1523  0023EC  A0D8               	btfss	status,0,c
  1524  0023EE  D7C5               	goto	u5290
  1525  0023F0  D689               	goto	l4791
  1526  0023F2                     __end_of_main:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _write_Uout *****************
  1530 ;; Defined at:
  1531 ;;		line 85 in file "mppt.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    8
  1552 ;; This function calls:
  1553 ;;		_Lcd_Set_Cursor
  1554 ;;		_Lcd_Write_String
  1555 ;;		_sprintf
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text1
  1562  003B74                     __ptext1:
  1563                           	opt callstack 0
  1564  003B74                     _write_Uout:
  1565                           	opt callstack 22
  1566                           
  1567                           ;mppt.c: 87:     Lcd_Set_Cursor(1,1);
  1568                           
  1569                           ;incstack = 0
  1570  003B74  0E01               	movlw	1
  1571  003B76  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1572  003B78  0E01               	movlw	1
  1573  003B7A  EC61  F01E         	call	_Lcd_Set_Cursor
  1574                           
  1575                           ;mppt.c: 88:     Lcd_Write_String("U=");
  1576  003B7E  0E3F               	movlw	low STR_7
  1577  003B80  6E08               	movwf	Lcd_Write_String@a,c
  1578  003B82  0E10               	movlw	high STR_7
  1579  003B84  6E09               	movwf	Lcd_Write_String@a+1,c
  1580  003B86  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1581                           
  1582                           ;mppt.c: 89:     sprintf(str_V, "%.2f", Uout);
  1583  003B8A  0EF4               	movlw	low _str_V
  1584  003B8C  0100               	movlb	0	; () banked
  1585  003B8E  6F98               	movwf	sprintf@s& (0+255),b
  1586  003B90  0E00               	movlw	high _str_V
  1587  003B92  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1588  003B94  0E1B               	movlw	low STR_4
  1589  003B96  6F9A               	movwf	sprintf@fmt& (0+255),b
  1590  003B98  0E10               	movlw	high STR_4
  1591  003B9A  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1592  003B9C  C0DA  F09C         	movff	_Uout,?_sprintf+4
  1593  003BA0  C0DB  F09D         	movff	_Uout+1,?_sprintf+5
  1594  003BA4  C0DC  F09E         	movff	_Uout+2,?_sprintf+6
  1595  003BA8  C0DD  F09F         	movff	_Uout+3,?_sprintf+7
  1596  003BAC  EC38  F01E         	call	_sprintf	;wreg free
  1597                           
  1598                           ;mppt.c: 90:     Lcd_Set_Cursor(1,3);
  1599  003BB0  0E03               	movlw	3
  1600  003BB2  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1601  003BB4  0E01               	movlw	1
  1602  003BB6  EC61  F01E         	call	_Lcd_Set_Cursor
  1603                           
  1604                           ;mppt.c: 91:     Lcd_Write_String(str_V);
  1605  003BBA  0EF4               	movlw	low _str_V
  1606  003BBC  6E08               	movwf	Lcd_Write_String@a,c
  1607  003BBE  0E00               	movlw	high _str_V
  1608  003BC0  6E09               	movwf	Lcd_Write_String@a+1,c
  1609  003BC2  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1610  003BC6  0012               	return		;funcret
  1611  003BC8                     __end_of_write_Uout:
  1612                           	opt callstack 0
  1613                           
  1614 ;; *************** function _write_Uin *****************
  1615 ;; Defined at:
  1616 ;;		line 106 in file "mppt.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    8
  1637 ;; This function calls:
  1638 ;;		_Lcd_Set_Cursor
  1639 ;;		_Lcd_Write_String
  1640 ;;		_sprintf
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text2
  1647  0039AC                     __ptext2:
  1648                           	opt callstack 0
  1649  0039AC                     _write_Uin:
  1650                           	opt callstack 22
  1651                           
  1652                           ;mppt.c: 108:     Lcd_Set_Cursor(1,9);
  1653                           
  1654                           ;incstack = 0
  1655  0039AC  0E09               	movlw	9
  1656  0039AE  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1657  0039B0  0E01               	movlw	1
  1658  0039B2  EC61  F01E         	call	_Lcd_Set_Cursor
  1659                           
  1660                           ;mppt.c: 109:     Lcd_Write_String("Ui=");
  1661  0039B6  0E35               	movlw	low STR_9
  1662  0039B8  6E08               	movwf	Lcd_Write_String@a,c
  1663  0039BA  0E10               	movlw	high STR_9
  1664  0039BC  6E09               	movwf	Lcd_Write_String@a+1,c
  1665  0039BE  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1666                           
  1667                           ;mppt.c: 110:     sprintf(str_V, "%.2f", Uin);
  1668  0039C2  0EF4               	movlw	low _str_V
  1669  0039C4  0100               	movlb	0	; () banked
  1670  0039C6  6F98               	movwf	sprintf@s& (0+255),b
  1671  0039C8  0E00               	movlw	high _str_V
  1672  0039CA  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1673  0039CC  0E1B               	movlw	low STR_4
  1674  0039CE  6F9A               	movwf	sprintf@fmt& (0+255),b
  1675  0039D0  0E10               	movlw	high STR_4
  1676  0039D2  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1677  0039D4  C0DE  F09C         	movff	_Uin,?_sprintf+4
  1678  0039D8  C0DF  F09D         	movff	_Uin+1,?_sprintf+5
  1679  0039DC  C0E0  F09E         	movff	_Uin+2,?_sprintf+6
  1680  0039E0  C0E1  F09F         	movff	_Uin+3,?_sprintf+7
  1681  0039E4  EC38  F01E         	call	_sprintf	;wreg free
  1682                           
  1683                           ;mppt.c: 111:     Lcd_Set_Cursor(1,12);
  1684  0039E8  0E0C               	movlw	12
  1685  0039EA  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1686  0039EC  0E01               	movlw	1
  1687  0039EE  EC61  F01E         	call	_Lcd_Set_Cursor
  1688                           
  1689                           ;mppt.c: 112:     Lcd_Write_String(str_V);
  1690  0039F2  0EF4               	movlw	low _str_V
  1691  0039F4  6E08               	movwf	Lcd_Write_String@a,c
  1692  0039F6  0E00               	movlw	high _str_V
  1693  0039F8  6E09               	movwf	Lcd_Write_String@a+1,c
  1694  0039FA  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1695                           
  1696                           ;mppt.c: 113:     Lcd_Write_String(" V");
  1697  0039FE  0E45               	movlw	low STR_11
  1698  003A00  6E08               	movwf	Lcd_Write_String@a,c
  1699  003A02  0E10               	movlw	high STR_11
  1700  003A04  6E09               	movwf	Lcd_Write_String@a+1,c
  1701  003A06  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1702  003A0A  0012               	return		;funcret
  1703  003A0C                     __end_of_write_Uin:
  1704                           	opt callstack 0
  1705                           
  1706 ;; *************** function _write_Power *****************
  1707 ;; Defined at:
  1708 ;;		line 115 in file "mppt.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;Total ram usage:        0 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    8
  1729 ;; This function calls:
  1730 ;;		_Lcd_Set_Cursor
  1731 ;;		_Lcd_Write_String
  1732 ;;		___flmul
  1733 ;;		_sprintf
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text3
  1740  003760                     __ptext3:
  1741                           	opt callstack 0
  1742  003760                     _write_Power:
  1743                           	opt callstack 22
  1744                           
  1745                           ;mppt.c: 117:     Power_a=Uout*Iout;
  1746                           
  1747                           ;incstack = 0
  1748  003760  C0DA  F00F         	movff	_Uout,___flmul@b
  1749  003764  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1750  003768  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1751  00376C  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1752  003770  C0D6  F013         	movff	_Iout,___flmul@a
  1753  003774  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1754  003778  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1755  00377C  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1756  003780  ECB6  F00E         	call	___flmul	;wreg free
  1757  003784  C00F  F0C2         	movff	?___flmul,_Power_a
  1758  003788  C010  F0C3         	movff	?___flmul+1,_Power_a+1
  1759  00378C  C011  F0C4         	movff	?___flmul+2,_Power_a+2
  1760  003790  C012  F0C5         	movff	?___flmul+3,_Power_a+3
  1761                           
  1762                           ;mppt.c: 118:     Lcd_Set_Cursor(2,10);
  1763  003794  0E0A               	movlw	10
  1764  003796  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1765  003798  0E02               	movlw	2
  1766  00379A  EC61  F01E         	call	_Lcd_Set_Cursor
  1767                           
  1768                           ;mppt.c: 119:     sprintf(str_P, "%.2f", Power_a);
  1769  00379E  0E50               	movlw	low _str_P
  1770  0037A0  0100               	movlb	0	; () banked
  1771  0037A2  6F98               	movwf	sprintf@s& (0+255),b
  1772  0037A4  0E01               	movlw	high _str_P
  1773  0037A6  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1774  0037A8  0E1B               	movlw	low STR_4
  1775  0037AA  6F9A               	movwf	sprintf@fmt& (0+255),b
  1776  0037AC  0E10               	movlw	high STR_4
  1777  0037AE  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1778  0037B0  C0C2  F09C         	movff	_Power_a,?_sprintf+4
  1779  0037B4  C0C3  F09D         	movff	_Power_a+1,?_sprintf+5
  1780  0037B8  C0C4  F09E         	movff	_Power_a+2,?_sprintf+6
  1781  0037BC  C0C5  F09F         	movff	_Power_a+3,?_sprintf+7
  1782  0037C0  EC38  F01E         	call	_sprintf	;wreg free
  1783                           
  1784                           ;mppt.c: 120:     Lcd_Write_String(str_P);
  1785  0037C4  0E50               	movlw	low _str_P
  1786  0037C6  6E08               	movwf	Lcd_Write_String@a,c
  1787  0037C8  0E01               	movlw	high _str_P
  1788  0037CA  6E09               	movwf	Lcd_Write_String@a+1,c
  1789  0037CC  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1790                           
  1791                           ;mppt.c: 121:     Lcd_Write_String(" W");
  1792  0037D0  0E48               	movlw	low STR_13
  1793  0037D2  6E08               	movwf	Lcd_Write_String@a,c
  1794  0037D4  0E10               	movlw	high STR_13
  1795  0037D6  6E09               	movwf	Lcd_Write_String@a+1,c
  1796  0037D8  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1797  0037DC  0012               	return		;funcret
  1798  0037DE                     __end_of_write_Power:
  1799                           	opt callstack 0
  1800                           
  1801 ;; *************** function _write_Iout *****************
  1802 ;; Defined at:
  1803 ;;		line 48 in file "mppt.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    8
  1824 ;; This function calls:
  1825 ;;		_Lcd_Set_Cursor
  1826 ;;		_Lcd_Write_String
  1827 ;;		_sprintf
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text4
  1834  003A0C                     __ptext4:
  1835                           	opt callstack 0
  1836  003A0C                     _write_Iout:
  1837                           	opt callstack 22
  1838                           
  1839                           ;mppt.c: 50:     Lcd_Set_Cursor(2,1);
  1840                           
  1841                           ;incstack = 0
  1842  003A0C  0E01               	movlw	1
  1843  003A0E  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1844  003A10  0E02               	movlw	2
  1845  003A12  EC61  F01E         	call	_Lcd_Set_Cursor
  1846                           
  1847                           ;mppt.c: 51:     Lcd_Write_String("I=");
  1848  003A16  0E3C               	movlw	low STR_3
  1849  003A18  6E08               	movwf	Lcd_Write_String@a,c
  1850  003A1A  0E10               	movlw	high STR_3
  1851  003A1C  6E09               	movwf	Lcd_Write_String@a+1,c
  1852  003A1E  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1853                           
  1854                           ;mppt.c: 52:     sprintf(str_A, "%.2f", Iout);
  1855  003A22  0E58               	movlw	low _str_A
  1856  003A24  0100               	movlb	0	; () banked
  1857  003A26  6F98               	movwf	sprintf@s& (0+255),b
  1858  003A28  0E01               	movlw	high _str_A
  1859  003A2A  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1860  003A2C  0E1B               	movlw	low STR_4
  1861  003A2E  6F9A               	movwf	sprintf@fmt& (0+255),b
  1862  003A30  0E10               	movlw	high STR_4
  1863  003A32  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1864  003A34  C0D6  F09C         	movff	_Iout,?_sprintf+4
  1865  003A38  C0D7  F09D         	movff	_Iout+1,?_sprintf+5
  1866  003A3C  C0D8  F09E         	movff	_Iout+2,?_sprintf+6
  1867  003A40  C0D9  F09F         	movff	_Iout+3,?_sprintf+7
  1868  003A44  EC38  F01E         	call	_sprintf	;wreg free
  1869                           
  1870                           ;mppt.c: 53:     Lcd_Set_Cursor(2,3);
  1871  003A48  0E03               	movlw	3
  1872  003A4A  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1873  003A4C  0E02               	movlw	2
  1874  003A4E  EC61  F01E         	call	_Lcd_Set_Cursor
  1875                           
  1876                           ;mppt.c: 54:     Lcd_Write_String(str_A);
  1877  003A52  0E58               	movlw	low _str_A
  1878  003A54  6E08               	movwf	Lcd_Write_String@a,c
  1879  003A56  0E01               	movlw	high _str_A
  1880  003A58  6E09               	movwf	Lcd_Write_String@a+1,c
  1881  003A5A  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1882                           
  1883                           ;mppt.c: 55:     Lcd_Write_String(" A");
  1884  003A5E  0E42               	movlw	low STR_5
  1885  003A60  6E08               	movwf	Lcd_Write_String@a,c
  1886  003A62  0E10               	movlw	high STR_5
  1887  003A64  6E09               	movwf	Lcd_Write_String@a+1,c
  1888  003A66  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  1889  003A6A  0012               	return		;funcret
  1890  003A6C                     __end_of_write_Iout:
  1891                           	opt callstack 0
  1892                           
  1893 ;; *************** function _sprintf *****************
  1894 ;; Defined at:
  1895 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1898 ;;		 -> str_P(8), str_V(8), str_A(8), 
  1899 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1900 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  f               6   68[BANK0 ] struct _IO_FILE
  1903 ;;  ap              2   66[BANK0 ] PTR void [1]
  1904 ;;		 -> ?_sprintf(2), 
  1905 ;;  ret             2    0        int 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2   56[BANK0 ] int 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:       18 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    7
  1922 ;; This function calls:
  1923 ;;		_vfprintf
  1924 ;; This function is called by:
  1925 ;;		_write_Iout
  1926 ;;		_write_Uout
  1927 ;;		_write_Uin
  1928 ;;		_write_Power
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text5
  1933  003C70                     __ptext5:
  1934                           	opt callstack 0
  1935  003C70                     _sprintf:
  1936                           	opt callstack 22
  1937                           
  1938                           ;incstack = 0
  1939  003C70  0E9C               	movlw	low (?_sprintf+4)
  1940  003C72  0100               	movlb	0	; () banked
  1941  003C74  6FA2               	movwf	sprintf@ap& (0+255),b
  1942  003C76  0E00               	movlw	high (?_sprintf+4)
  1943  003C78  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1944  003C7A  C098  F0A4         	movff	sprintf@s,sprintf@f
  1945  003C7E  C099  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1946                           
  1947                           ; BSR set to: 0
  1948  003C82  0E00               	movlw	0
  1949  003C84  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1950  003C86  0E00               	movlw	0
  1951  003C88  6FA6               	movwf	(sprintf@f+2)& (0+255),b
  1952                           
  1953                           ; BSR set to: 0
  1954  003C8A  0E00               	movlw	0
  1955  003C8C  6FA9               	movwf	(sprintf@f+5)& (0+255),b
  1956  003C8E  0E00               	movlw	0
  1957  003C90  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1958                           
  1959                           ; BSR set to: 0
  1960  003C92  0EA4               	movlw	low sprintf@f
  1961  003C94  6E56               	movwf	vfprintf@fp,c
  1962  003C96  0E00               	movlw	high sprintf@f
  1963  003C98  6E57               	movwf	vfprintf@fp+1,c
  1964  003C9A  C09A  F058         	movff	sprintf@fmt,vfprintf@fmt
  1965  003C9E  C09B  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1966  003CA2  0EA2               	movlw	low sprintf@ap
  1967  003CA4  6E5A               	movwf	vfprintf@ap,c
  1968  003CA6  0E00               	movlw	high sprintf@ap
  1969  003CA8  6E5B               	movwf	vfprintf@ap+1,c
  1970  003CAA  EC8F  F01D         	call	_vfprintf	;wreg free
  1971  003CAE  0100               	movlb	0	; () banked
  1972  003CB0  51A6               	movf	(sprintf@f+2)& (0+255),w,b
  1973  003CB2  2598               	addwf	sprintf@s& (0+255),w,b
  1974  003CB4  6ED9               	movwf	fsr2l,c
  1975  003CB6  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1976  003CB8  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1977  003CBA  6EDA               	movwf	fsr2h,c
  1978  003CBC  0E00               	movlw	0
  1979  003CBE  6EDF               	movwf	indf2,c
  1980                           
  1981                           ; BSR set to: 0
  1982  003CC0  0012               	return		;funcret
  1983  003CC2                     __end_of_sprintf:
  1984                           	opt callstack 0
  1985                           
  1986 ;; *************** function _vfprintf *****************
  1987 ;; Defined at:
  1988 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1991 ;;		 -> sprintf@f(6), 
  1992 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1993 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  1994 ;;  ap              2   89[COMRAM] PTR PTR void 
  1995 ;;		 -> sprintf@ap(2), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1998 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  2   85[COMRAM] int 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2008 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;Total ram usage:        8 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    6
  2015 ;; This function calls:
  2016 ;;		_vfpfcnvrt
  2017 ;; This function is called by:
  2018 ;;		_sprintf
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text6
  2023  003B1E                     __ptext6:
  2024                           	opt callstack 0
  2025  003B1E                     _vfprintf:
  2026                           	opt callstack 22
  2027                           
  2028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;incstack = 0
  2032  003B1E  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2033  003B22  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2034                           
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2036  003B26  0E00               	movlw	0
  2037  003B28  0100               	movlb	0	; () banked
  2038  003B2A  6FE3               	movwf	(_nout+1)& (0+255),b
  2039  003B2C  0E00               	movlw	0
  2040  003B2E  6FE2               	movwf	_nout& (0+255),b
  2041                           
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2043  003B30  D013               	goto	l4431
  2044  003B32                     l4429:
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2048  003B32  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2049  003B36  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2050  003B3A  0E5C               	movlw	low vfprintf@cfmt
  2051  003B3C  6E42               	movwf	vfpfcnvrt@fmt,c
  2052  003B3E  0E00               	movlw	high vfprintf@cfmt
  2053  003B40  6E43               	movwf	vfpfcnvrt@fmt+1,c
  2054  003B42  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2055  003B46  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2056  003B4A  ECE4  F00C         	call	_vfpfcnvrt	;wreg free
  2057  003B4E  5040               	movf	?_vfpfcnvrt,w,c
  2058  003B50  0100               	movlb	0	; () banked
  2059  003B52  27E2               	addwf	_nout& (0+255),f,b
  2060  003B54  5041               	movf	?_vfpfcnvrt+1,w,c
  2061  003B56  23E3               	addwfc	(_nout+1)& (0+255),f,b
  2062  003B58                     l4431:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2066  003B58  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2067  003B5C  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2068  003B60                     	if	0	;tblptru may be non-zero
  2069  003B60                     	endif
  2070  003B60                     	if	0	;tblptru may be non-zero
  2071  003B60                     	endif
  2072  003B60  0008               	tblrd		*
  2073  003B62  50F5               	movf	tablat,w,c
  2074  003B64  0900               	iorlw	0
  2075  003B66  A4D8               	btfss	status,2,c
  2076  003B68  D7E4               	goto	l4429
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2080  003B6A  C0E2  F056         	movff	_nout,?_vfprintf
  2081  003B6E  C0E3  F057         	movff	_nout+1,?_vfprintf+1
  2082                           
  2083                           ; BSR set to: 0
  2084  003B72  0012               	return		;funcret
  2085  003B74                     __end_of_vfprintf:
  2086                           	opt callstack 0
  2087                           
  2088 ;; *************** function _vfpfcnvrt *****************
  2089 ;; Defined at:
  2090 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2093 ;;		 -> sprintf@f(6), 
  2094 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2095 ;;		 -> vfprintf@cfmt(2), 
  2096 ;;  ap              2   67[COMRAM] PTR PTR void 
  2097 ;;		 -> sprintf@ap(2), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  llu             8    0        unsigned long long 
  2100 ;;  ll              8    0        long long 
  2101 ;;  f               4   77[COMRAM] long long 
  2102 ;;  ct              3   81[COMRAM] unsigned char [3]
  2103 ;;  vp              3    0        PTR void 
  2104 ;;  cp              3    0        PTR unsigned char 
  2105 ;;  i               2    0        int 
  2106 ;;  done            2    0        int 
  2107 ;;  c               1   84[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2   63[COMRAM] int 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:       22 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    5
  2124 ;; This function calls:
  2125 ;;		_atoi
  2126 ;;		_efgtoa
  2127 ;;		_fputc
  2128 ;;		_isdigit
  2129 ;;		_isupper
  2130 ;;		_strncmp
  2131 ;;		_tolower
  2132 ;; This function is called by:
  2133 ;;		_vfprintf
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text7
  2138  0019C8                     __ptext7:
  2139                           	opt callstack 0
  2140  0019C8                     _vfpfcnvrt:
  2141                           	opt callstack 22
  2142                           
  2143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;incstack = 0
  2147  0019C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  0019CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  0019D0  CFDE FFF6          	movff	postinc2,tblptrl
  2150  0019D4  CFDD FFF7          	movff	postdec2,tblptrh
  2151  0019D8                     	if	0	;tblptru may be non-zero
  2152  0019D8                     	endif
  2153  0019D8                     	if	0	;tblptru may be non-zero
  2154  0019D8                     	endif
  2155  0019D8  0008               	tblrd		*
  2156  0019DA  50F5               	movf	tablat,w,c
  2157  0019DC  0A25               	xorlw	37
  2158  0019DE  A4D8               	btfss	status,2,c
  2159  0019E0  D1AB               	goto	l4379
  2160                           
  2161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2162  0019E2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2163  0019E6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2164  0019EA  2ADE               	incf	postinc2,f,c
  2165  0019EC  0E00               	movlw	0
  2166  0019EE  22DD               	addwfc	postdec2,f,c
  2167                           
  2168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2169  0019F0  0E00               	movlw	0
  2170  0019F2  0100               	movlb	0	; () banked
  2171  0019F4  6FE5               	movwf	(_width+1)& (0+255),b
  2172  0019F6  0E00               	movlw	0
  2173  0019F8  6FE4               	movwf	_width& (0+255),b
  2174  0019FA  C0E4  F0E8         	movff	_width,_flags
  2175  0019FE  C0E5  F0E9         	movff	_width+1,_flags+1
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2179  001A02  69E6               	setf	_prec& (0+255),b
  2180  001A04  69E7               	setf	(_prec+1)& (0+255),b
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2184  001A06  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2185  001A0A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2186  001A0E  CFDE FFF6          	movff	postinc2,tblptrl
  2187  001A12  CFDD FFF7          	movff	postdec2,tblptrh
  2188  001A16                     	if	0	;tblptru may be non-zero
  2189  001A16                     	endif
  2190  001A16                     	if	0	;tblptru may be non-zero
  2191  001A16                     	endif
  2192  001A16  0008               	tblrd		*
  2193  001A18  50F5               	movf	tablat,w,c
  2194  001A1A  0A2E               	xorlw	46
  2195  001A1C  A4D8               	btfss	status,2,c
  2196  001A1E  D06D               	goto	u4840
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2200  001A20  0E00               	movlw	0
  2201  001A22  6FE7               	movwf	(_prec+1)& (0+255),b
  2202  001A24  0E00               	movlw	0
  2203  001A26  6FE6               	movwf	_prec& (0+255),b
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2207  001A28  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2208  001A2C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2209  001A30  2ADE               	incf	postinc2,f,c
  2210  001A32  0E00               	movlw	0
  2211  001A34  22DD               	addwfc	postdec2,f,c
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2215  001A36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216  001A3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  001A3E  CFDE FFF6          	movff	postinc2,tblptrl
  2218  001A42  CFDD FFF7          	movff	postdec2,tblptrh
  2219  001A46                     	if	0	;tblptru may be non-zero
  2220  001A46                     	endif
  2221  001A46                     	if	0	;tblptru may be non-zero
  2222  001A46                     	endif
  2223  001A46  0008               	tblrd		*
  2224  001A48  50F5               	movf	tablat,w,c
  2225  001A4A  0A2A               	xorlw	42
  2226  001A4C  A4D8               	btfss	status,2,c
  2227  001A4E  D01C               	goto	l4315
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2231  001A50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2232  001A54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2233  001A58  2ADE               	incf	postinc2,f,c
  2234  001A5A  0E00               	movlw	0
  2235  001A5C  22DD               	addwfc	postdec2,f,c
  2236                           
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2238  001A5E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2239  001A62  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2240  001A66  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2241  001A6A  0E02               	movlw	2
  2242  001A6C  26DE               	addwf	postinc2,f,c
  2243  001A6E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2244  001A72  0E00               	movlw	0
  2245  001A74  22DD               	addwfc	postdec2,f,c
  2246  001A76  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2247  001A7A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2248  001A7E  CFDE F0E6          	movff	postinc2,_prec
  2249  001A82  CFDD F0E7          	movff	postdec2,_prec+1
  2250                           
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2252  001A86  D039               	goto	u4840
  2253  001A88                     l4315:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2257  001A88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  001A8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  001A90  CFDE F008          	movff	postinc2,atoi@s
  2260  001A94  CFDD F009          	movff	postdec2,atoi@s+1
  2261  001A98  EC9E  F015         	call	_atoi	;wreg free
  2262  001A9C  C008  F0E6         	movff	?_atoi,_prec
  2263  001AA0  C009  F0E7         	movff	?_atoi+1,_prec+1
  2264                           
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2266  001AA4  D007               	goto	l4319
  2267  001AA6                     l4317:
  2268                           
  2269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2270  001AA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2271  001AAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2272  001AAE  2ADE               	incf	postinc2,f,c
  2273  001AB0  0E00               	movlw	0
  2274  001AB2  22DD               	addwfc	postdec2,f,c
  2275  001AB4                     l4319:
  2276  001AB4  0ED0               	movlw	208
  2277  001AB6  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2278  001AB8  0EFF               	movlw	255
  2279  001ABA  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2280  001ABC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  001AC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  001AC4  CFDE FFF6          	movff	postinc2,tblptrl
  2283  001AC8  CFDD FFF7          	movff	postdec2,tblptrh
  2284  001ACC                     	if	0	;tblptru may be non-zero
  2285  001ACC                     	endif
  2286  001ACC                     	if	0	;tblptru may be non-zero
  2287  001ACC                     	endif
  2288  001ACC  0008               	tblrd		*
  2289  001ACE  50F5               	movf	tablat,w,c
  2290  001AD0  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2291  001AD2  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2292  001AD4  5046               	movf	??_vfpfcnvrt,w,c
  2293  001AD6  2648               	addwf	??_vfpfcnvrt+2,f,c
  2294  001AD8  5047               	movf	??_vfpfcnvrt+1,w,c
  2295  001ADA  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2296  001ADC  5049               	movf	??_vfpfcnvrt+3,w,c
  2297  001ADE  E106               	bnz	u4820
  2298  001AE0  0E0A               	movlw	10
  2299  001AE2  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2300  001AE4  B0D8               	btfsc	status,0,c
  2301  001AE6  D002               	goto	u4820
  2302  001AE8  0E01               	movlw	1
  2303  001AEA  D001               	goto	u4830
  2304  001AEC                     u4820:
  2305  001AEC  0E00               	movlw	0
  2306  001AEE                     u4830:
  2307  001AEE  6E4A               	movwf	_vfpfcnvrt$805,c
  2308  001AF0  6A4B               	clrf	_vfpfcnvrt$805+1,c
  2309  001AF2  504A               	movf	_vfpfcnvrt$805,w,c
  2310  001AF4  104B               	iorwf	_vfpfcnvrt$805+1,w,c
  2311  001AF6  A4D8               	btfss	status,2,c
  2312  001AF8  D7D6               	goto	l4317
  2313  001AFA                     u4840:
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2316  001AFA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2317  001AFE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2318  001B02  CFDE FFF6          	movff	postinc2,tblptrl
  2319  001B06  CFDD FFF7          	movff	postdec2,tblptrh
  2320  001B0A                     	if	0	;tblptru may be non-zero
  2321  001B0A                     	endif
  2322  001B0A                     	if	0	;tblptru may be non-zero
  2323  001B0A                     	endif
  2324  001B0A  0008               	tblrd		*
  2325  001B0C  50F5               	movf	tablat,w,c
  2326  001B0E  6E07               	movwf	tolower@c,c
  2327  001B10  6A08               	clrf	tolower@c+1,c
  2328  001B12  EC89  F01E         	call	_tolower	;wreg free
  2329  001B16  5007               	movf	?_tolower,w,c
  2330  001B18  6E52               	movwf	vfpfcnvrt@ct,c
  2331                           
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2333  001B1A  5052               	movf	vfpfcnvrt@ct,w,c
  2334  001B1C  B4D8               	btfsc	status,2,c
  2335  001B1E  D033               	goto	l4335
  2336                           
  2337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2338  001B20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2339  001B24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  001B28  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2341  001B2C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2342  001B30  0E01               	movlw	1
  2343  001B32  2646               	addwf	??_vfpfcnvrt,f,c
  2344  001B34  0E00               	movlw	0
  2345  001B36  2247               	addwfc	??_vfpfcnvrt+1,f,c
  2346  001B38  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2347  001B3C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2348  001B40                     	if	0	;tblptru may be non-zero
  2349  001B40                     	endif
  2350  001B40                     	if	0	;tblptru may be non-zero
  2351  001B40                     	endif
  2352  001B40  0008               	tblrd		*
  2353  001B42  50F5               	movf	tablat,w,c
  2354  001B44  6E07               	movwf	tolower@c,c
  2355  001B46  6A08               	clrf	tolower@c+1,c
  2356  001B48  EC89  F01E         	call	_tolower	;wreg free
  2357  001B4C  5007               	movf	?_tolower,w,c
  2358  001B4E  6E53               	movwf	vfpfcnvrt@ct+1,c
  2359                           
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2361  001B50  5053               	movf	vfpfcnvrt@ct+1,w,c
  2362  001B52  B4D8               	btfsc	status,2,c
  2363  001B54  D018               	goto	l4335
  2364                           
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2366  001B56  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2367  001B5A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2368  001B5E  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2369  001B62  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2370  001B66  0E02               	movlw	2
  2371  001B68  2646               	addwf	??_vfpfcnvrt,f,c
  2372  001B6A  0E00               	movlw	0
  2373  001B6C  2247               	addwfc	??_vfpfcnvrt+1,f,c
  2374  001B6E  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2375  001B72  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2376  001B76                     	if	0	;tblptru may be non-zero
  2377  001B76                     	endif
  2378  001B76                     	if	0	;tblptru may be non-zero
  2379  001B76                     	endif
  2380  001B76  0008               	tblrd		*
  2381  001B78  50F5               	movf	tablat,w,c
  2382  001B7A  6E07               	movwf	tolower@c,c
  2383  001B7C  6A08               	clrf	tolower@c+1,c
  2384  001B7E  EC89  F01E         	call	_tolower	;wreg free
  2385  001B82  5007               	movf	?_tolower,w,c
  2386  001B84  6E54               	movwf	vfpfcnvrt@ct+2,c
  2387  001B86                     l4335:
  2388                           
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2390  001B86  0E66               	movlw	102
  2391  001B88  1852               	xorwf	vfpfcnvrt@ct,w,c
  2392  001B8A  A4D8               	btfss	status,2,c
  2393  001B8C  D03F               	goto	l4347
  2394                           
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2396  001B8E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  001B92  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  001B96  CFDE FFF6          	movff	postinc2,tblptrl
  2399  001B9A  CFDD FFF7          	movff	postdec2,tblptrh
  2400  001B9E                     	if	0	;tblptru may be non-zero
  2401  001B9E                     	endif
  2402  001B9E                     	if	0	;tblptru may be non-zero
  2403  001B9E                     	endif
  2404  001B9E  0008               	tblrd		*
  2405  001BA0  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  2406                           
  2407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2408  001BA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2409  001BA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2410  001BAC  2ADE               	incf	postinc2,f,c
  2411  001BAE  0E00               	movlw	0
  2412  001BB0  22DD               	addwfc	postdec2,f,c
  2413                           
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2415  001BB2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2416  001BB6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2417  001BBA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2418  001BBE  0E04               	movlw	4
  2419  001BC0  26DE               	addwf	postinc2,f,c
  2420  001BC2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2421  001BC6  0E00               	movlw	0
  2422  001BC8  22DD               	addwfc	postdec2,f,c
  2423  001BCA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2424  001BCE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2425  001BD2  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  2426  001BD6  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  2427  001BDA  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  2428  001BDE  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  2429  001BE2                     l4343:
  2430                           
  2431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2432  001BE2  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2433  001BE6  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2434  001BEA  C04E  F036         	movff	vfpfcnvrt@f,efgtoa@f
  2435  001BEE  C04F  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2436  001BF2  C050  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2437  001BF6  C051  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2438  001BFA  C055  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  2439  001BFE  EC26  F008         	call	_efgtoa	;wreg free
  2440  001C02  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  2441  001C06  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2442  001C0A  0012               	return	
  2443  001C0C                     l4347:
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2446  001C0C  0E52               	movlw	low vfpfcnvrt@ct
  2447  001C0E  6E01               	movwf	strncmp@_l,c
  2448  001C10  0E00               	movlw	high vfpfcnvrt@ct
  2449  001C12  6E02               	movwf	strncmp@_l+1,c
  2450  001C14  0E39               	movlw	low STR_22
  2451  001C16  6E03               	movwf	strncmp@_r,c
  2452  001C18  0E10               	movlw	high STR_22
  2453  001C1A  6E04               	movwf	strncmp@_r+1,c
  2454  001C1C  0E00               	movlw	0
  2455  001C1E  6E06               	movwf	strncmp@n+1,c
  2456  001C20  0E02               	movlw	2
  2457  001C22  6E05               	movwf	strncmp@n,c
  2458  001C24  EC78  F019         	call	_strncmp	;wreg free
  2459  001C28  5001               	movf	?_strncmp,w,c
  2460  001C2A  1002               	iorwf	?_strncmp+1,w,c
  2461  001C2C  A4D8               	btfss	status,2,c
  2462  001C2E  D055               	goto	l4363
  2463                           
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2465  001C30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2466  001C34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2467  001C38  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2468  001C3C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2469  001C40  0E01               	movlw	1
  2470  001C42  2646               	addwf	??_vfpfcnvrt,f,c
  2471  001C44  0E00               	movlw	0
  2472  001C46  2247               	addwfc	??_vfpfcnvrt+1,f,c
  2473  001C48  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2474  001C4C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2475  001C50                     	if	0	;tblptru may be non-zero
  2476  001C50                     	endif
  2477  001C50                     	if	0	;tblptru may be non-zero
  2478  001C50                     	endif
  2479  001C50  0008               	tblrd		*
  2480  001C52  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  2481  001C56  0EBF               	movlw	191
  2482  001C58  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2483  001C5A  0EFF               	movlw	255
  2484  001C5C  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2485  001C5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2486  001C62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2487  001C66  CFDE FFF6          	movff	postinc2,tblptrl
  2488  001C6A  CFDD FFF7          	movff	postdec2,tblptrh
  2489  001C6E                     	if	0	;tblptru may be non-zero
  2490  001C6E                     	endif
  2491  001C6E                     	if	0	;tblptru may be non-zero
  2492  001C6E                     	endif
  2493  001C6E  0008               	tblrd		*
  2494  001C70  50F5               	movf	tablat,w,c
  2495  001C72  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2496  001C74  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2497  001C76  5046               	movf	??_vfpfcnvrt,w,c
  2498  001C78  2648               	addwf	??_vfpfcnvrt+2,f,c
  2499  001C7A  5047               	movf	??_vfpfcnvrt+1,w,c
  2500  001C7C  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2501  001C7E  5049               	movf	??_vfpfcnvrt+3,w,c
  2502  001C80  E106               	bnz	u4890
  2503  001C82  0E1A               	movlw	26
  2504  001C84  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2505  001C86  B0D8               	btfsc	status,0,c
  2506  001C88  D002               	goto	u4890
  2507  001C8A  0E01               	movlw	1
  2508  001C8C  D001               	goto	u4900
  2509  001C8E                     u4890:
  2510  001C8E  0E00               	movlw	0
  2511  001C90                     u4900:
  2512  001C90  6E4C               	movwf	_vfpfcnvrt$809,c
  2513  001C92  6A4D               	clrf	_vfpfcnvrt$809+1,c
  2514  001C94  504C               	movf	_vfpfcnvrt$809,w,c
  2515  001C96  104D               	iorwf	_vfpfcnvrt$809+1,w,c
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2518                           
  2519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2520                           
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2522  001C98  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2523  001C9C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2524  001CA0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2525  001CA4  0E04               	movlw	4
  2526  001CA6  26DE               	addwf	postinc2,f,c
  2527  001CA8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2528  001CAC  0E00               	movlw	0
  2529  001CAE  22DD               	addwfc	postdec2,f,c
  2530  001CB0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2531  001CB4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2532  001CB8  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  2533  001CBC  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  2534  001CC0  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  2535  001CC4  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  2536                           
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2540  001CC8  0E02               	movlw	2
  2541  001CCA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2542  001CCE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2543  001CD2  26DE               	addwf	postinc2,f,c
  2544  001CD4  0E00               	movlw	0
  2545  001CD6  22DD               	addwfc	postdec2,f,c
  2546  001CD8  D784               	goto	l4343
  2547  001CDA                     l4363:
  2548                           
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2550  001CDA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2551  001CDE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2552  001CE2  CFDE FFF6          	movff	postinc2,tblptrl
  2553  001CE6  CFDD FFF7          	movff	postdec2,tblptrh
  2554  001CEA                     	if	0	;tblptru may be non-zero
  2555  001CEA                     	endif
  2556  001CEA                     	if	0	;tblptru may be non-zero
  2557  001CEA                     	endif
  2558  001CEA  0008               	tblrd		*
  2559  001CEC  50F5               	movf	tablat,w,c
  2560  001CEE  0A25               	xorlw	37
  2561  001CF0  A4D8               	btfss	status,2,c
  2562  001CF2  D016               	goto	l4373
  2563                           
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2565  001CF4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566  001CF8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  001CFC  2ADE               	incf	postinc2,f,c
  2568  001CFE  0E00               	movlw	0
  2569  001D00  22DD               	addwfc	postdec2,f,c
  2570                           
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2572  001D02  0E00               	movlw	0
  2573  001D04  6E02               	movwf	fputc@c+1,c
  2574  001D06  0E25               	movlw	37
  2575  001D08  6E01               	movwf	fputc@c,c
  2576  001D0A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2577  001D0E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2578  001D12  ECC9  F019         	call	_fputc	;wreg free
  2579  001D16                     l4369:
  2580                           
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2582  001D16  0E00               	movlw	0
  2583  001D18  6E41               	movwf	?_vfpfcnvrt+1,c
  2584  001D1A  0E01               	movlw	1
  2585  001D1C  6E40               	movwf	?_vfpfcnvrt,c
  2586  001D1E  0012               	return	
  2587  001D20                     l4373:
  2588                           
  2589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2590  001D20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2591  001D24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2592  001D28  2ADE               	incf	postinc2,f,c
  2593  001D2A  0E00               	movlw	0
  2594  001D2C  22DD               	addwfc	postdec2,f,c
  2595                           
  2596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2597  001D2E  0E00               	movlw	0
  2598  001D30  6E41               	movwf	?_vfpfcnvrt+1,c
  2599  001D32  0E00               	movlw	0
  2600  001D34  6E40               	movwf	?_vfpfcnvrt,c
  2601  001D36  0012               	return	
  2602  001D38                     l4379:
  2603                           
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2605  001D38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2606  001D3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2607  001D40  CFDE FFF6          	movff	postinc2,tblptrl
  2608  001D44  CFDD FFF7          	movff	postdec2,tblptrh
  2609  001D48                     	if	0	;tblptru may be non-zero
  2610  001D48                     	endif
  2611  001D48                     	if	0	;tblptru may be non-zero
  2612  001D48                     	endif
  2613  001D48  0008               	tblrd		*
  2614  001D4A  50F5               	movf	tablat,w,c
  2615  001D4C  6E01               	movwf	fputc@c,c
  2616  001D4E  6A02               	clrf	fputc@c+1,c
  2617  001D50  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2618  001D54  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2619  001D58  ECC9  F019         	call	_fputc	;wreg free
  2620                           
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2622  001D5C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2623  001D60  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2624  001D64  2ADE               	incf	postinc2,f,c
  2625  001D66  0E00               	movlw	0
  2626  001D68  22DD               	addwfc	postdec2,f,c
  2627  001D6A  D7D5               	goto	l4369
  2628  001D6C                     __end_of_vfpfcnvrt:
  2629                           	opt callstack 0
  2630                           
  2631 ;; *************** function _strncmp *****************
  2632 ;; Defined at:
  2633 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2636 ;;		 -> vfpfcnvrt@ct(3), 
  2637 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2638 ;;		 -> STR_24(3), 
  2639 ;;  n               2    4[COMRAM] unsigned int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2642 ;;		 -> STR_24(3), 
  2643 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2644 ;;		 -> vfpfcnvrt@ct(3), 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    0[COMRAM] int 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:       11 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_vfpfcnvrt
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text8
  2668  0032F0                     __ptext8:
  2669                           	opt callstack 0
  2670  0032F0                     _strncmp:
  2671                           	opt callstack 26
  2672                           
  2673                           ;incstack = 0
  2674  0032F0  C001  F008         	movff	strncmp@_l,strncmp@l
  2675  0032F4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2676  0032F8  C003  F00A         	movff	strncmp@_r,strncmp@r
  2677  0032FC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2678  003300  0605               	decf	strncmp@n,f,c
  2679  003302  A0D8               	btfss	status,0,c
  2680  003304  0606               	decf	strncmp@n+1,f,c
  2681  003306  2805               	incf	strncmp@n,w,c
  2682  003308  E10F               	bnz	l4283
  2683  00330A  2806               	incf	strncmp@n+1,w,c
  2684  00330C  A4D8               	btfss	status,2,c
  2685  00330E  D00C               	goto	l4283
  2686  003310  0E00               	movlw	0
  2687  003312  6E02               	movwf	?_strncmp+1,c
  2688  003314  0E00               	movlw	0
  2689  003316  6E01               	movwf	?_strncmp,c
  2690  003318  0012               	return	
  2691  00331A                     l4281:
  2692  00331A  4A08               	infsnz	strncmp@l,f,c
  2693  00331C  2A09               	incf	strncmp@l+1,f,c
  2694  00331E  4A0A               	infsnz	strncmp@r,f,c
  2695  003320  2A0B               	incf	strncmp@r+1,f,c
  2696  003322  0605               	decf	strncmp@n,f,c
  2697  003324  A0D8               	btfss	status,0,c
  2698  003326  0606               	decf	strncmp@n+1,f,c
  2699  003328                     l4283:
  2700  003328  C008  FFD9         	movff	strncmp@l,fsr2l
  2701  00332C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2702  003330  50DF               	movf	indf2,w,c
  2703  003332  B4D8               	btfsc	status,2,c
  2704  003334  D01C               	goto	u4780
  2705  003336  C00A  FFF6         	movff	strncmp@r,tblptrl
  2706  00333A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2707  00333E                     	if	0	;tblptru may be non-zero
  2708  00333E                     	endif
  2709  00333E                     	if	0	;tblptru may be non-zero
  2710  00333E                     	endif
  2711  00333E  0008               	tblrd		*
  2712  003340  50F5               	movf	tablat,w,c
  2713  003342  0900               	iorlw	0
  2714  003344  B4D8               	btfsc	status,2,c
  2715  003346  D013               	goto	u4780
  2716  003348  5005               	movf	strncmp@n,w,c
  2717  00334A  1006               	iorwf	strncmp@n+1,w,c
  2718  00334C  B4D8               	btfsc	status,2,c
  2719  00334E  D00F               	goto	u4780
  2720  003350  C008  FFD9         	movff	strncmp@l,fsr2l
  2721  003354  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2722  003358  50DF               	movf	indf2,w,c
  2723  00335A  6E07               	movwf	??_strncmp& (0+255),c
  2724  00335C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2725  003360  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2726  003364                     	if	0	;tblptru may be non-zero
  2727  003364                     	endif
  2728  003364                     	if	0	;tblptru may be non-zero
  2729  003364                     	endif
  2730  003364  0008               	tblrd		*
  2731  003366  50F5               	movf	tablat,w,c
  2732  003368  1807               	xorwf	??_strncmp,w,c
  2733  00336A  B4D8               	btfsc	status,2,c
  2734  00336C  D7D6               	goto	l4281
  2735  00336E                     u4780:
  2736  00336E  C008  FFD9         	movff	strncmp@l,fsr2l
  2737  003372  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2738  003376  50DF               	movf	indf2,w,c
  2739  003378  6E07               	movwf	??_strncmp& (0+255),c
  2740  00337A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2741  00337E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2742  003382                     	if	0	;tblptru may be non-zero
  2743  003382                     	endif
  2744  003382                     	if	0	;tblptru may be non-zero
  2745  003382                     	endif
  2746  003382  0008               	tblrd		*
  2747  003384  50F5               	movf	tablat,w,c
  2748  003386  5C07               	subwf	??_strncmp,w,c
  2749  003388  6E01               	movwf	?_strncmp,c
  2750  00338A  6A02               	clrf	?_strncmp+1,c
  2751  00338C  A0D8               	btfss	status,0,c
  2752  00338E  0602               	decf	?_strncmp+1,f,c
  2753  003390  0012               	return		;funcret
  2754  003392                     __end_of_strncmp:
  2755                           	opt callstack 0
  2756                           
  2757 ;; *************** function _efgtoa *****************
  2758 ;; Defined at:
  2759 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2762 ;;		 -> sprintf@f(6), 
  2763 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2764 ;;  c               1   57[COMRAM] unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  u               4   52[BANK0 ] unsigned char 
  2767 ;;  g               4   44[BANK0 ] unsigned char 
  2768 ;;  l               4   38[BANK0 ] unsigned char 
  2769 ;;  h               4   34[BANK0 ] unsigned char 
  2770 ;;  ou              4    0[BANK0 ] unsigned char 
  2771 ;;  n               2   50[BANK0 ] int 
  2772 ;;  e               2   48[BANK0 ] int 
  2773 ;;  i               2   42[BANK0 ] int 
  2774 ;;  w               2   31[BANK0 ] int 
  2775 ;;  p               2   28[BANK0 ] int 
  2776 ;;  sign            2   26[BANK0 ] int 
  2777 ;;  d               2   24[BANK0 ] int 
  2778 ;;  ne              2   22[BANK0 ] int 
  2779 ;;  m               2   20[BANK0 ] int 
  2780 ;;  pp              2   18[BANK0 ] int 
  2781 ;;  t               2   16[BANK0 ] int 
  2782 ;;  mode            1   33[BANK0 ] unsigned char 
  2783 ;;  nmode           1   30[BANK0 ] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2   51[COMRAM] int 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2793 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;Total ram usage:       68 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    4
  2800 ;; This function calls:
  2801 ;;		___awdiv
  2802 ;;		___awmod
  2803 ;;		___fladd
  2804 ;;		___fldiv
  2805 ;;		___fleq
  2806 ;;		___flge
  2807 ;;		___flmul
  2808 ;;		___flneg
  2809 ;;		___flsub
  2810 ;;		___fltol
  2811 ;;		___fpclassifyf
  2812 ;;		_floorf
  2813 ;;		_isupper
  2814 ;;		_pad
  2815 ;;		_strcpy
  2816 ;;		_tolower
  2817 ;; This function is called by:
  2818 ;;		_vfpfcnvrt
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text9
  2823  00104C                     __ptext9:
  2824                           	opt callstack 0
  2825  00104C                     _efgtoa:
  2826                           	opt callstack 22
  2827                           
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2829                           
  2830                           ;incstack = 0
  2831  00104C  0E00               	movlw	0
  2832  00104E  0100               	movlb	0	; () banked
  2833  001050  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2834  001052  0E00               	movlw	0
  2835  001054  6F7A               	movwf	efgtoa@sign& (0+255),b
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2839  001056  C036  F08C         	movff	efgtoa@f,efgtoa@g
  2840  00105A  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2841  00105E  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2842  001062  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2846  001066  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  2847  001068  D016               	goto	l3945
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2851  00106A  0E00               	movlw	0
  2852  00106C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2853  00106E  0E01               	movlw	1
  2854  001070  6F7A               	movwf	efgtoa@sign& (0+255),b
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2858  001072  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2859  001076  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2860  00107A  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2861  00107E  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2862  001082  EC7D  F01F         	call	___flneg	;wreg free
  2863  001086  C001  F08C         	movff	?___flneg,efgtoa@g
  2864  00108A  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2865  00108E  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2866  001092  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2867  001096                     l3945:
  2868                           
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2870  001096  0E00               	movlw	0
  2871  001098  0100               	movlb	0	; () banked
  2872  00109A  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2873  00109C  0E00               	movlw	0
  2874  00109E  6F92               	movwf	efgtoa@n& (0+255),b
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2878  0010A0  C0E4  F07F         	movff	_width,efgtoa@w
  2879  0010A4  C0E5  F080         	movff	_width+1,efgtoa@w+1
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2883  0010A8  517A               	movf	efgtoa@sign& (0+255),w,b
  2884  0010AA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2885  0010AC  A4D8               	btfss	status,2,c
  2886  0010AE  D002               	goto	u4170
  2887                           
  2888                           ; BSR set to: 0
  2889  0010B0  A5E8               	btfss	_flags& (0+255),2,b
  2890  0010B2  D013               	goto	l3965
  2891  0010B4                     u4170:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2895  0010B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2896  0010B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2897  0010B8  A4D8               	btfss	status,2,c
  2898  0010BA  D004               	goto	l3957
  2899                           
  2900                           ; BSR set to: 0
  2901  0010BC  0E00               	movlw	0
  2902  0010BE  6F65               	movwf	(_efgtoa$779+1)& (0+255),b
  2903  0010C0  0E2B               	movlw	43
  2904  0010C2  D003               	goto	L1
  2905  0010C4                     l3957:
  2906                           
  2907                           ; BSR set to: 0
  2908  0010C4  0E00               	movlw	0
  2909  0010C6  6F65               	movwf	(_efgtoa$779+1)& (0+255),b
  2910  0010C8  0E2D               	movlw	45
  2911  0010CA                     L1:
  2912  0010CA  6F64               	movwf	_efgtoa$779& (0+255),b
  2913                           
  2914                           ; BSR set to: 0
  2915  0010CC  C064  F100         	movff	_efgtoa$779,_dbuf
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2919  0010D0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2920  0010D2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2924  0010D4  077F               	decf	efgtoa@w& (0+255),f,b
  2925  0010D6  A0D8               	btfss	status,0,c
  2926  0010D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2927  0010DA                     l3965:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2931  0010DA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2932  0010DE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2933  0010E2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2934  0010E6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2935  0010EA  EC5A  F018         	call	___fpclassifyf	;wreg free
  2936  0010EE  0401               	decf	?___fpclassifyf,w,c
  2937  0010F0  1002               	iorwf	?___fpclassifyf+1,w,c
  2938  0010F2  A4D8               	btfss	status,2,c
  2939  0010F4  D04C               	goto	l3983
  2940  0010F6  0EBF               	movlw	191
  2941  0010F8  6E3B               	movwf	??_efgtoa& (0+255),c
  2942  0010FA  0EFF               	movlw	255
  2943  0010FC  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  2944  0010FE  503A               	movf	efgtoa@c,w,c
  2945  001100  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  2946  001102  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  2947  001104  503B               	movf	??_efgtoa,w,c
  2948  001106  263D               	addwf	??_efgtoa+2,f,c
  2949  001108  503C               	movf	??_efgtoa+1,w,c
  2950  00110A  223E               	addwfc	??_efgtoa+3,f,c
  2951  00110C  503E               	movf	??_efgtoa+3,w,c
  2952  00110E  E106               	bnz	u4200
  2953  001110  0E1A               	movlw	26
  2954  001112  5C3D               	subwf	??_efgtoa+2,w,c
  2955  001114  B0D8               	btfsc	status,0,c
  2956  001116  D002               	goto	u4200
  2957  001118  0E01               	movlw	1
  2958  00111A  D001               	goto	u4210
  2959  00111C                     u4200:
  2960  00111C  0E00               	movlw	0
  2961  00111E                     u4210:
  2962  00111E  0100               	movlb	0	; () banked
  2963  001120  6F66               	movwf	_efgtoa$780& (0+255),b
  2964  001122  6B67               	clrf	(_efgtoa$780+1)& (0+255),b
  2965                           
  2966                           ; BSR set to: 0
  2967  001124  5166               	movf	_efgtoa$780& (0+255),w,b
  2968  001126  1167               	iorwf	(_efgtoa$780+1)& (0+255),w,b
  2969  001128  B4D8               	btfsc	status,2,c
  2970  00112A  D00D               	goto	l3975
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2974  00112C  0E00               	movlw	low _dbuf
  2975  00112E  2592               	addwf	efgtoa@n& (0+255),w,b
  2976  001130  6E01               	movwf	strcpy@dest,c
  2977  001132  0E01               	movlw	high _dbuf
  2978  001134  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2979  001136  6E02               	movwf	strcpy@dest+1,c
  2980  001138  0E25               	movlw	low STR_14
  2981  00113A  6E03               	movwf	strcpy@src,c
  2982  00113C  0E10               	movlw	high STR_14
  2983  00113E  6E04               	movwf	strcpy@src+1,c
  2984  001140  ECE4  F01D         	call	_strcpy	;wreg free
  2985                           
  2986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2987  001144  D00C               	goto	l3977
  2988  001146                     l3975:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2992  001146  0E00               	movlw	low _dbuf
  2993  001148  2592               	addwf	efgtoa@n& (0+255),w,b
  2994  00114A  6E01               	movwf	strcpy@dest,c
  2995  00114C  0E01               	movlw	high _dbuf
  2996  00114E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2997  001150  6E02               	movwf	strcpy@dest+1,c
  2998  001152  0E2D               	movlw	low STR_15
  2999  001154  6E03               	movwf	strcpy@src,c
  3000  001156  0E10               	movlw	high STR_15
  3001  001158  6E04               	movwf	strcpy@src+1,c
  3002  00115A  ECE4  F01D         	call	_strcpy	;wreg free
  3003  00115E                     l3977:
  3004                           
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3006  00115E  0100               	movlb	0	; () banked
  3007  001160  0EFD               	movlw	253
  3008  001162  277F               	addwf	efgtoa@w& (0+255),f,b
  3009  001164  0EFF               	movlw	255
  3010  001166  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3011  001168                     l3979:
  3012                           
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3014  001168  C034  F011         	movff	efgtoa@fp,pad@fp
  3015  00116C  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3016  001170  0E00               	movlw	low _dbuf
  3017  001172  6E13               	movwf	pad@buf,c
  3018  001174  0E01               	movlw	high _dbuf
  3019  001176  6E14               	movwf	pad@buf+1,c
  3020  001178  C07F  F015         	movff	efgtoa@w,pad@p
  3021  00117C  C080  F016         	movff	efgtoa@w+1,pad@p+1
  3022  001180  EC19  F01A         	call	_pad	;wreg free
  3023  001184  C011  F034         	movff	?_pad,?_efgtoa
  3024  001188  C012  F035         	movff	?_pad+1,?_efgtoa+1
  3025  00118C  0012               	return	
  3026  00118E                     l3983:
  3027                           
  3028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3029  00118E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3030  001192  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3031  001196  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3032  00119A  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3033  00119E  EC5A  F018         	call	___fpclassifyf	;wreg free
  3034  0011A2  5001               	movf	?___fpclassifyf,w,c
  3035  0011A4  1002               	iorwf	?___fpclassifyf+1,w,c
  3036  0011A6  A4D8               	btfss	status,2,c
  3037  0011A8  D035               	goto	l4001
  3038  0011AA  0EBF               	movlw	191
  3039  0011AC  6E3B               	movwf	??_efgtoa& (0+255),c
  3040  0011AE  0EFF               	movlw	255
  3041  0011B0  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  3042  0011B2  503A               	movf	efgtoa@c,w,c
  3043  0011B4  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  3044  0011B6  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  3045  0011B8  503B               	movf	??_efgtoa,w,c
  3046  0011BA  263D               	addwf	??_efgtoa+2,f,c
  3047  0011BC  503C               	movf	??_efgtoa+1,w,c
  3048  0011BE  223E               	addwfc	??_efgtoa+3,f,c
  3049  0011C0  503E               	movf	??_efgtoa+3,w,c
  3050  0011C2  E106               	bnz	u4240
  3051  0011C4  0E1A               	movlw	26
  3052  0011C6  5C3D               	subwf	??_efgtoa+2,w,c
  3053  0011C8  B0D8               	btfsc	status,0,c
  3054  0011CA  D002               	goto	u4240
  3055  0011CC  0E01               	movlw	1
  3056  0011CE  D001               	goto	u4250
  3057  0011D0                     u4240:
  3058  0011D0  0E00               	movlw	0
  3059  0011D2                     u4250:
  3060  0011D2  0100               	movlb	0	; () banked
  3061  0011D4  6F68               	movwf	_efgtoa$785& (0+255),b
  3062  0011D6  6B69               	clrf	(_efgtoa$785+1)& (0+255),b
  3063                           
  3064                           ; BSR set to: 0
  3065  0011D8  5168               	movf	_efgtoa$785& (0+255),w,b
  3066  0011DA  1169               	iorwf	(_efgtoa$785+1)& (0+255),w,b
  3067  0011DC  B4D8               	btfsc	status,2,c
  3068  0011DE  D00D               	goto	l3993
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3072  0011E0  0E00               	movlw	low _dbuf
  3073  0011E2  2592               	addwf	efgtoa@n& (0+255),w,b
  3074  0011E4  6E01               	movwf	strcpy@dest,c
  3075  0011E6  0E01               	movlw	high _dbuf
  3076  0011E8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3077  0011EA  6E02               	movwf	strcpy@dest+1,c
  3078  0011EC  0E29               	movlw	low STR_18
  3079  0011EE  6E03               	movwf	strcpy@src,c
  3080  0011F0  0E10               	movlw	high STR_18
  3081  0011F2  6E04               	movwf	strcpy@src+1,c
  3082  0011F4  ECE4  F01D         	call	_strcpy	;wreg free
  3083                           
  3084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3085  0011F8  D7B2               	goto	l3977
  3086  0011FA                     l3993:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3090  0011FA  0E00               	movlw	low _dbuf
  3091  0011FC  2592               	addwf	efgtoa@n& (0+255),w,b
  3092  0011FE  6E01               	movwf	strcpy@dest,c
  3093  001200  0E01               	movlw	high _dbuf
  3094  001202  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3095  001204  6E02               	movwf	strcpy@dest+1,c
  3096  001206  0E31               	movlw	low STR_19
  3097  001208  6E03               	movwf	strcpy@src,c
  3098  00120A  0E10               	movlw	high STR_19
  3099  00120C  6E04               	movwf	strcpy@src+1,c
  3100  00120E  ECE4  F01D         	call	_strcpy	;wreg free
  3101  001212  D7A5               	goto	l3977
  3102  001214                     l4001:
  3103                           
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3105  001214  0E00               	movlw	0
  3106  001216  0100               	movlb	0	; () banked
  3107  001218  6F94               	movwf	efgtoa@u& (0+255),b
  3108  00121A  0E00               	movlw	0
  3109  00121C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3110  00121E  0E80               	movlw	128
  3111  001220  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3112  001222  0E3F               	movlw	63
  3113  001224  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3114                           
  3115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3116  001226  0E00               	movlw	0
  3117  001228  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3118  00122A  0E00               	movlw	0
  3119  00122C  6F90               	movwf	efgtoa@e& (0+255),b
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3123  00122E  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3124  001232  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3125  001236  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3126  00123A  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3127  00123E  0E00               	movlw	0
  3128  001240  6E05               	movwf	___fleq@ff2,c
  3129  001242  0E00               	movlw	0
  3130  001244  6E06               	movwf	___fleq@ff2+1,c
  3131  001246  0E00               	movlw	0
  3132  001248  6E07               	movwf	___fleq@ff2+2,c
  3133  00124A  0E00               	movlw	0
  3134  00124C  6E08               	movwf	___fleq@ff2+3,c
  3135  00124E  EC66  F01A         	call	___fleq	;wreg free
  3136  001252  A0D8               	btfss	status,0,c
  3137  001254  D01E               	goto	l4011
  3138  001256  D076               	goto	u4290
  3139  001258                     l4007:
  3140                           
  3141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3142  001258  C094  F00F         	movff	efgtoa@u,___flmul@b
  3143  00125C  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3144  001260  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3145  001264  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3146  001268  0E00               	movlw	0
  3147  00126A  6E13               	movwf	___flmul@a,c
  3148  00126C  0E00               	movlw	0
  3149  00126E  6E14               	movwf	___flmul@a+1,c
  3150  001270  0E20               	movlw	32
  3151  001272  6E15               	movwf	___flmul@a+2,c
  3152  001274  0E41               	movlw	65
  3153  001276  6E16               	movwf	___flmul@a+3,c
  3154  001278  ECB6  F00E         	call	___flmul	;wreg free
  3155  00127C  C00F  F094         	movff	?___flmul,efgtoa@u
  3156  001280  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  3157  001284  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  3158  001288  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  3159                           
  3160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3161  00128C  0100               	movlb	0	; () banked
  3162  00128E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3163  001290  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3164  001292                     l4011:
  3165                           
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3167  001292  C08C  F028         	movff	efgtoa@g,___flge@ff1
  3168  001296  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3169  00129A  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3170  00129E  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3171  0012A2  0E00               	movlw	0
  3172  0012A4  6E13               	movwf	___flmul@a,c
  3173  0012A6  0E00               	movlw	0
  3174  0012A8  6E14               	movwf	___flmul@a+1,c
  3175  0012AA  0E20               	movlw	32
  3176  0012AC  6E15               	movwf	___flmul@a+2,c
  3177  0012AE  0E41               	movlw	65
  3178  0012B0  6E16               	movwf	___flmul@a+3,c
  3179  0012B2  C094  F00F         	movff	efgtoa@u,___flmul@b
  3180  0012B6  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3181  0012BA  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3182  0012BE  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3183  0012C2  ECB6  F00E         	call	___flmul	;wreg free
  3184  0012C6  C00F  F02C         	movff	?___flmul,___flge@ff2
  3185  0012CA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3186  0012CE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3187  0012D2  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3188  0012D6  ECF2  F017         	call	___flge	;wreg free
  3189  0012DA  A0D8               	btfss	status,0,c
  3190  0012DC  D01F               	goto	l4017
  3191  0012DE  D7BC               	goto	l4007
  3192  0012E0                     l4013:
  3193                           
  3194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3195  0012E0  C094  F001         	movff	efgtoa@u,___fldiv@b
  3196  0012E4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3197  0012E8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3198  0012EC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3199  0012F0  0E00               	movlw	0
  3200  0012F2  6E05               	movwf	___fldiv@a,c
  3201  0012F4  0E00               	movlw	0
  3202  0012F6  6E06               	movwf	___fldiv@a+1,c
  3203  0012F8  0E20               	movlw	32
  3204  0012FA  6E07               	movwf	___fldiv@a+2,c
  3205  0012FC  0E41               	movlw	65
  3206  0012FE  6E08               	movwf	___fldiv@a+3,c
  3207  001300  EC7F  F013         	call	___fldiv	;wreg free
  3208  001304  C001  F094         	movff	?___fldiv,efgtoa@u
  3209  001308  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3210  00130C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3211  001310  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3212                           
  3213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3214  001314  0100               	movlb	0	; () banked
  3215  001316  0790               	decf	efgtoa@e& (0+255),f,b
  3216  001318  A0D8               	btfss	status,0,c
  3217  00131A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3218  00131C                     l4017:
  3219                           
  3220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3221  00131C  C08C  F028         	movff	efgtoa@g,___flge@ff1
  3222  001320  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3223  001324  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3224  001328  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3225  00132C  C094  F02C         	movff	efgtoa@u,___flge@ff2
  3226  001330  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3227  001334  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3228  001338  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3229  00133C  ECF2  F017         	call	___flge	;wreg free
  3230  001340  A0D8               	btfss	status,0,c
  3231  001342  D7CE               	goto	l4013
  3232  001344                     u4290:
  3233                           
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3235  001344  C03A  F007         	movff	efgtoa@c,tolower@c
  3236  001348  6A08               	clrf	tolower@c+1,c
  3237  00134A  EC89  F01E         	call	_tolower	;wreg free
  3238  00134E  5007               	movf	?_tolower,w,c
  3239  001350  0100               	movlb	0	; () banked
  3240  001352  6F81               	movwf	efgtoa@mode& (0+255),b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3244  001354  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3248  001358  0E67               	movlw	103
  3249  00135A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3250  00135C  A4D8               	btfss	status,2,c
  3251  00135E  D019               	goto	l4033
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3255  001360  51E6               	movf	_prec& (0+255),w,b
  3256  001362  11E7               	iorwf	(_prec+1)& (0+255),w,b
  3257  001364  A4D8               	btfss	status,2,c
  3258  001366  D004               	goto	l4029
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3262  001368  0E00               	movlw	0
  3263  00136A  6FE7               	movwf	(_prec+1)& (0+255),b
  3264  00136C  0E01               	movlw	1
  3265  00136E  6FE6               	movwf	_prec& (0+255),b
  3266  001370                     l4029:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3270  001370  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  3271  001372  D005               	goto	u4320
  3272  001374  51E7               	movf	(_prec+1)& (0+255),w,b
  3273  001376  E108               	bnz	l436
  3274  001378  05E6               	decf	_prec& (0+255),w,b
  3275  00137A  B0D8               	btfsc	status,0,c
  3276  00137C  D005               	goto	l436
  3277  00137E                     u4320:
  3278                           
  3279                           ; BSR set to: 0
  3280  00137E  0E00               	movlw	0
  3281  001380  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3282  001382  0E06               	movlw	6
  3283  001384  6F7C               	movwf	efgtoa@p& (0+255),b
  3284  001386  D008               	goto	l4039
  3285  001388                     l436:
  3286                           
  3287                           ; BSR set to: 0
  3288  001388  C0E6  F07C         	movff	_prec,efgtoa@p
  3289  00138C  C0E7  F07D         	movff	_prec+1,efgtoa@p+1
  3290  001390  D003               	goto	l4039
  3291  001392                     l4033:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3295  001392  AFE7               	btfss	(_prec+1)& (0+255),7,b
  3296  001394  D7F9               	goto	l436
  3297  001396  D7F3               	goto	u4320
  3298  001398                     l4039:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3302  001398  0E67               	movlw	103
  3303  00139A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3304  00139C  A4D8               	btfss	status,2,c
  3305  00139E  D022               	goto	l4049
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3309  0013A0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3310  0013A2  D006               	goto	u4350
  3311  0013A4  0EFC               	movlw	252
  3312  0013A6  5D90               	subwf	efgtoa@e& (0+255),w,b
  3313  0013A8  0EFF               	movlw	255
  3314  0013AA  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3315  0013AC  A0D8               	btfss	status,0,c
  3316  0013AE  D018               	goto	l4047
  3317  0013B0                     u4350:
  3318                           
  3319                           ; BSR set to: 0
  3320  0013B0  0EFF               	movlw	255
  3321  0013B2  6E3B               	movwf	??_efgtoa& (0+255),c
  3322  0013B4  0EFF               	movlw	255
  3323  0013B6  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  3324  0013B8  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  3325  0013BC  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  3326  0013C0  503B               	movf	??_efgtoa,w,c
  3327  0013C2  263D               	addwf	??_efgtoa+2,f,c
  3328  0013C4  503C               	movf	??_efgtoa+1,w,c
  3329  0013C6  223E               	addwfc	??_efgtoa+3,f,c
  3330  0013C8  5190               	movf	efgtoa@e& (0+255),w,b
  3331  0013CA  5C3D               	subwf	??_efgtoa+2,w,c
  3332  0013CC  503E               	movf	??_efgtoa+3,w,c
  3333  0013CE  0A80               	xorlw	128
  3334  0013D0  6E3F               	movwf	(??_efgtoa+4)& (0+255),c
  3335  0013D2  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3336  0013D4  0A80               	xorlw	128
  3337  0013D6  583F               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3338  0013D8  A0D8               	btfss	status,0,c
  3339  0013DA  D002               	goto	l4047
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3343  0013DC  0E66               	movlw	102
  3344  0013DE  D001               	goto	L2
  3345  0013E0                     l4047:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3349  0013E0  0E65               	movlw	101
  3350  0013E2                     L2:
  3351  0013E2  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3352  0013E4                     l4049:
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3356  0013E4  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3357  0013E8  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3361  0013EC  0E67               	movlw	103
  3362  0013EE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3363  0013F0  A4D8               	btfss	status,2,c
  3364  0013F2  D005               	goto	u4390
  3365                           
  3366                           ; BSR set to: 0
  3367  0013F4  0E66               	movlw	102
  3368  0013F6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3369  0013F8  B4D8               	btfsc	status,2,c
  3370                           
  3371                           ; BSR set to: 0
  3372  0013FA  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3373  0013FC  D002               	goto	l4059
  3374  0013FE                     u4390:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3378  0013FE  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3379  001400  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3380  001402                     l4059:
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3384  001402  0E66               	movlw	102
  3385  001404  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3386  001406  A4D8               	btfss	status,2,c
  3387  001408  D016               	goto	l4069
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3391  00140A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3392  00140C  D00C               	goto	l4065
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3396  00140E  0E00               	movlw	0
  3397  001410  6F94               	movwf	efgtoa@u& (0+255),b
  3398  001412  0E00               	movlw	0
  3399  001414  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3400  001416  0E80               	movlw	128
  3401  001418  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3402  00141A  0E3F               	movlw	63
  3403  00141C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3406  00141E  0E00               	movlw	0
  3407  001420  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3408  001422  0E00               	movlw	0
  3409  001424  6F90               	movwf	efgtoa@e& (0+255),b
  3410  001426                     l4065:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3414  001426  0E67               	movlw	103
  3415  001428  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3416  00142A  B4D8               	btfsc	status,2,c
  3417  00142C  D004               	goto	l4069
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3421  00142E  5190               	movf	efgtoa@e& (0+255),w,b
  3422  001430  2774               	addwf	efgtoa@m& (0+255),f,b
  3423  001432  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3424  001434  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3425  001436                     l4069:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3429  001436  0E00               	movlw	0
  3430  001438  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3431  00143A  0E00               	movlw	0
  3432  00143C  6F8A               	movwf	efgtoa@i& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3436  00143E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3437  001442  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3438  001446  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3439  00144A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3443  00144E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3444  001452  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3445  001456  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3446  00145A  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3447                           
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3449  00145E  D07B               	goto	l4083
  3450  001460                     l4075:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3454  001460  C082  F001         	movff	efgtoa@h,___fldiv@b
  3455  001464  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3456  001468  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3457  00146C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3458  001470  C094  F005         	movff	efgtoa@u,___fldiv@a
  3459  001474  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3460  001478  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3461  00147C  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3462  001480  EC7F  F013         	call	___fldiv	;wreg free
  3463  001484  C001  F01A         	movff	?___fldiv,floorf@x
  3464  001488  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3465  00148C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3466  001490  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3467  001494  ECC3  F014         	call	_floorf	;wreg free
  3468  001498  C01A  F086         	movff	?_floorf,efgtoa@l
  3469  00149C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3470  0014A0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3471  0014A4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3472                           
  3473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3474  0014A8  C086  F028         	movff	efgtoa@l,___fltol@f1
  3475  0014AC  C087  F029         	movff	efgtoa@l+1,___fltol@f1+1
  3476  0014B0  C088  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  3477  0014B4  C089  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  3478  0014B8  ECC0  F018         	call	___fltol	;wreg free
  3479  0014BC  C028  F078         	movff	?___fltol,efgtoa@d
  3480  0014C0  C029  F079         	movff	?___fltol+1,efgtoa@d+1
  3481                           
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3483  0014C4  C082  F028         	movff	efgtoa@h,___flsub@b
  3484  0014C8  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  3485  0014CC  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3486  0014D0  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3487  0014D4  C094  F013         	movff	efgtoa@u,___flmul@a
  3488  0014D8  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  3489  0014DC  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  3490  0014E0  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  3491  0014E4  C086  F00F         	movff	efgtoa@l,___flmul@b
  3492  0014E8  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  3493  0014EC  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  3494  0014F0  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  3495  0014F4  ECB6  F00E         	call	___flmul	;wreg free
  3496  0014F8  C00F  F02C         	movff	?___flmul,___flsub@a
  3497  0014FC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3498  001500  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3499  001504  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3500  001508  ECD3  F01E         	call	___flsub	;wreg free
  3501  00150C  C028  F082         	movff	?___flsub,efgtoa@h
  3502  001510  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  3503  001514  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  3504  001518  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  3505                           
  3506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3507  00151C  C094  F001         	movff	efgtoa@u,___fldiv@b
  3508  001520  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3509  001524  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3510  001528  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3511  00152C  0E00               	movlw	0
  3512  00152E  6E05               	movwf	___fldiv@a,c
  3513  001530  0E00               	movlw	0
  3514  001532  6E06               	movwf	___fldiv@a+1,c
  3515  001534  0E20               	movlw	32
  3516  001536  6E07               	movwf	___fldiv@a+2,c
  3517  001538  0E41               	movlw	65
  3518  00153A  6E08               	movwf	___fldiv@a+3,c
  3519  00153C  EC7F  F013         	call	___fldiv	;wreg free
  3520  001540  C001  F094         	movff	?___fldiv,efgtoa@u
  3521  001544  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3522  001548  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3523  00154C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3524                           
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3526  001550  0100               	movlb	0	; () banked
  3527  001552  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3528  001554  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3529  001556                     l4083:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3533  001556  5174               	movf	efgtoa@m& (0+255),w,b
  3534  001558  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3535  00155A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3536  00155C  0A80               	xorlw	128
  3537  00155E  6E3B               	movwf	??_efgtoa& (0+255),c
  3538  001560  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3539  001562  0A80               	xorlw	128
  3540  001564  583B               	subwfb	??_efgtoa& (0+255),w,c
  3541  001566  A0D8               	btfss	status,0,c
  3542  001568  D77B               	goto	l4075
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3546  00156A  C094  F00F         	movff	efgtoa@u,___flmul@b
  3547  00156E  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3548  001572  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3549  001576  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3550  00157A  0E00               	movlw	0
  3551  00157C  6E13               	movwf	___flmul@a,c
  3552  00157E  0E00               	movlw	0
  3553  001580  6E14               	movwf	___flmul@a+1,c
  3554  001582  0EA0               	movlw	160
  3555  001584  6E15               	movwf	___flmul@a+2,c
  3556  001586  0E40               	movlw	64
  3557  001588  6E16               	movwf	___flmul@a+3,c
  3558  00158A  ECB6  F00E         	call	___flmul	;wreg free
  3559  00158E  C00F  F086         	movff	?___flmul,efgtoa@l
  3560  001592  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  3561  001596  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  3562  00159A  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  3563                           
  3564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3565  00159E  C082  F028         	movff	efgtoa@h,___flge@ff1
  3566  0015A2  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3567  0015A6  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3568  0015AA  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3569  0015AE  C086  F02C         	movff	efgtoa@l,___flge@ff2
  3570  0015B2  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3571  0015B6  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3572  0015BA  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3573  0015BE  ECF2  F017         	call	___flge	;wreg free
  3574  0015C2  B0D8               	btfsc	status,0,c
  3575  0015C4  D003               	goto	l4091
  3576                           
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3578  0015C6  0E00               	movlw	0
  3579  0015C8  0100               	movlb	0	; () banked
  3580  0015CA  D018               	goto	L3
  3581  0015CC                     l4091:
  3582                           
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3584  0015CC  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3585  0015D0  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3586  0015D4  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3587  0015D8  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3588  0015DC  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3589  0015E0  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3590  0015E4  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3591  0015E8  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3592  0015EC  EC66  F01A         	call	___fleq	;wreg free
  3593  0015F0  A0D8               	btfss	status,0,c
  3594  0015F2  D00B               	goto	l4097
  3595  0015F4  0100               	movlb	0	; () banked
  3596  0015F6  B178               	btfsc	efgtoa@d& (0+255),0,b
  3597  0015F8  D008               	goto	l4097
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3601  0015FA  0E00               	movlw	0
  3602  0015FC                     L3:
  3603  0015FC  6F86               	movwf	efgtoa@l& (0+255),b
  3604  0015FE  0E00               	movlw	0
  3605  001600  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3606  001602  0E00               	movlw	0
  3607  001604  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3608  001606  0E00               	movlw	0
  3609  001608  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3610  00160A                     l4097:
  3611                           
  3612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3613  00160A  C08C  F001         	movff	efgtoa@g,___fladd@b
  3614  00160E  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3615  001612  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3616  001616  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3617  00161A  C086  F005         	movff	efgtoa@l,___fladd@a
  3618  00161E  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3619  001622  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3620  001626  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3621  00162A  ECF9  F011         	call	___fladd	;wreg free
  3622  00162E  C001  F082         	movff	?___fladd,efgtoa@h
  3623  001632  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3624  001636  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3625  00163A  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3626                           
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3628  00163E  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3629  001642  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3630  001646  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3631  00164A  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3632                           
  3633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3634  00164E  0E65               	movlw	101
  3635  001650  0100               	movlb	0	; () banked
  3636  001652  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3637  001654  B4D8               	btfsc	status,2,c
  3638  001656  D005               	goto	l4105
  3639                           
  3640                           ; BSR set to: 0
  3641  001658  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3642  00165C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3643  001660  D004               	goto	l462
  3644  001662                     l4105:
  3645                           
  3646                           ; BSR set to: 0
  3647  001662  0E00               	movlw	0
  3648  001664  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3649  001666  0E00               	movlw	0
  3650  001668  6F76               	movwf	efgtoa@ne& (0+255),b
  3651  00166A                     l462:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3655  00166A  0E00               	movlw	0
  3656  00166C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3657  00166E  0E00               	movlw	0
  3658  001670  6F72               	movwf	efgtoa@pp& (0+255),b
  3659                           
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3661  001672  0E00               	movlw	0
  3662  001674  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3663  001676  0E00               	movlw	0
  3664  001678  6F70               	movwf	efgtoa@t& (0+255),b
  3665                           
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3667  00167A  0E00               	movlw	0
  3668  00167C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3669  00167E  0E00               	movlw	0
  3670  001680  6F8A               	movwf	efgtoa@i& (0+255),b
  3671                           
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3673  001682  D0C6               	goto	l4155
  3674  001684                     l4107:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3678  001684  C082  F001         	movff	efgtoa@h,___fldiv@b
  3679  001688  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3680  00168C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3681  001690  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3682  001694  C094  F005         	movff	efgtoa@u,___fldiv@a
  3683  001698  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3684  00169C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3685  0016A0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3686  0016A4  EC7F  F013         	call	___fldiv	;wreg free
  3687  0016A8  C001  F01A         	movff	?___fldiv,floorf@x
  3688  0016AC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3689  0016B0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3690  0016B4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3691  0016B8  ECC3  F014         	call	_floorf	;wreg free
  3692  0016BC  C01A  F086         	movff	?_floorf,efgtoa@l
  3693  0016C0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3694  0016C4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3695  0016C8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3696                           
  3697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3698  0016CC  C086  F028         	movff	efgtoa@l,___fltol@f1
  3699  0016D0  C087  F029         	movff	efgtoa@l+1,___fltol@f1+1
  3700  0016D4  C088  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  3701  0016D8  C089  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  3702  0016DC  ECC0  F018         	call	___fltol	;wreg free
  3703  0016E0  C028  F078         	movff	?___fltol,efgtoa@d
  3704  0016E4  C029  F079         	movff	?___fltol+1,efgtoa@d+1
  3705                           
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3707  0016E8  0100               	movlb	0	; () banked
  3708  0016EA  B9E8               	btfsc	_flags& (0+255),4,b
  3709  0016EC  D00C               	goto	l4119
  3710                           
  3711                           ; BSR set to: 0
  3712  0016EE  5178               	movf	efgtoa@d& (0+255),w,b
  3713  0016F0  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3714  0016F2  A4D8               	btfss	status,2,c
  3715  0016F4  D008               	goto	l4119
  3716                           
  3717                           ; BSR set to: 0
  3718  0016F6  0E67               	movlw	103
  3719  0016F8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3720  0016FA  B4D8               	btfsc	status,2,c
  3721                           
  3722                           ; BSR set to: 0
  3723  0016FC  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3724  0016FE  D003               	goto	l4119
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3728  001700  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3729  001702  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3732  001704  D039               	goto	l4147
  3733  001706                     l4119:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3737  001706  5172               	movf	efgtoa@pp& (0+255),w,b
  3738  001708  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3739  00170A  B4D8               	btfsc	status,2,c
  3740                           
  3741                           ; BSR set to: 0
  3742  00170C  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3743  00170E  D022               	goto	l4139
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3747  001710  0E00               	movlw	low _dbuf
  3748  001712  2592               	addwf	efgtoa@n& (0+255),w,b
  3749  001714  6ED9               	movwf	fsr2l,c
  3750  001716  0E01               	movlw	high _dbuf
  3751  001718  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3752  00171A  6EDA               	movwf	fsr2h,c
  3753  00171C  0E2E               	movlw	46
  3754  00171E  6EDF               	movwf	indf2,c
  3755                           
  3756                           ; BSR set to: 0
  3757  001720  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3758  001722  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3762  001724  077F               	decf	efgtoa@w& (0+255),f,b
  3763  001726  A0D8               	btfss	status,0,c
  3764  001728  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3768  00172A  0E00               	movlw	0
  3769  00172C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3770  00172E  0E01               	movlw	1
  3771  001730  6F72               	movwf	efgtoa@pp& (0+255),b
  3772  001732  D010               	goto	l4139
  3773  001734                     l4131:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3777  001734  0E00               	movlw	low _dbuf
  3778  001736  2592               	addwf	efgtoa@n& (0+255),w,b
  3779  001738  6ED9               	movwf	fsr2l,c
  3780  00173A  0E01               	movlw	high _dbuf
  3781  00173C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3782  00173E  6EDA               	movwf	fsr2h,c
  3783  001740  0E30               	movlw	48
  3784  001742  6EDF               	movwf	indf2,c
  3785                           
  3786                           ; BSR set to: 0
  3787  001744  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3788  001746  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3792  001748  077F               	decf	efgtoa@w& (0+255),f,b
  3793  00174A  A0D8               	btfss	status,0,c
  3794  00174C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3798  00174E  0770               	decf	efgtoa@t& (0+255),f,b
  3799  001750  A0D8               	btfss	status,0,c
  3800  001752  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3801  001754                     l4139:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3805  001754  5170               	movf	efgtoa@t& (0+255),w,b
  3806  001756  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3807  001758  A4D8               	btfss	status,2,c
  3808  00175A  D7EC               	goto	l4131
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3812  00175C  0E00               	movlw	low _dbuf
  3813  00175E  2592               	addwf	efgtoa@n& (0+255),w,b
  3814  001760  6ED9               	movwf	fsr2l,c
  3815  001762  0E01               	movlw	high _dbuf
  3816  001764  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3817  001766  6EDA               	movwf	fsr2h,c
  3818  001768  5178               	movf	efgtoa@d& (0+255),w,b
  3819  00176A  0F30               	addlw	48
  3820  00176C  6EDF               	movwf	indf2,c
  3821                           
  3822                           ; BSR set to: 0
  3823  00176E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3824  001770  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3828  001772  077F               	decf	efgtoa@w& (0+255),f,b
  3829  001774  A0D8               	btfss	status,0,c
  3830  001776  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3831  001778                     l4147:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3835  001778  C082  F028         	movff	efgtoa@h,___flsub@b
  3836  00177C  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  3837  001780  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3838  001784  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3839  001788  C094  F013         	movff	efgtoa@u,___flmul@a
  3840  00178C  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  3841  001790  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  3842  001794  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  3843  001798  C086  F00F         	movff	efgtoa@l,___flmul@b
  3844  00179C  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  3845  0017A0  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  3846  0017A4  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  3847  0017A8  ECB6  F00E         	call	___flmul	;wreg free
  3848  0017AC  C00F  F02C         	movff	?___flmul,___flsub@a
  3849  0017B0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3850  0017B4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3851  0017B8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3852  0017BC  ECD3  F01E         	call	___flsub	;wreg free
  3853  0017C0  C028  F082         	movff	?___flsub,efgtoa@h
  3854  0017C4  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  3855  0017C8  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  3856  0017CC  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  3857                           
  3858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3859  0017D0  C094  F001         	movff	efgtoa@u,___fldiv@b
  3860  0017D4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3861  0017D8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3862  0017DC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3863  0017E0  0E00               	movlw	0
  3864  0017E2  6E05               	movwf	___fldiv@a,c
  3865  0017E4  0E00               	movlw	0
  3866  0017E6  6E06               	movwf	___fldiv@a+1,c
  3867  0017E8  0E20               	movlw	32
  3868  0017EA  6E07               	movwf	___fldiv@a+2,c
  3869  0017EC  0E41               	movlw	65
  3870  0017EE  6E08               	movwf	___fldiv@a+3,c
  3871  0017F0  EC7F  F013         	call	___fldiv	;wreg free
  3872  0017F4  C001  F094         	movff	?___fldiv,efgtoa@u
  3873  0017F8  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3874  0017FC  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3875  001800  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3876                           
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3878  001804  0100               	movlb	0	; () banked
  3879  001806  0776               	decf	efgtoa@ne& (0+255),f,b
  3880  001808  A0D8               	btfss	status,0,c
  3881  00180A  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3885  00180C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3886  00180E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3887  001810                     l4155:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3891  001810  5174               	movf	efgtoa@m& (0+255),w,b
  3892  001812  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3893  001814  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3894  001816  0A80               	xorlw	128
  3895  001818  6E3B               	movwf	??_efgtoa& (0+255),c
  3896  00181A  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3897  00181C  0A80               	xorlw	128
  3898  00181E  583B               	subwfb	??_efgtoa& (0+255),w,c
  3899  001820  B0D8               	btfsc	status,0,c
  3900  001822  D008               	goto	u4560
  3901                           
  3902                           ; BSR set to: 0
  3903  001824  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3904  001826  D72E               	goto	l4107
  3905  001828  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3906  00182A  E104               	bnz	u4560
  3907  00182C  0E4B               	movlw	75
  3908  00182E  5D92               	subwf	efgtoa@n& (0+255),w,b
  3909  001830  A0D8               	btfss	status,0,c
  3910  001832  D728               	goto	l4107
  3911  001834                     u4560:
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3915  001834  5172               	movf	efgtoa@pp& (0+255),w,b
  3916  001836  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3917  001838  B4D8               	btfsc	status,2,c
  3918                           
  3919                           ; BSR set to: 0
  3920  00183A  A9E8               	btfss	_flags& (0+255),4,b
  3921  00183C  D00A               	goto	l4167
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3925  00183E  0E00               	movlw	low _dbuf
  3926  001840  2592               	addwf	efgtoa@n& (0+255),w,b
  3927  001842  6ED9               	movwf	fsr2l,c
  3928  001844  0E01               	movlw	high _dbuf
  3929  001846  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3930  001848  6EDA               	movwf	fsr2h,c
  3931  00184A  0E2E               	movlw	46
  3932  00184C  6EDF               	movwf	indf2,c
  3933                           
  3934                           ; BSR set to: 0
  3935  00184E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3936  001850  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3937  001852                     l4167:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3941  001852  0E00               	movlw	low _dbuf
  3942  001854  2592               	addwf	efgtoa@n& (0+255),w,b
  3943  001856  6ED9               	movwf	fsr2l,c
  3944  001858  0E01               	movlw	high _dbuf
  3945  00185A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3946  00185C  6EDA               	movwf	fsr2h,c
  3947  00185E  0E00               	movlw	0
  3948  001860  6EDF               	movwf	indf2,c
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3952  001862  0E65               	movlw	101
  3953  001864  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3954  001866  A4D8               	btfss	status,2,c
  3955  001868  D47F               	goto	l3979
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3959  00186A  0E00               	movlw	0
  3960  00186C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3961  00186E  0E4F               	movlw	79
  3962  001870  6F8A               	movwf	efgtoa@i& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3966  001872  0E00               	movlw	low _dbuf
  3967  001874  258A               	addwf	efgtoa@i& (0+255),w,b
  3968  001876  6ED9               	movwf	fsr2l,c
  3969  001878  0E01               	movlw	high _dbuf
  3970  00187A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3971  00187C  6EDA               	movwf	fsr2h,c
  3972  00187E  0E00               	movlw	0
  3973  001880  6EDF               	movwf	indf2,c
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3977  001882  0E00               	movlw	0
  3978  001884  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3979  001886  0E00               	movlw	0
  3980  001888  6F7A               	movwf	efgtoa@sign& (0+255),b
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3984  00188A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3985  00188C  D008               	goto	l4183
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3989  00188E  0E00               	movlw	0
  3990  001890  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3991  001892  0E01               	movlw	1
  3992  001894  6F7A               	movwf	efgtoa@sign& (0+255),b
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3996  001896  6D90               	negf	efgtoa@e& (0+255),b
  3997  001898  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3998  00189A  B0D8               	btfsc	status,0,c
  3999  00189C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4000  00189E                     l4183:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4004  00189E  0E00               	movlw	0
  4005  0018A0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4006  0018A2  0E02               	movlw	2
  4007  0018A4  6F7C               	movwf	efgtoa@p& (0+255),b
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4010  0018A6  D02B               	goto	l4195
  4011  0018A8                     l4185:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4015  0018A8  078A               	decf	efgtoa@i& (0+255),f,b
  4016  0018AA  A0D8               	btfss	status,0,c
  4017  0018AC  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4021  0018AE  0E00               	movlw	low _dbuf
  4022  0018B0  258A               	addwf	efgtoa@i& (0+255),w,b
  4023  0018B2  6ED9               	movwf	fsr2l,c
  4024  0018B4  0E01               	movlw	high _dbuf
  4025  0018B6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4026  0018B8  6EDA               	movwf	fsr2h,c
  4027  0018BA  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4028  0018BE  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4029  0018C2  0E00               	movlw	0
  4030  0018C4  6E04               	movwf	___awmod@divisor+1,c
  4031  0018C6  0E0A               	movlw	10
  4032  0018C8  6E03               	movwf	___awmod@divisor,c
  4033  0018CA  EC68  F01C         	call	___awmod	;wreg free
  4034  0018CE  5001               	movf	?___awmod,w,c
  4035  0018D0  0F30               	addlw	48
  4036  0018D2  6EDF               	movwf	indf2,c
  4037                           
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4039  0018D4  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4040  0018D8  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4041  0018DC  0E00               	movlw	0
  4042  0018DE  6E04               	movwf	___awdiv@divisor+1,c
  4043  0018E0  0E0A               	movlw	10
  4044  0018E2  6E03               	movwf	___awdiv@divisor,c
  4045  0018E4  ECAB  F01A         	call	___awdiv	;wreg free
  4046  0018E8  C001  F090         	movff	?___awdiv,efgtoa@e
  4047  0018EC  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4048                           
  4049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4050  0018F0  0100               	movlb	0	; () banked
  4051  0018F2  077C               	decf	efgtoa@p& (0+255),f,b
  4052  0018F4  A0D8               	btfss	status,0,c
  4053  0018F6  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4057  0018F8  077F               	decf	efgtoa@w& (0+255),f,b
  4058  0018FA  A0D8               	btfss	status,0,c
  4059  0018FC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4060  0018FE                     l4195:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4064  0018FE  5190               	movf	efgtoa@e& (0+255),w,b
  4065  001900  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4066  001902  A4D8               	btfss	status,2,c
  4067  001904  D7D1               	goto	l4185
  4068                           
  4069                           ; BSR set to: 0
  4070  001906  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4071  001908  D005               	goto	u4620
  4072  00190A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4073  00190C  E1CD               	bnz	l4185
  4074  00190E  057C               	decf	efgtoa@p& (0+255),w,b
  4075  001910  B0D8               	btfsc	status,0,c
  4076  001912  D7CA               	goto	l4185
  4077  001914                     u4620:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4081  001914  078A               	decf	efgtoa@i& (0+255),f,b
  4082  001916  A0D8               	btfss	status,0,c
  4083  001918  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4087  00191A  517A               	movf	efgtoa@sign& (0+255),w,b
  4088  00191C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4089  00191E  A4D8               	btfss	status,2,c
  4090  001920  D004               	goto	l4205
  4091                           
  4092                           ; BSR set to: 0
  4093  001922  0E00               	movlw	0
  4094  001924  6F6B               	movwf	(_efgtoa$789+1)& (0+255),b
  4095  001926  0E2B               	movlw	43
  4096  001928  D003               	goto	L4
  4097  00192A                     l4205:
  4098                           
  4099                           ; BSR set to: 0
  4100  00192A  0E00               	movlw	0
  4101  00192C  6F6B               	movwf	(_efgtoa$789+1)& (0+255),b
  4102  00192E  0E2D               	movlw	45
  4103  001930                     L4:
  4104  001930  6F6A               	movwf	_efgtoa$789& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107  001932  0E00               	movlw	low _dbuf
  4108  001934  258A               	addwf	efgtoa@i& (0+255),w,b
  4109  001936  6ED9               	movwf	fsr2l,c
  4110  001938  0E01               	movlw	high _dbuf
  4111  00193A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4112  00193C  6EDA               	movwf	fsr2h,c
  4113  00193E  C06A  FFDF         	movff	_efgtoa$789,indf2
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4117  001942  077F               	decf	efgtoa@w& (0+255),f,b
  4118  001944  A0D8               	btfss	status,0,c
  4119  001946  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4123  001948  078A               	decf	efgtoa@i& (0+255),f,b
  4124  00194A  A0D8               	btfss	status,0,c
  4125  00194C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4126                           
  4127                           ; BSR set to: 0
  4128  00194E  0EBF               	movlw	191
  4129  001950  6E3B               	movwf	??_efgtoa& (0+255),c
  4130  001952  0EFF               	movlw	255
  4131  001954  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  4132  001956  503A               	movf	efgtoa@c,w,c
  4133  001958  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  4134  00195A  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  4135  00195C  503B               	movf	??_efgtoa,w,c
  4136  00195E  263D               	addwf	??_efgtoa+2,f,c
  4137  001960  503C               	movf	??_efgtoa+1,w,c
  4138  001962  223E               	addwfc	??_efgtoa+3,f,c
  4139  001964  503E               	movf	??_efgtoa+3,w,c
  4140  001966  E106               	bnz	u4640
  4141  001968  0E1A               	movlw	26
  4142  00196A  5C3D               	subwf	??_efgtoa+2,w,c
  4143  00196C  B0D8               	btfsc	status,0,c
  4144  00196E  D002               	goto	u4640
  4145  001970  0E01               	movlw	1
  4146  001972  D001               	goto	u4650
  4147  001974                     u4640:
  4148  001974  0E00               	movlw	0
  4149  001976                     u4650:
  4150  001976  6F6E               	movwf	_efgtoa$791& (0+255),b
  4151  001978  6B6F               	clrf	(_efgtoa$791+1)& (0+255),b
  4152                           
  4153                           ; BSR set to: 0
  4154  00197A  516E               	movf	_efgtoa$791& (0+255),w,b
  4155  00197C  116F               	iorwf	(_efgtoa$791+1)& (0+255),w,b
  4156  00197E  A4D8               	btfss	status,2,c
  4157  001980  D004               	goto	l4221
  4158                           
  4159                           ; BSR set to: 0
  4160  001982  0E00               	movlw	0
  4161  001984  6F6D               	movwf	(_efgtoa$790+1)& (0+255),b
  4162  001986  0E65               	movlw	101
  4163  001988  D003               	goto	L5
  4164  00198A                     l4221:
  4165                           
  4166                           ; BSR set to: 0
  4167  00198A  0E00               	movlw	0
  4168  00198C  6F6D               	movwf	(_efgtoa$790+1)& (0+255),b
  4169  00198E  0E45               	movlw	69
  4170  001990                     L5:
  4171  001990  6F6C               	movwf	_efgtoa$790& (0+255),b
  4172                           
  4173                           ; BSR set to: 0
  4174  001992  0E00               	movlw	low _dbuf
  4175  001994  258A               	addwf	efgtoa@i& (0+255),w,b
  4176  001996  6ED9               	movwf	fsr2l,c
  4177  001998  0E01               	movlw	high _dbuf
  4178  00199A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4179  00199C  6EDA               	movwf	fsr2h,c
  4180  00199E  C06C  FFDF         	movff	_efgtoa$790,indf2
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4184  0019A2  077F               	decf	efgtoa@w& (0+255),f,b
  4185  0019A4  A0D8               	btfss	status,0,c
  4186  0019A6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4190  0019A8  0E00               	movlw	low _dbuf
  4191  0019AA  2592               	addwf	efgtoa@n& (0+255),w,b
  4192  0019AC  6E01               	movwf	strcpy@dest,c
  4193  0019AE  0E01               	movlw	high _dbuf
  4194  0019B0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4195  0019B2  6E02               	movwf	strcpy@dest+1,c
  4196  0019B4  0E00               	movlw	low _dbuf
  4197  0019B6  258A               	addwf	efgtoa@i& (0+255),w,b
  4198  0019B8  6E03               	movwf	strcpy@src,c
  4199  0019BA  0E01               	movlw	high _dbuf
  4200  0019BC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4201  0019BE  6E04               	movwf	strcpy@src+1,c
  4202  0019C0  ECE4  F01D         	call	_strcpy	;wreg free
  4203  0019C4  EFB4  F008         	goto	l3979
  4204  0019C8                     __end_of_efgtoa:
  4205                           	opt callstack 0
  4206                           
  4207 ;; *************** function _tolower *****************
  4208 ;; Defined at:
  4209 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  c               2    6[COMRAM] int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    6[COMRAM] int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;Total ram usage:        8 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    1
  4230 ;; This function calls:
  4231 ;;		_isupper
  4232 ;; This function is called by:
  4233 ;;		_efgtoa
  4234 ;;		_vfpfcnvrt
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text10
  4239  003D12                     __ptext10:
  4240                           	opt callstack 0
  4241  003D12                     _tolower:
  4242                           	opt callstack 25
  4243                           
  4244                           ;incstack = 0
  4245  003D12  0EBF               	movlw	191
  4246  003D14  6E09               	movwf	??_tolower& (0+255),c
  4247  003D16  0EFF               	movlw	255
  4248  003D18  6E0A               	movwf	(??_tolower+1)& (0+255),c
  4249  003D1A  C007  F00B         	movff	tolower@c,??_tolower+2
  4250  003D1E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4251  003D22  5009               	movf	??_tolower,w,c
  4252  003D24  260B               	addwf	??_tolower+2,f,c
  4253  003D26  500A               	movf	??_tolower+1,w,c
  4254  003D28  220C               	addwfc	??_tolower+3,f,c
  4255  003D2A  500C               	movf	??_tolower+3,w,c
  4256  003D2C  E106               	bnz	u3280
  4257  003D2E  0E1A               	movlw	26
  4258  003D30  5C0B               	subwf	??_tolower+2,w,c
  4259  003D32  B0D8               	btfsc	status,0,c
  4260  003D34  D002               	goto	u3280
  4261  003D36  0E01               	movlw	1
  4262  003D38  D001               	goto	u3290
  4263  003D3A                     u3280:
  4264  003D3A  0E00               	movlw	0
  4265  003D3C                     u3290:
  4266  003D3C  6E0D               	movwf	_tolower$1396,c
  4267  003D3E  6A0E               	clrf	_tolower$1396+1,c
  4268  003D40  500D               	movf	_tolower$1396,w,c
  4269  003D42  100E               	iorwf	_tolower$1396+1,w,c
  4270  003D44  B4D8               	btfsc	status,2,c
  4271  003D46  D006               	goto	l1327
  4272  003D48  0E20               	movlw	32
  4273  003D4A  1007               	iorwf	tolower@c,w,c
  4274  003D4C  6E07               	movwf	?_tolower,c
  4275  003D4E  5008               	movf	tolower@c+1,w,c
  4276  003D50  6E08               	movwf	?_tolower+1,c
  4277  003D52  0012               	return	
  4278  003D54                     l1327:
  4279  003D54  C007  F007         	movff	tolower@c,?_tolower
  4280  003D58  C008  F008         	movff	tolower@c+1,?_tolower+1
  4281  003D5C  0012               	return		;funcret
  4282  003D5E                     __end_of_tolower:
  4283                           	opt callstack 0
  4284                           
  4285 ;; *************** function _isupper *****************
  4286 ;; Defined at:
  4287 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  c               2    0[COMRAM] int 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    0[COMRAM] int 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        6 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_efgtoa
  4311 ;;		_vfpfcnvrt
  4312 ;;		_tolower
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text11
  4317  003E9A                     __ptext11:
  4318                           	opt callstack 0
  4319  003E9A                     _isupper:
  4320                           	opt callstack 25
  4321                           
  4322                           ;incstack = 0
  4323  003E9A  0EBF               	movlw	191
  4324  003E9C  6E03               	movwf	??_isupper& (0+255),c
  4325  003E9E  0EFF               	movlw	255
  4326  003EA0  6E04               	movwf	(??_isupper+1)& (0+255),c
  4327  003EA2  C001  F005         	movff	isupper@c,??_isupper+2
  4328  003EA6  C002  F006         	movff	isupper@c+1,??_isupper+3
  4329  003EAA  5003               	movf	??_isupper,w,c
  4330  003EAC  2605               	addwf	??_isupper+2,f,c
  4331  003EAE  5004               	movf	??_isupper+1,w,c
  4332  003EB0  2206               	addwfc	??_isupper+3,f,c
  4333  003EB2  5006               	movf	??_isupper+3,w,c
  4334  003EB4  E106               	bnz	u2720
  4335  003EB6  0E1A               	movlw	26
  4336  003EB8  5C05               	subwf	??_isupper+2,w,c
  4337  003EBA  B0D8               	btfsc	status,0,c
  4338  003EBC  D002               	goto	u2720
  4339  003EBE  0E01               	movlw	1
  4340  003EC0  D001               	goto	u2730
  4341  003EC2                     u2720:
  4342  003EC2  0E00               	movlw	0
  4343  003EC4                     u2730:
  4344  003EC4  6E01               	movwf	?_isupper,c
  4345  003EC6  6A02               	clrf	?_isupper+1,c
  4346  003EC8  0012               	return		;funcret
  4347  003ECA                     __end_of_isupper:
  4348                           	opt callstack 0
  4349                           
  4350 ;; *************** function _strcpy *****************
  4351 ;; Defined at:
  4352 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4355 ;;		 -> dbuf(80), 
  4356 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4357 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4358 ;;		 -> dbuf(80), 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  d               2    8[COMRAM] PTR unsigned char 
  4361 ;;		 -> dbuf(80), 
  4362 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4363 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4364 ;;		 -> dbuf(80), 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  2    0[COMRAM] PTR unsigned char 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:       10 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_efgtoa
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text12
  4388  003BC8                     __ptext12:
  4389                           	opt callstack 0
  4390  003BC8                     _strcpy:
  4391                           	opt callstack 25
  4392                           
  4393                           ;incstack = 0
  4394  003BC8  C003  F007         	movff	strcpy@src,strcpy@s
  4395  003BCC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4396  003BD0  C001  F009         	movff	strcpy@dest,strcpy@d
  4397  003BD4  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4398  003BD8                     l3417:
  4399  003BD8  5007               	movf	strcpy@s,w,c
  4400  003BDA  6E05               	movwf	??_strcpy& (0+255),c
  4401  003BDC  5008               	movf	strcpy@s+1,w,c
  4402  003BDE  6E06               	movwf	(??_strcpy+1)& (0+255),c
  4403  003BE0  4A07               	infsnz	strcpy@s,f,c
  4404  003BE2  2A08               	incf	strcpy@s+1,f,c
  4405  003BE4  C005  FFF6         	movff	??_strcpy,tblptrl
  4406  003BE8  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4407  003BEC  0E00               	movlw	low (__smallconst shr (0+16))
  4408  003BEE  6EF8               	movwf	tblptru,c
  4409  003BF0  C009  FFD9         	movff	strcpy@d,fsr2l
  4410  003BF4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4411  003BF8  4A09               	infsnz	strcpy@d,f,c
  4412  003BFA  2A0A               	incf	strcpy@d+1,f,c
  4413  003BFC  0E0F               	movlw	(high __ramtop+-1)
  4414  003BFE  64F7               	cpfsgt	tblptrh,c
  4415  003C00  D003               	bra	u3267
  4416  003C02  0008               	tblrd		*
  4417  003C04  50F5               	movf	tablat,w,c
  4418  003C06  D005               	bra	u3260
  4419  003C08                     u3267:
  4420  003C08  CFF6 FFE9          	movff	tblptrl,fsr0l
  4421  003C0C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4422  003C10  50EF               	movf	indf0,w,c
  4423  003C12                     u3260:
  4424  003C12  6EDF               	movwf	indf2,c
  4425  003C14  50DF               	movf	indf2,w,c
  4426  003C16  B4D8               	btfsc	status,2,c
  4427  003C18  0012               	return	
  4428  003C1A  D7DE               	goto	l3417
  4429  003C1C                     __end_of_strcpy:
  4430                           	opt callstack 0
  4431                           
  4432 ;; *************** function _pad *****************
  4433 ;; Defined at:
  4434 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4437 ;;		 -> sprintf@f(6), 
  4438 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4439 ;;		 -> dbuf(80), 
  4440 ;;  p               2   20[COMRAM] int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  w               2   25[COMRAM] int 
  4443 ;;  i               2   23[COMRAM] int 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2   16[COMRAM] int 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4453 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;Total ram usage:       11 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    3
  4460 ;; This function calls:
  4461 ;;		_fputc
  4462 ;;		_fputs
  4463 ;;		_strlen
  4464 ;; This function is called by:
  4465 ;;		_efgtoa
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text13
  4470  003432                     __ptext13:
  4471                           	opt callstack 0
  4472  003432                     _pad:
  4473                           	opt callstack 22
  4474                           
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4476                           
  4477                           ;incstack = 0
  4478  003432  0100               	movlb	0	; () banked
  4479  003434  A1E8               	btfss	_flags& (0+255),0,b
  4480  003436  D00A               	goto	l3375
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4484  003438  C013  F00A         	movff	pad@buf,fputs@s
  4485  00343C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4486  003440  C011  F00C         	movff	pad@fp,fputs@fp
  4487  003444  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4488  003448  EC15  F01F         	call	_fputs	;wreg free
  4489  00344C                     l3375:
  4490                           
  4491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4492  00344C  BE16               	btfsc	pad@p+1,7,c
  4493  00344E  D005               	goto	l3379
  4494  003450  C015  F01A         	movff	pad@p,pad@w
  4495  003454  C016  F01B         	movff	pad@p+1,pad@w+1
  4496  003458  D004               	goto	l395
  4497  00345A                     l3379:
  4498  00345A  0E00               	movlw	0
  4499  00345C  6E1B               	movwf	pad@w+1,c
  4500  00345E  0E00               	movlw	0
  4501  003460  6E1A               	movwf	pad@w,c
  4502  003462                     l395:
  4503                           
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4505  003462  0E00               	movlw	0
  4506  003464  6E19               	movwf	pad@i+1,c
  4507  003466  0E00               	movlw	0
  4508  003468  6E18               	movwf	pad@i,c
  4509                           
  4510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4511  00346A  D00C               	goto	l3385
  4512  00346C                     l3381:
  4513                           
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4515  00346C  0E00               	movlw	0
  4516  00346E  6E02               	movwf	fputc@c+1,c
  4517  003470  0E20               	movlw	32
  4518  003472  6E01               	movwf	fputc@c,c
  4519  003474  C011  F003         	movff	pad@fp,fputc@fp
  4520  003478  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4521  00347C  ECC9  F019         	call	_fputc	;wreg free
  4522                           
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4524  003480  4A18               	infsnz	pad@i,f,c
  4525  003482  2A19               	incf	pad@i+1,f,c
  4526  003484                     l3385:
  4527                           
  4528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4529  003484  501A               	movf	pad@w,w,c
  4530  003486  5C18               	subwf	pad@i,w,c
  4531  003488  5019               	movf	pad@i+1,w,c
  4532  00348A  0A80               	xorlw	128
  4533  00348C  6E17               	movwf	??_pad& (0+255),c
  4534  00348E  501B               	movf	pad@w+1,w,c
  4535  003490  0A80               	xorlw	128
  4536  003492  5817               	subwfb	??_pad& (0+255),w,c
  4537  003494  A0D8               	btfss	status,0,c
  4538  003496  D7EA               	goto	l3381
  4539                           
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4541  003498  0100               	movlb	0	; () banked
  4542  00349A  B1E8               	btfsc	_flags& (0+255),0,b
  4543  00349C  D00A               	goto	l3389
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4547  00349E  C013  F00A         	movff	pad@buf,fputs@s
  4548  0034A2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4549  0034A6  C011  F00C         	movff	pad@fp,fputs@fp
  4550  0034AA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4551  0034AE  EC15  F01F         	call	_fputs	;wreg free
  4552  0034B2                     l3389:
  4553                           
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4555  0034B2  C013  F001         	movff	pad@buf,strlen@s
  4556  0034B6  C014  F002         	movff	pad@buf+1,strlen@s+1
  4557  0034BA  EC94  F01F         	call	_strlen	;wreg free
  4558  0034BE  501A               	movf	pad@w,w,c
  4559  0034C0  2401               	addwf	?_strlen,w,c
  4560  0034C2  6E11               	movwf	?_pad,c
  4561  0034C4  501B               	movf	pad@w+1,w,c
  4562  0034C6  2002               	addwfc	?_strlen+1,w,c
  4563  0034C8  6E12               	movwf	?_pad+1,c
  4564  0034CA  0012               	return		;funcret
  4565  0034CC                     __end_of_pad:
  4566                           	opt callstack 0
  4567                           
  4568 ;; *************** function _strlen *****************
  4569 ;; Defined at:
  4570 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4573 ;;		 -> dbuf(80), 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4576 ;;		 -> dbuf(80), 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  2    0[COMRAM] unsigned int 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;Total ram usage:        4 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_pad
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text14
  4600  003F28                     __ptext14:
  4601                           	opt callstack 0
  4602  003F28                     _strlen:
  4603                           	opt callstack 24
  4604                           
  4605                           ;incstack = 0
  4606  003F28  C001  F003         	movff	strlen@s,strlen@a
  4607  003F2C  C002  F004         	movff	strlen@s+1,strlen@a+1
  4608  003F30  D002               	goto	l3155
  4609  003F32                     l3153:
  4610  003F32  4A01               	infsnz	strlen@s,f,c
  4611  003F34  2A02               	incf	strlen@s+1,f,c
  4612  003F36                     l3155:
  4613  003F36  C001  FFD9         	movff	strlen@s,fsr2l
  4614  003F3A  C002  FFDA         	movff	strlen@s+1,fsr2h
  4615  003F3E  50DF               	movf	indf2,w,c
  4616  003F40  A4D8               	btfss	status,2,c
  4617  003F42  D7F7               	goto	l3153
  4618  003F44  5003               	movf	strlen@a,w,c
  4619  003F46  5C01               	subwf	strlen@s,w,c
  4620  003F48  6E01               	movwf	?_strlen,c
  4621  003F4A  5004               	movf	strlen@a+1,w,c
  4622  003F4C  5802               	subwfb	strlen@s+1,w,c
  4623  003F4E  6E02               	movwf	?_strlen+1,c
  4624  003F50  0012               	return		;funcret
  4625  003F52                     __end_of_strlen:
  4626                           	opt callstack 0
  4627                           
  4628 ;; *************** function _fputs *****************
  4629 ;; Defined at:
  4630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4633 ;;		 -> dbuf(80), 
  4634 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4635 ;;		 -> sprintf@f(6), 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  i               2   14[COMRAM] int 
  4638 ;;  c               1   13[COMRAM] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    9[COMRAM] int 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;Total ram usage:        7 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    2
  4655 ;; This function calls:
  4656 ;;		_fputc
  4657 ;; This function is called by:
  4658 ;;		_pad
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text15
  4663  003E2A                     __ptext15:
  4664                           	opt callstack 0
  4665  003E2A                     _fputs:
  4666                           	opt callstack 22
  4667                           
  4668                           ;incstack = 0
  4669  003E2A  0E00               	movlw	0
  4670  003E2C  6E10               	movwf	fputs@i+1,c
  4671  003E2E  0E00               	movlw	0
  4672  003E30  6E0F               	movwf	fputs@i,c
  4673  003E32  D00B               	goto	l3149
  4674  003E34                     l3145:
  4675  003E34  C00E  F001         	movff	fputs@c,fputc@c
  4676  003E38  6A02               	clrf	fputc@c+1,c
  4677  003E3A  C00C  F003         	movff	fputs@fp,fputc@fp
  4678  003E3E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4679  003E42  ECC9  F019         	call	_fputc	;wreg free
  4680  003E46  4A0F               	infsnz	fputs@i,f,c
  4681  003E48  2A10               	incf	fputs@i+1,f,c
  4682  003E4A                     l3149:
  4683  003E4A  500F               	movf	fputs@i,w,c
  4684  003E4C  240A               	addwf	fputs@s,w,c
  4685  003E4E  6ED9               	movwf	fsr2l,c
  4686  003E50  5010               	movf	fputs@i+1,w,c
  4687  003E52  200B               	addwfc	fputs@s+1,w,c
  4688  003E54  6EDA               	movwf	fsr2h,c
  4689  003E56  50DF               	movf	indf2,w,c
  4690  003E58  6E0E               	movwf	fputs@c,c
  4691  003E5A  500E               	movf	fputs@c,w,c
  4692  003E5C  B4D8               	btfsc	status,2,c
  4693  003E5E  0012               	return	
  4694  003E60  D7E9               	goto	l3145
  4695  003E62                     __end_of_fputs:
  4696                           	opt callstack 0
  4697                           
  4698 ;; *************** function _fputc *****************
  4699 ;; Defined at:
  4700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  c               2    0[COMRAM] int 
  4703 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4704 ;;		 -> sprintf@f(6), 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  2    0[COMRAM] int 
  4709 ;; Registers used:
  4710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;Total ram usage:        9 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		_putch
  4725 ;; This function is called by:
  4726 ;;		_pad
  4727 ;;		_vfpfcnvrt
  4728 ;;		_fputs
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text16
  4733  003392                     __ptext16:
  4734                           	opt callstack 0
  4735  003392                     _fputc:
  4736                           	opt callstack 25
  4737                           
  4738                           ;incstack = 0
  4739  003392  5003               	movf	fputc@fp,w,c
  4740  003394  1004               	iorwf	fputc@fp+1,w,c
  4741  003396  B4D8               	btfsc	status,2,c
  4742  003398  D004               	goto	u2670
  4743  00339A  5003               	movf	fputc@fp,w,c
  4744  00339C  1004               	iorwf	fputc@fp+1,w,c
  4745  00339E  A4D8               	btfss	status,2,c
  4746  0033A0  D004               	goto	l3135
  4747  0033A2                     u2670:
  4748  0033A2  5001               	movf	fputc@c,w,c
  4749  0033A4  EC14  F020         	call	_putch
  4750  0033A8  0012               	return	
  4751  0033AA                     l3135:
  4752  0033AA  EE20 F004          	lfsr	2,4
  4753  0033AE  5003               	movf	fputc@fp,w,c
  4754  0033B0  26D9               	addwf	fsr2l,f,c
  4755  0033B2  5004               	movf	fputc@fp+1,w,c
  4756  0033B4  22DA               	addwfc	fsr2h,f,c
  4757  0033B6  50DE               	movf	postinc2,w,c
  4758  0033B8  10DE               	iorwf	postinc2,w,c
  4759  0033BA  B4D8               	btfsc	status,2,c
  4760  0033BC  D016               	goto	u2690
  4761  0033BE  EE20 F004          	lfsr	2,4
  4762  0033C2  5003               	movf	fputc@fp,w,c
  4763  0033C4  26D9               	addwf	fsr2l,f,c
  4764  0033C6  5004               	movf	fputc@fp+1,w,c
  4765  0033C8  22DA               	addwfc	fsr2h,f,c
  4766  0033CA  EE10 F002          	lfsr	1,2
  4767  0033CE  5003               	movf	fputc@fp,w,c
  4768  0033D0  26E1               	addwf	fsr1l,f,c
  4769  0033D2  5004               	movf	fputc@fp+1,w,c
  4770  0033D4  22E2               	addwfc	fsr1h,f,c
  4771  0033D6  50DE               	movf	postinc2,w,c
  4772  0033D8  5CE6               	subwf	postinc1,w,c
  4773  0033DA  50E6               	movf	postinc1,w,c
  4774  0033DC  0A80               	xorlw	128
  4775  0033DE  6E09               	movwf	(??_fputc+4)& (0+255),c
  4776  0033E0  50DE               	movf	postinc2,w,c
  4777  0033E2  0A80               	xorlw	128
  4778  0033E4  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  4779  0033E6  B0D8               	btfsc	status,0,c
  4780  0033E8  0012               	return	
  4781  0033EA                     u2690:
  4782  0033EA  EE20 F002          	lfsr	2,2
  4783  0033EE  5003               	movf	fputc@fp,w,c
  4784  0033F0  26D9               	addwf	fsr2l,f,c
  4785  0033F2  5004               	movf	fputc@fp+1,w,c
  4786  0033F4  22DA               	addwfc	fsr2h,f,c
  4787  0033F6  CFDE F005          	movff	postinc2,??_fputc
  4788  0033FA  CFDD F006          	movff	postdec2,??_fputc+1
  4789  0033FE  C003  FFD9         	movff	fputc@fp,fsr2l
  4790  003402  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4791  003406  CFDE F007          	movff	postinc2,??_fputc+2
  4792  00340A  CFDD F008          	movff	postdec2,??_fputc+3
  4793  00340E  5005               	movf	??_fputc,w,c
  4794  003410  2407               	addwf	??_fputc+2,w,c
  4795  003412  6ED9               	movwf	fsr2l,c
  4796  003414  5006               	movf	??_fputc+1,w,c
  4797  003416  2008               	addwfc	??_fputc+3,w,c
  4798  003418  6EDA               	movwf	fsr2h,c
  4799  00341A  C001  FFDF         	movff	fputc@c,indf2
  4800  00341E  EE20 F002          	lfsr	2,2
  4801  003422  5003               	movf	fputc@fp,w,c
  4802  003424  26D9               	addwf	fsr2l,f,c
  4803  003426  5004               	movf	fputc@fp+1,w,c
  4804  003428  22DA               	addwfc	fsr2h,f,c
  4805  00342A  2ADE               	incf	postinc2,f,c
  4806  00342C  0E00               	movlw	0
  4807  00342E  22DD               	addwfc	postdec2,f,c
  4808  003430  0012               	return		;funcret
  4809  003432                     __end_of_fputc:
  4810                           	opt callstack 0
  4811                           
  4812 ;; *************** function _putch *****************
  4813 ;; Defined at:
  4814 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  c               1    wreg     unsigned char 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  c               1    0[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_fputc
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text17
  4842  004028                     __ptext17:
  4843                           	opt callstack 0
  4844  004028                     _putch:
  4845                           	opt callstack 25
  4846                           
  4847                           ;incstack = 0
  4848  004028  0012               	return		;funcret
  4849  00402A                     __end_of_putch:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _floorf *****************
  4853 ;; Defined at:
  4854 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  x               4   25[COMRAM] float 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  u               4   41[COMRAM] struct .
  4859 ;;  m               4   35[COMRAM] unsigned long 
  4860 ;;  e               2   39[COMRAM] int 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  4   25[COMRAM] float 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:       20 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_efgtoa
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text18
  4884  002986                     __ptext18:
  4885                           	opt callstack 0
  4886  002986                     _floorf:
  4887                           	opt callstack 25
  4888                           
  4889                           ;incstack = 0
  4890  002986  C0BA  F02A         	movff	floorf@F524,floorf@u
  4891  00298A  C0BB  F02B         	movff	floorf@F524+1,floorf@u+1
  4892  00298E  C0BC  F02C         	movff	floorf@F524+2,floorf@u+2
  4893  002992  C0BD  F02D         	movff	floorf@F524+3,floorf@u+3
  4894  002996  C01A  F02A         	movff	floorf@x,floorf@u
  4895  00299A  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4896  00299E  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4897  0029A2  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4898  0029A6  0E81               	movlw	129
  4899  0029A8  6E1E               	movwf	??_floorf& (0+255),c
  4900  0029AA  0EFF               	movlw	255
  4901  0029AC  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4902  0029AE  C02A  F020         	movff	floorf@u,??_floorf+2
  4903  0029B2  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4904  0029B6  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4905  0029BA  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4906  0029BE  0E18               	movlw	24
  4907  0029C0  D005               	goto	u3310
  4908  0029C2                     u3315:
  4909  0029C2  90D8               	bcf	status,0,c
  4910  0029C4  3223               	rrcf	??_floorf+5,f,c
  4911  0029C6  3222               	rrcf	??_floorf+4,f,c
  4912  0029C8  3221               	rrcf	??_floorf+3,f,c
  4913  0029CA  3220               	rrcf	??_floorf+2,f,c
  4914  0029CC                     u3310:
  4915  0029CC  2EE8               	decfsz	wreg,f,c
  4916  0029CE  D7F9               	goto	u3315
  4917  0029D0  5020               	movf	??_floorf+2,w,c
  4918  0029D2  241E               	addwf	??_floorf,w,c
  4919  0029D4  6E28               	movwf	floorf@e,c
  4920  0029D6  0E00               	movlw	0
  4921  0029D8  201F               	addwfc	??_floorf+1,w,c
  4922  0029DA  6E29               	movwf	floorf@e+1,c
  4923  0029DC  BE29               	btfsc	floorf@e+1,7,c
  4924  0029DE  D00F               	goto	l3435
  4925  0029E0  5029               	movf	floorf@e+1,w,c
  4926  0029E2  E104               	bnz	u3320
  4927  0029E4  0E17               	movlw	23
  4928  0029E6  5C28               	subwf	floorf@e,w,c
  4929  0029E8  A0D8               	btfss	status,0,c
  4930  0029EA  D009               	goto	l3435
  4931  0029EC                     u3320:
  4932  0029EC  C01A  F01A         	movff	floorf@x,?_floorf
  4933  0029F0  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4934  0029F4  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4935  0029F8  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4936  0029FC  0012               	return	
  4937  0029FE                     l3435:
  4938  0029FE  BE29               	btfsc	floorf@e+1,7,c
  4939  002A00  D05E               	goto	l3445
  4940  002A02  C028  F01E         	movff	floorf@e,??_floorf
  4941  002A06  0EFF               	movlw	255
  4942  002A08  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4943  002A0A  0EFF               	movlw	255
  4944  002A0C  6E20               	movwf	(??_floorf+2)& (0+255),c
  4945  002A0E  0E7F               	movlw	127
  4946  002A10  6E21               	movwf	(??_floorf+3)& (0+255),c
  4947  002A12  0E00               	movlw	0
  4948  002A14  6E22               	movwf	(??_floorf+4)& (0+255),c
  4949  002A16                     u3345:
  4950  002A16  661E               	tstfsz	??_floorf,c
  4951  002A18  D001               	goto	u3346
  4952  002A1A  D007               	goto	u3347
  4953  002A1C                     u3346:
  4954  002A1C  3422               	rlcf	??_floorf+4,w,c
  4955  002A1E  3222               	rrcf	??_floorf+4,f,c
  4956  002A20  3221               	rrcf	??_floorf+3,f,c
  4957  002A22  3220               	rrcf	??_floorf+2,f,c
  4958  002A24  321F               	rrcf	??_floorf+1,f,c
  4959  002A26  2E1E               	decfsz	??_floorf,f,c
  4960  002A28  D7F6               	goto	u3345
  4961  002A2A                     u3347:
  4962  002A2A  C01F  F024         	movff	??_floorf+1,floorf@m
  4963  002A2E  C020  F025         	movff	??_floorf+2,floorf@m+1
  4964  002A32  C021  F026         	movff	??_floorf+3,floorf@m+2
  4965  002A36  C022  F027         	movff	??_floorf+4,floorf@m+3
  4966  002A3A  5024               	movf	floorf@m,w,c
  4967  002A3C  142A               	andwf	floorf@u,w,c
  4968  002A3E  6E1E               	movwf	??_floorf& (0+255),c
  4969  002A40  5025               	movf	floorf@m+1,w,c
  4970  002A42  142B               	andwf	floorf@u+1,w,c
  4971  002A44  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4972  002A46  5026               	movf	floorf@m+2,w,c
  4973  002A48  142C               	andwf	floorf@u+2,w,c
  4974  002A4A  6E20               	movwf	(??_floorf+2)& (0+255),c
  4975  002A4C  5027               	movf	floorf@m+3,w,c
  4976  002A4E  142D               	andwf	floorf@u+3,w,c
  4977  002A50  6E21               	movwf	(??_floorf+3)& (0+255),c
  4978  002A52  501E               	movf	??_floorf,w,c
  4979  002A54  101F               	iorwf	??_floorf+1,w,c
  4980  002A56  1020               	iorwf	??_floorf+2,w,c
  4981  002A58  1021               	iorwf	??_floorf+3,w,c
  4982  002A5A  B4D8               	btfsc	status,2,c
  4983  002A5C  D7C7               	goto	u3320
  4984  002A5E  C02A  F01E         	movff	floorf@u,??_floorf
  4985  002A62  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4986  002A66  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4987  002A6A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4988  002A6E  0E20               	movlw	32
  4989  002A70  D005               	goto	u3360
  4990  002A72                     u3365:
  4991  002A72  90D8               	bcf	status,0,c
  4992  002A74  3221               	rrcf	??_floorf+3,f,c
  4993  002A76  3220               	rrcf	??_floorf+2,f,c
  4994  002A78  321F               	rrcf	??_floorf+1,f,c
  4995  002A7A  321E               	rrcf	??_floorf,f,c
  4996  002A7C                     u3360:
  4997  002A7C  2EE8               	decfsz	wreg,f,c
  4998  002A7E  D7F9               	goto	u3365
  4999  002A80  501E               	movf	??_floorf,w,c
  5000  002A82  101F               	iorwf	??_floorf+1,w,c
  5001  002A84  1020               	iorwf	??_floorf+2,w,c
  5002  002A86  1021               	iorwf	??_floorf+3,w,c
  5003  002A88  B4D8               	btfsc	status,2,c
  5004  002A8A  D008               	goto	l1247
  5005  002A8C  5024               	movf	floorf@m,w,c
  5006  002A8E  262A               	addwf	floorf@u,f,c
  5007  002A90  5025               	movf	floorf@m+1,w,c
  5008  002A92  222B               	addwfc	floorf@u+1,f,c
  5009  002A94  5026               	movf	floorf@m+2,w,c
  5010  002A96  222C               	addwfc	floorf@u+2,f,c
  5011  002A98  5027               	movf	floorf@m+3,w,c
  5012  002A9A  222D               	addwfc	floorf@u+3,f,c
  5013  002A9C                     l1247:
  5014  002A9C  1C24               	comf	floorf@m,w,c
  5015  002A9E  6E1E               	movwf	??_floorf& (0+255),c
  5016  002AA0  1C25               	comf	floorf@m+1,w,c
  5017  002AA2  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5018  002AA4  1C26               	comf	floorf@m+2,w,c
  5019  002AA6  6E20               	movwf	(??_floorf+2)& (0+255),c
  5020  002AA8  1C27               	comf	floorf@m+3,w,c
  5021  002AAA  6E21               	movwf	(??_floorf+3)& (0+255),c
  5022  002AAC  501E               	movf	??_floorf,w,c
  5023  002AAE  162A               	andwf	floorf@u,f,c
  5024  002AB0  501F               	movf	??_floorf+1,w,c
  5025  002AB2  162B               	andwf	floorf@u+1,f,c
  5026  002AB4  5020               	movf	??_floorf+2,w,c
  5027  002AB6  162C               	andwf	floorf@u+2,f,c
  5028  002AB8  5021               	movf	??_floorf+3,w,c
  5029  002ABA  162D               	andwf	floorf@u+3,f,c
  5030  002ABC  D036               	goto	l3453
  5031  002ABE                     l3445:
  5032  002ABE  C02A  F01E         	movff	floorf@u,??_floorf
  5033  002AC2  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5034  002AC6  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5035  002ACA  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5036  002ACE  0E20               	movlw	32
  5037  002AD0  D005               	goto	u3380
  5038  002AD2                     u3385:
  5039  002AD2  90D8               	bcf	status,0,c
  5040  002AD4  3221               	rrcf	??_floorf+3,f,c
  5041  002AD6  3220               	rrcf	??_floorf+2,f,c
  5042  002AD8  321F               	rrcf	??_floorf+1,f,c
  5043  002ADA  321E               	rrcf	??_floorf,f,c
  5044  002ADC                     u3380:
  5045  002ADC  2EE8               	decfsz	wreg,f,c
  5046  002ADE  D7F9               	goto	u3385
  5047  002AE0  501E               	movf	??_floorf,w,c
  5048  002AE2  101F               	iorwf	??_floorf+1,w,c
  5049  002AE4  1020               	iorwf	??_floorf+2,w,c
  5050  002AE6  1021               	iorwf	??_floorf+3,w,c
  5051  002AE8  A4D8               	btfss	status,2,c
  5052  002AEA  D008               	goto	l3449
  5053  002AEC  0E00               	movlw	0
  5054  002AEE  6E2A               	movwf	floorf@u,c
  5055  002AF0  0E00               	movlw	0
  5056  002AF2  6E2B               	movwf	floorf@u+1,c
  5057  002AF4  0E00               	movlw	0
  5058  002AF6  6E2C               	movwf	floorf@u+2,c
  5059  002AF8  0E00               	movlw	0
  5060  002AFA  D016               	goto	L6
  5061  002AFC                     l3449:
  5062  002AFC  90D8               	bcf	status,0,c
  5063  002AFE  342A               	rlcf	floorf@u,w,c
  5064  002B00  6E1E               	movwf	??_floorf& (0+255),c
  5065  002B02  342B               	rlcf	floorf@u+1,w,c
  5066  002B04  6E1F               	movwf	(??_floorf+1)& (0+255),c
  5067  002B06  342C               	rlcf	floorf@u+2,w,c
  5068  002B08  6E20               	movwf	(??_floorf+2)& (0+255),c
  5069  002B0A  342D               	rlcf	floorf@u+3,w,c
  5070  002B0C  6E21               	movwf	(??_floorf+3)& (0+255),c
  5071  002B0E  501E               	movf	??_floorf,w,c
  5072  002B10  101F               	iorwf	??_floorf+1,w,c
  5073  002B12  1020               	iorwf	??_floorf+2,w,c
  5074  002B14  1021               	iorwf	??_floorf+3,w,c
  5075  002B16  B4D8               	btfsc	status,2,c
  5076  002B18  D008               	goto	l3453
  5077  002B1A  0E00               	movlw	0
  5078  002B1C  6E2A               	movwf	floorf@u,c
  5079  002B1E  0E00               	movlw	0
  5080  002B20  6E2B               	movwf	floorf@u+1,c
  5081  002B22  0E80               	movlw	128
  5082  002B24  6E2C               	movwf	floorf@u+2,c
  5083  002B26  0EBF               	movlw	191
  5084  002B28                     L6:
  5085  002B28  6E2D               	movwf	floorf@u+3,c
  5086  002B2A                     l3453:
  5087  002B2A  C02A  F01A         	movff	floorf@u,?_floorf
  5088  002B2E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5089  002B32  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5090  002B36  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5091  002B3A  0012               	return		;funcret
  5092  002B3C                     __end_of_floorf:
  5093                           	opt callstack 0
  5094                           
  5095 ;; *************** function ___fpclassifyf *****************
  5096 ;; Defined at:
  5097 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  x               4    0[COMRAM] float 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  u               4   10[COMRAM] struct .
  5102 ;;  e               2    8[COMRAM] int 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    0[COMRAM] int 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;Total ram usage:       14 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_efgtoa
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text19
  5126  0030B4                     __ptext19:
  5127                           	opt callstack 0
  5128  0030B4                     ___fpclassifyf:
  5129                           	opt callstack 25
  5130                           
  5131                           ;incstack = 0
  5132  0030B4  C0BE  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5133  0030B8  C0BF  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5134  0030BC  C0C0  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5135  0030C0  C0C1  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5136  0030C4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5137  0030C8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5138  0030CC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5139  0030D0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5140  0030D4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5141  0030D8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5142  0030DC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5143  0030E0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5144  0030E4  0E18               	movlw	24
  5145  0030E6  D005               	goto	u3190
  5146  0030E8                     u3195:
  5147  0030E8  90D8               	bcf	status,0,c
  5148  0030EA  3208               	rrcf	??___fpclassifyf+3,f,c
  5149  0030EC  3207               	rrcf	??___fpclassifyf+2,f,c
  5150  0030EE  3206               	rrcf	??___fpclassifyf+1,f,c
  5151  0030F0  3205               	rrcf	??___fpclassifyf,f,c
  5152  0030F2                     u3190:
  5153  0030F2  2EE8               	decfsz	wreg,f,c
  5154  0030F4  D7F9               	goto	u3195
  5155  0030F6  5005               	movf	??___fpclassifyf,w,c
  5156  0030F8  6E09               	movwf	___fpclassifyf@e,c
  5157  0030FA  6A0A               	clrf	___fpclassifyf@e+1,c
  5158  0030FC  5009               	movf	___fpclassifyf@e,w,c
  5159  0030FE  100A               	iorwf	___fpclassifyf@e+1,w,c
  5160  003100  A4D8               	btfss	status,2,c
  5161  003102  D019               	goto	l3405
  5162  003104  90D8               	bcf	status,0,c
  5163  003106  340B               	rlcf	___fpclassifyf@u,w,c
  5164  003108  6E05               	movwf	??___fpclassifyf& (0+255),c
  5165  00310A  340C               	rlcf	___fpclassifyf@u+1,w,c
  5166  00310C  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5167  00310E  340D               	rlcf	___fpclassifyf@u+2,w,c
  5168  003110  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5169  003112  340E               	rlcf	___fpclassifyf@u+3,w,c
  5170  003114  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5171  003116  5005               	movf	??___fpclassifyf,w,c
  5172  003118  1006               	iorwf	??___fpclassifyf+1,w,c
  5173  00311A  1007               	iorwf	??___fpclassifyf+2,w,c
  5174  00311C  1008               	iorwf	??___fpclassifyf+3,w,c
  5175  00311E  A4D8               	btfss	status,2,c
  5176  003120  D005               	goto	l3401
  5177  003122  0E00               	movlw	0
  5178  003124  6E02               	movwf	?___fpclassifyf+1,c
  5179  003126  0E02               	movlw	2
  5180  003128  6E01               	movwf	?___fpclassifyf,c
  5181  00312A  0012               	return	
  5182  00312C                     l3401:
  5183  00312C  0E00               	movlw	0
  5184  00312E  6E02               	movwf	?___fpclassifyf+1,c
  5185  003130  0E03               	movlw	3
  5186  003132  6E01               	movwf	?___fpclassifyf,c
  5187  003134  0012               	return	
  5188  003136                     l3405:
  5189  003136  2809               	incf	___fpclassifyf@e,w,c
  5190  003138  100A               	iorwf	___fpclassifyf@e+1,w,c
  5191  00313A  A4D8               	btfss	status,2,c
  5192  00313C  D01C               	goto	l3411
  5193  00313E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5194  003142  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5195  003146  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5196  00314A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5197  00314E  0E09               	movlw	9
  5198  003150                     u3235:
  5199  003150  90D8               	bcf	status,0,c
  5200  003152  3605               	rlcf	??___fpclassifyf,f,c
  5201  003154  3606               	rlcf	??___fpclassifyf+1,f,c
  5202  003156  3607               	rlcf	??___fpclassifyf+2,f,c
  5203  003158  3608               	rlcf	??___fpclassifyf+3,f,c
  5204  00315A  2EE8               	decfsz	wreg,f,c
  5205  00315C  D7F9               	goto	u3235
  5206  00315E  5005               	movf	??___fpclassifyf,w,c
  5207  003160  1006               	iorwf	??___fpclassifyf+1,w,c
  5208  003162  1007               	iorwf	??___fpclassifyf+2,w,c
  5209  003164  1008               	iorwf	??___fpclassifyf+3,w,c
  5210  003166  A4D8               	btfss	status,2,c
  5211  003168  D002               	goto	u3240
  5212  00316A  0E01               	movlw	1
  5213  00316C  D001               	goto	u3250
  5214  00316E                     u3240:
  5215  00316E  0E00               	movlw	0
  5216  003170                     u3250:
  5217  003170  6E01               	movwf	?___fpclassifyf,c
  5218  003172  6A02               	clrf	?___fpclassifyf+1,c
  5219  003174  0012               	return	
  5220  003176                     l3411:
  5221  003176  0E00               	movlw	0
  5222  003178  6E02               	movwf	?___fpclassifyf+1,c
  5223  00317A  0E04               	movlw	4
  5224  00317C  6E01               	movwf	?___fpclassifyf,c
  5225  00317E  0012               	return		;funcret
  5226  003180                     __end_of___fpclassifyf:
  5227                           	opt callstack 0
  5228                           
  5229 ;; *************** function ___flsub *****************
  5230 ;; Defined at:
  5231 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  b               4   39[COMRAM] int 
  5234 ;;  a               4   43[COMRAM] int 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  4   39[COMRAM] int 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5246 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;Total ram usage:        8 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    1
  5253 ;; This function calls:
  5254 ;;		___fladd
  5255 ;; This function is called by:
  5256 ;;		_efgtoa
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text20
  5261  003DA6                     __ptext20:
  5262                           	opt callstack 0
  5263  003DA6                     ___flsub:
  5264                           	opt callstack 24
  5265                           
  5266                           ;incstack = 0
  5267  003DA6  0E00               	movlw	0
  5268  003DA8  1A2C               	xorwf	___flsub@a,f,c
  5269  003DAA  0E00               	movlw	0
  5270  003DAC  1A2D               	xorwf	___flsub@a+1,f,c
  5271  003DAE  0E00               	movlw	0
  5272  003DB0  1A2E               	xorwf	___flsub@a+2,f,c
  5273  003DB2  0E80               	movlw	128
  5274  003DB4  1A2F               	xorwf	___flsub@a+3,f,c
  5275  003DB6  C028  F001         	movff	___flsub@b,___fladd@b
  5276  003DBA  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5277  003DBE  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5278  003DC2  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5279  003DC6  C02C  F005         	movff	___flsub@a,___fladd@a
  5280  003DCA  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5281  003DCE  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5282  003DD2  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5283  003DD6  ECF9  F011         	call	___fladd	;wreg free
  5284  003DDA  C001  F028         	movff	?___fladd,?___flsub
  5285  003DDE  C002  F029         	movff	?___fladd+1,?___flsub+1
  5286  003DE2  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5287  003DE6  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5288  003DEA  0012               	return		;funcret
  5289  003DEC                     __end_of___flsub:
  5290                           	opt callstack 0
  5291                           
  5292 ;; *************** function ___fladd *****************
  5293 ;; Defined at:
  5294 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  b               4    0[COMRAM] int 
  5297 ;;  a               4    4[COMRAM] int 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  grs             1   15[COMRAM] unsigned char 
  5300 ;;  bexp            1   14[COMRAM] unsigned char 
  5301 ;;  aexp            1   13[COMRAM] unsigned char 
  5302 ;;  signs           1   12[COMRAM] unsigned char 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  4    0[COMRAM] unsigned char 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;Total ram usage:       16 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_efgtoa
  5322 ;;		___flsub
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text21
  5327  0023F2                     __ptext21:
  5328                           	opt callstack 0
  5329  0023F2                     ___fladd:
  5330                           	opt callstack 24
  5331                           
  5332                           ;incstack = 0
  5333  0023F2  5004               	movf	___fladd@b+3,w,c
  5334  0023F4  0B80               	andlw	128
  5335  0023F6  6E0D               	movwf	___fladd@signs,c
  5336  0023F8  5004               	movf	___fladd@b+3,w,c
  5337  0023FA  2404               	addwf	___fladd@b+3,w,c
  5338  0023FC  6E0F               	movwf	___fladd@bexp,c
  5339  0023FE  BE03               	btfsc	___fladd@b+2,7,c
  5340  002400  800F               	bsf	___fladd@bexp,0,c
  5341  002402  500F               	movf	___fladd@bexp,w,c
  5342  002404  B4D8               	btfsc	status,2,c
  5343  002406  D00D               	goto	l3181
  5344  002408  280F               	incf	___fladd@bexp,w,c
  5345  00240A  A4D8               	btfss	status,2,c
  5346  00240C  D008               	goto	l3177
  5347  00240E  0E00               	movlw	0
  5348  002410  6E01               	movwf	___fladd@b,c
  5349  002412  0E00               	movlw	0
  5350  002414  6E02               	movwf	___fladd@b+1,c
  5351  002416  0E00               	movlw	0
  5352  002418  6E03               	movwf	___fladd@b+2,c
  5353  00241A  0E00               	movlw	0
  5354  00241C  6E04               	movwf	___fladd@b+3,c
  5355  00241E                     l3177:
  5356  00241E  8E03               	bsf	___fladd@b+2,7,c
  5357  002420  D006               	goto	L7
  5358  002422                     l3181:
  5359  002422  0E00               	movlw	0
  5360  002424  6E01               	movwf	___fladd@b,c
  5361  002426  0E00               	movlw	0
  5362  002428  6E02               	movwf	___fladd@b+1,c
  5363  00242A  0E00               	movlw	0
  5364  00242C  6E03               	movwf	___fladd@b+2,c
  5365  00242E                     L7:
  5366  00242E  0E00               	movlw	0
  5367  002430  6E04               	movwf	___fladd@b+3,c
  5368  002432  5008               	movf	___fladd@a+3,w,c
  5369  002434  0B80               	andlw	128
  5370  002436  6E0E               	movwf	___fladd@aexp,c
  5371  002438  500D               	movf	___fladd@signs,w,c
  5372  00243A  180E               	xorwf	___fladd@aexp,w,c
  5373  00243C  A4D8               	btfss	status,2,c
  5374  00243E  8C0D               	bsf	___fladd@signs,6,c
  5375  002440  5008               	movf	___fladd@a+3,w,c
  5376  002442  2408               	addwf	___fladd@a+3,w,c
  5377  002444  6E0E               	movwf	___fladd@aexp,c
  5378  002446  BE07               	btfsc	___fladd@a+2,7,c
  5379  002448  800E               	bsf	___fladd@aexp,0,c
  5380  00244A  500E               	movf	___fladd@aexp,w,c
  5381  00244C  B4D8               	btfsc	status,2,c
  5382  00244E  D00D               	goto	l3205
  5383  002450  280E               	incf	___fladd@aexp,w,c
  5384  002452  A4D8               	btfss	status,2,c
  5385  002454  D008               	goto	l3201
  5386  002456  0E00               	movlw	0
  5387  002458  6E05               	movwf	___fladd@a,c
  5388  00245A  0E00               	movlw	0
  5389  00245C  6E06               	movwf	___fladd@a+1,c
  5390  00245E  0E00               	movlw	0
  5391  002460  6E07               	movwf	___fladd@a+2,c
  5392  002462  0E00               	movlw	0
  5393  002464  6E08               	movwf	___fladd@a+3,c
  5394  002466                     l3201:
  5395  002466  8E07               	bsf	___fladd@a+2,7,c
  5396  002468  D006               	goto	L8
  5397  00246A                     l3205:
  5398  00246A  0E00               	movlw	0
  5399  00246C  6E05               	movwf	___fladd@a,c
  5400  00246E  0E00               	movlw	0
  5401  002470  6E06               	movwf	___fladd@a+1,c
  5402  002472  0E00               	movlw	0
  5403  002474  6E07               	movwf	___fladd@a+2,c
  5404  002476                     L8:
  5405  002476  0E00               	movlw	0
  5406  002478  6E08               	movwf	___fladd@a+3,c
  5407  00247A  500F               	movf	___fladd@bexp,w,c
  5408  00247C  5C0E               	subwf	___fladd@aexp,w,c
  5409  00247E  B0D8               	btfsc	status,0,c
  5410  002480  D022               	goto	l3243
  5411  002482  AC0D               	btfss	___fladd@signs,6,c
  5412  002484  D002               	goto	l3213
  5413  002486  0E80               	movlw	128
  5414  002488  1A0D               	xorwf	___fladd@signs,f,c
  5415  00248A                     l3213:
  5416  00248A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5417  00248E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5418  002492  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5419  002496  C001  F010         	movff	___fladd@b,___fladd@grs
  5420  00249A  C005  F001         	movff	___fladd@a,___fladd@b
  5421  00249E  C010  F005         	movff	___fladd@grs,___fladd@a
  5422  0024A2  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5423  0024A6  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5424  0024AA  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5425  0024AE  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5426  0024B2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5427  0024B6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5428  0024BA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5429  0024BE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5430  0024C2  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5431  0024C6                     l3243:
  5432  0024C6  0E00               	movlw	0
  5433  0024C8  6E10               	movwf	___fladd@grs,c
  5434  0024CA  500F               	movf	___fladd@bexp,w,c
  5435  0024CC  C00E  F009         	movff	___fladd@aexp,??___fladd
  5436  0024D0  6A0A               	clrf	(??___fladd+1)& (0+255),c
  5437  0024D2  5E09               	subwf	??___fladd,f,c
  5438  0024D4  0E00               	movlw	0
  5439  0024D6  5A0A               	subwfb	??___fladd+1,f,c
  5440  0024D8  BE0A               	btfsc	??___fladd+1,7,c
  5441  0024DA  D02C               	goto	l1054
  5442  0024DC  500A               	movf	??___fladd+1,w,c
  5443  0024DE  E104               	bnz	u2830
  5444  0024E0  0E1A               	movlw	26
  5445  0024E2  5C09               	subwf	??___fladd,w,c
  5446  0024E4  A0D8               	btfss	status,0,c
  5447  0024E6  D026               	goto	l1054
  5448  0024E8                     u2830:
  5449  0024E8  5001               	movf	___fladd@b,w,c
  5450  0024EA  1002               	iorwf	___fladd@b+1,w,c
  5451  0024EC  1003               	iorwf	___fladd@b+2,w,c
  5452  0024EE  1004               	iorwf	___fladd@b+3,w,c
  5453  0024F0  B4D8               	btfsc	status,2,c
  5454  0024F2  D002               	goto	u2840
  5455  0024F4  0E01               	movlw	1
  5456  0024F6  D001               	goto	u2850
  5457  0024F8                     u2840:
  5458  0024F8  0E00               	movlw	0
  5459  0024FA                     u2850:
  5460  0024FA  6E10               	movwf	___fladd@grs,c
  5461  0024FC  0E00               	movlw	0
  5462  0024FE  6E01               	movwf	___fladd@b,c
  5463  002500  0E00               	movlw	0
  5464  002502  6E02               	movwf	___fladd@b+1,c
  5465  002504  0E00               	movlw	0
  5466  002506  6E03               	movwf	___fladd@b+2,c
  5467  002508  0E00               	movlw	0
  5468  00250A  6E04               	movwf	___fladd@b+3,c
  5469  00250C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5470  002510  D015               	goto	u2880
  5471  002512                     l1055:
  5472  002512  A010               	btfss	___fladd@grs,0,c
  5473  002514  D005               	goto	l3255
  5474  002516  90D8               	bcf	status,0,c
  5475  002518  3010               	rrcf	___fladd@grs,w,c
  5476  00251A  0901               	iorlw	1
  5477  00251C  6E10               	movwf	___fladd@grs,c
  5478  00251E  D002               	goto	l3257
  5479  002520                     l3255:
  5480  002520  90D8               	bcf	status,0,c
  5481  002522  3210               	rrcf	___fladd@grs,f,c
  5482  002524                     l3257:
  5483  002524  B001               	btfsc	___fladd@b,0,c
  5484  002526  8E10               	bsf	___fladd@grs,7,c
  5485  002528  3404               	rlcf	___fladd@b+3,w,c
  5486  00252A  3204               	rrcf	___fladd@b+3,f,c
  5487  00252C  3203               	rrcf	___fladd@b+2,f,c
  5488  00252E  3202               	rrcf	___fladd@b+1,f,c
  5489  002530  3201               	rrcf	___fladd@b,f,c
  5490  002532  2A0F               	incf	___fladd@bexp,f,c
  5491  002534                     l1054:
  5492  002534  500E               	movf	___fladd@aexp,w,c
  5493  002536  5C0F               	subwf	___fladd@bexp,w,c
  5494  002538  A0D8               	btfss	status,0,c
  5495  00253A  D7EB               	goto	l1055
  5496  00253C                     u2880:
  5497  00253C  BC0D               	btfsc	___fladd@signs,6,c
  5498  00253E  D028               	goto	l3289
  5499  002540  500F               	movf	___fladd@bexp,w,c
  5500  002542  A4D8               	btfss	status,2,c
  5501  002544  D009               	goto	l3271
  5502  002546  0E00               	movlw	0
  5503  002548  6E01               	movwf	?___fladd,c
  5504  00254A  0E00               	movlw	0
  5505  00254C  6E02               	movwf	?___fladd+1,c
  5506  00254E  0E00               	movlw	0
  5507  002550  6E03               	movwf	?___fladd+2,c
  5508  002552  0E00               	movlw	0
  5509  002554  6E04               	movwf	?___fladd+3,c
  5510  002556  0012               	return	
  5511  002558                     l3271:
  5512  002558  5005               	movf	___fladd@a,w,c
  5513  00255A  2601               	addwf	___fladd@b,f,c
  5514  00255C  5006               	movf	___fladd@a+1,w,c
  5515  00255E  2202               	addwfc	___fladd@b+1,f,c
  5516  002560  5007               	movf	___fladd@a+2,w,c
  5517  002562  2203               	addwfc	___fladd@b+2,f,c
  5518  002564  5008               	movf	___fladd@a+3,w,c
  5519  002566  2204               	addwfc	___fladd@b+3,f,c
  5520  002568  A004               	btfss	___fladd@b+3,0,c
  5521  00256A  D071               	goto	u3010
  5522  00256C  A010               	btfss	___fladd@grs,0,c
  5523  00256E  D005               	goto	l3279
  5524  002570  90D8               	bcf	status,0,c
  5525  002572  3010               	rrcf	___fladd@grs,w,c
  5526  002574  0901               	iorlw	1
  5527  002576  6E10               	movwf	___fladd@grs,c
  5528  002578  D002               	goto	l3281
  5529  00257A                     l3279:
  5530  00257A  90D8               	bcf	status,0,c
  5531  00257C  3210               	rrcf	___fladd@grs,f,c
  5532  00257E                     l3281:
  5533  00257E  B001               	btfsc	___fladd@b,0,c
  5534  002580  8E10               	bsf	___fladd@grs,7,c
  5535  002582  3404               	rlcf	___fladd@b+3,w,c
  5536  002584  3204               	rrcf	___fladd@b+3,f,c
  5537  002586  3203               	rrcf	___fladd@b+2,f,c
  5538  002588  3202               	rrcf	___fladd@b+1,f,c
  5539  00258A  3201               	rrcf	___fladd@b,f,c
  5540  00258C  2A0F               	incf	___fladd@bexp,f,c
  5541  00258E  D05F               	goto	u3010
  5542  002590                     l3289:
  5543  002590  5005               	movf	___fladd@a,w,c
  5544  002592  5C01               	subwf	___fladd@b,w,c
  5545  002594  5006               	movf	___fladd@a+1,w,c
  5546  002596  5802               	subwfb	___fladd@b+1,w,c
  5547  002598  5007               	movf	___fladd@a+2,w,c
  5548  00259A  5803               	subwfb	___fladd@b+2,w,c
  5549  00259C  5004               	movf	___fladd@b+3,w,c
  5550  00259E  0A80               	xorlw	128
  5551  0025A0  6E09               	movwf	??___fladd& (0+255),c
  5552  0025A2  5008               	movf	___fladd@a+3,w,c
  5553  0025A4  0A80               	xorlw	128
  5554  0025A6  5809               	subwfb	??___fladd& (0+255),w,c
  5555  0025A8  B0D8               	btfsc	status,0,c
  5556  0025AA  D025               	goto	l3299
  5557  0025AC  5001               	movf	___fladd@b,w,c
  5558  0025AE  5C05               	subwf	___fladd@a,w,c
  5559  0025B0  6E09               	movwf	??___fladd& (0+255),c
  5560  0025B2  5002               	movf	___fladd@b+1,w,c
  5561  0025B4  5806               	subwfb	___fladd@a+1,w,c
  5562  0025B6  6E0A               	movwf	(??___fladd+1)& (0+255),c
  5563  0025B8  5003               	movf	___fladd@b+2,w,c
  5564  0025BA  5807               	subwfb	___fladd@a+2,w,c
  5565  0025BC  6E0B               	movwf	(??___fladd+2)& (0+255),c
  5566  0025BE  5004               	movf	___fladd@b+3,w,c
  5567  0025C0  5808               	subwfb	___fladd@a+3,w,c
  5568  0025C2  6E0C               	movwf	(??___fladd+3)& (0+255),c
  5569  0025C4  0EFF               	movlw	255
  5570  0025C6  2409               	addwf	??___fladd,w,c
  5571  0025C8  6E01               	movwf	___fladd@b,c
  5572  0025CA  0EFF               	movlw	255
  5573  0025CC  200A               	addwfc	??___fladd+1,w,c
  5574  0025CE  6E02               	movwf	___fladd@b+1,c
  5575  0025D0  0EFF               	movlw	255
  5576  0025D2  200B               	addwfc	??___fladd+2,w,c
  5577  0025D4  6E03               	movwf	___fladd@b+2,c
  5578  0025D6  0EFF               	movlw	255
  5579  0025D8  200C               	addwfc	??___fladd+3,w,c
  5580  0025DA  6E04               	movwf	___fladd@b+3,c
  5581  0025DC  0E80               	movlw	128
  5582  0025DE  1A0D               	xorwf	___fladd@signs,f,c
  5583  0025E0  6C10               	negf	___fladd@grs,c
  5584  0025E2  5010               	movf	___fladd@grs,w,c
  5585  0025E4  A4D8               	btfss	status,2,c
  5586  0025E6  D00F               	goto	l1070
  5587  0025E8  0E01               	movlw	1
  5588  0025EA  2601               	addwf	___fladd@b,f,c
  5589  0025EC  0E00               	movlw	0
  5590  0025EE  2202               	addwfc	___fladd@b+1,f,c
  5591  0025F0  2203               	addwfc	___fladd@b+2,f,c
  5592  0025F2  2204               	addwfc	___fladd@b+3,f,c
  5593  0025F4  D008               	goto	l1070
  5594  0025F6                     l3299:
  5595  0025F6  5005               	movf	___fladd@a,w,c
  5596  0025F8  5E01               	subwf	___fladd@b,f,c
  5597  0025FA  5006               	movf	___fladd@a+1,w,c
  5598  0025FC  5A02               	subwfb	___fladd@b+1,f,c
  5599  0025FE  5007               	movf	___fladd@a+2,w,c
  5600  002600  5A03               	subwfb	___fladd@b+2,f,c
  5601  002602  5008               	movf	___fladd@a+3,w,c
  5602  002604  5A04               	subwfb	___fladd@b+3,f,c
  5603  002606                     l1070:
  5604  002606  5001               	movf	___fladd@b,w,c
  5605  002608  1002               	iorwf	___fladd@b+1,w,c
  5606  00260A  1003               	iorwf	___fladd@b+2,w,c
  5607  00260C  1004               	iorwf	___fladd@b+3,w,c
  5608  00260E  A4D8               	btfss	status,2,c
  5609  002610  D01C               	goto	l3323
  5610  002612  5010               	movf	___fladd@grs,w,c
  5611  002614  A4D8               	btfss	status,2,c
  5612  002616  D019               	goto	l3323
  5613  002618  0E00               	movlw	0
  5614  00261A  6E01               	movwf	?___fladd,c
  5615  00261C  0E00               	movlw	0
  5616  00261E  6E02               	movwf	?___fladd+1,c
  5617  002620  0E00               	movlw	0
  5618  002622  6E03               	movwf	?___fladd+2,c
  5619  002624  0E00               	movlw	0
  5620  002626  6E04               	movwf	?___fladd+3,c
  5621  002628  0012               	return	
  5622  00262A                     l3307:
  5623  00262A  90D8               	bcf	status,0,c
  5624  00262C  3601               	rlcf	___fladd@b,f,c
  5625  00262E  3602               	rlcf	___fladd@b+1,f,c
  5626  002630  3603               	rlcf	___fladd@b+2,f,c
  5627  002632  3604               	rlcf	___fladd@b+3,f,c
  5628  002634  BE10               	btfsc	___fladd@grs,7,c
  5629  002636  8001               	bsf	___fladd@b,0,c
  5630  002638  A010               	btfss	___fladd@grs,0,c
  5631  00263A  D002               	goto	l3317
  5632  00263C  80D8               	bsf	status,0,c
  5633  00263E  D001               	goto	L9
  5634  002640                     l3317:
  5635  002640  90D8               	bcf	status,0,c
  5636  002642                     L9:
  5637  002642  3610               	rlcf	___fladd@grs,f,c
  5638  002644  500F               	movf	___fladd@bexp,w,c
  5639  002646  A4D8               	btfss	status,2,c
  5640  002648  060F               	decf	___fladd@bexp,f,c
  5641  00264A                     l3323:
  5642  00264A  AE03               	btfss	___fladd@b+2,7,c
  5643  00264C  D7EE               	goto	l3307
  5644  00264E                     u3010:
  5645  00264E  0E00               	movlw	0
  5646  002650  6E0E               	movwf	___fladd@aexp,c
  5647  002652  AE10               	btfss	___fladd@grs,7,c
  5648  002654  D00B               	goto	l1079
  5649  002656  C010  F009         	movff	___fladd@grs,??___fladd
  5650  00265A  0E7F               	movlw	127
  5651  00265C  1609               	andwf	??___fladd,f,c
  5652  00265E  B4D8               	btfsc	status,2,c
  5653  002660  D003               	goto	l1080
  5654  002662                     u3030:
  5655  002662  0E01               	movlw	1
  5656  002664  6E0E               	movwf	___fladd@aexp,c
  5657  002666  D002               	goto	l1079
  5658  002668                     l1080:
  5659  002668  B001               	btfsc	___fladd@b,0,c
  5660  00266A  D7FB               	goto	u3030
  5661  00266C                     l1079:
  5662  00266C  500E               	movf	___fladd@aexp,w,c
  5663  00266E  B4D8               	btfsc	status,2,c
  5664  002670  D020               	goto	l3343
  5665  002672  0E01               	movlw	1
  5666  002674  2601               	addwf	___fladd@b,f,c
  5667  002676  0E00               	movlw	0
  5668  002678  2202               	addwfc	___fladd@b+1,f,c
  5669  00267A  2203               	addwfc	___fladd@b+2,f,c
  5670  00267C  2204               	addwfc	___fladd@b+3,f,c
  5671  00267E  A004               	btfss	___fladd@b+3,0,c
  5672  002680  D018               	goto	l3343
  5673  002682  C001  F009         	movff	___fladd@b,??___fladd
  5674  002686  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5675  00268A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5676  00268E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5677  002692  340C               	rlcf	??___fladd+3,w,c
  5678  002694  320C               	rrcf	??___fladd+3,f,c
  5679  002696  320B               	rrcf	??___fladd+2,f,c
  5680  002698  320A               	rrcf	??___fladd+1,f,c
  5681  00269A  3209               	rrcf	??___fladd,f,c
  5682  00269C  C009  F001         	movff	??___fladd,___fladd@b
  5683  0026A0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5684  0026A4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5685  0026A8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5686  0026AC  280F               	incf	___fladd@bexp,w,c
  5687  0026AE  A4D8               	btfss	status,2,c
  5688  0026B0  2A0F               	incf	___fladd@bexp,f,c
  5689  0026B2                     l3343:
  5690  0026B2  280F               	incf	___fladd@bexp,w,c
  5691  0026B4  B4D8               	btfsc	status,2,c
  5692  0026B6  D003               	goto	u3090
  5693  0026B8  500F               	movf	___fladd@bexp,w,c
  5694  0026BA  A4D8               	btfss	status,2,c
  5695  0026BC  D00D               	goto	l3351
  5696  0026BE                     u3090:
  5697  0026BE  0E00               	movlw	0
  5698  0026C0  6E01               	movwf	___fladd@b,c
  5699  0026C2  0E00               	movlw	0
  5700  0026C4  6E02               	movwf	___fladd@b+1,c
  5701  0026C6  0E00               	movlw	0
  5702  0026C8  6E03               	movwf	___fladd@b+2,c
  5703  0026CA  0E00               	movlw	0
  5704  0026CC  6E04               	movwf	___fladd@b+3,c
  5705  0026CE  500F               	movf	___fladd@bexp,w,c
  5706  0026D0  A4D8               	btfss	status,2,c
  5707  0026D2  D002               	goto	l3351
  5708  0026D4  0E00               	movlw	0
  5709  0026D6  6E0D               	movwf	___fladd@signs,c
  5710  0026D8                     l3351:
  5711  0026D8  A00F               	btfss	___fladd@bexp,0,c
  5712  0026DA  D002               	goto	l3355
  5713  0026DC  8E03               	bsf	___fladd@b+2,7,c
  5714  0026DE  D001               	goto	l3357
  5715  0026E0                     l3355:
  5716  0026E0  9E03               	bcf	___fladd@b+2,7,c
  5717  0026E2                     l3357:
  5718  0026E2  90D8               	bcf	status,0,c
  5719  0026E4  300F               	rrcf	___fladd@bexp,w,c
  5720  0026E6  6E04               	movwf	___fladd@b+3,c
  5721  0026E8  BE0D               	btfsc	___fladd@signs,7,c
  5722  0026EA  8E04               	bsf	___fladd@b+3,7,c
  5723  0026EC  C001  F001         	movff	___fladd@b,?___fladd
  5724  0026F0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5725  0026F4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5726  0026F8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5727  0026FC  0012               	return		;funcret
  5728  0026FE                     __end_of___fladd:
  5729                           	opt callstack 0
  5730                           
  5731 ;; *************** function ___flneg *****************
  5732 ;; Defined at:
  5733 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  f1              4    0[COMRAM] unsigned char 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  4    0[COMRAM] unsigned char 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;Total ram usage:        4 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_efgtoa
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text22
  5761  003EFA                     __ptext22:
  5762                           	opt callstack 0
  5763  003EFA                     ___flneg:
  5764                           	opt callstack 25
  5765                           
  5766                           ;incstack = 0
  5767  003EFA  5001               	movf	___flneg@f1,w,c
  5768  003EFC  1002               	iorwf	___flneg@f1+1,w,c
  5769  003EFE  1003               	iorwf	___flneg@f1+2,w,c
  5770  003F00  1004               	iorwf	___flneg@f1+3,w,c
  5771  003F02  B4D8               	btfsc	status,2,c
  5772  003F04  D008               	goto	l3863
  5773  003F06  0E00               	movlw	0
  5774  003F08  1A01               	xorwf	___flneg@f1,f,c
  5775  003F0A  0E00               	movlw	0
  5776  003F0C  1A02               	xorwf	___flneg@f1+1,f,c
  5777  003F0E  0E00               	movlw	0
  5778  003F10  1A03               	xorwf	___flneg@f1+2,f,c
  5779  003F12  0E80               	movlw	128
  5780  003F14  1A04               	xorwf	___flneg@f1+3,f,c
  5781  003F16                     l3863:
  5782  003F16  C001  F001         	movff	___flneg@f1,?___flneg
  5783  003F1A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5784  003F1E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5785  003F22  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5786  003F26  0012               	return		;funcret
  5787  003F28                     __end_of___flneg:
  5788                           	opt callstack 0
  5789                           
  5790 ;; *************** function ___fleq *****************
  5791 ;; Defined at:
  5792 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  ff1             4    0[COMRAM] unsigned char 
  5795 ;;  ff2             4    4[COMRAM] unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;Total ram usage:       12 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_efgtoa
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text23
  5821  0034CC                     __ptext23:
  5822                           	opt callstack 0
  5823  0034CC                     ___fleq:
  5824                           	opt callstack 25
  5825                           
  5826                           ;incstack = 0
  5827  0034CC  0E00               	movlw	0
  5828  0034CE  1401               	andwf	___fleq@ff1,w,c
  5829  0034D0  6E09               	movwf	??___fleq& (0+255),c
  5830  0034D2  0E00               	movlw	0
  5831  0034D4  1402               	andwf	___fleq@ff1+1,w,c
  5832  0034D6  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5833  0034D8  0E80               	movlw	128
  5834  0034DA  1403               	andwf	___fleq@ff1+2,w,c
  5835  0034DC  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5836  0034DE  0E7F               	movlw	127
  5837  0034E0  1404               	andwf	___fleq@ff1+3,w,c
  5838  0034E2  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5839  0034E4  5009               	movf	??___fleq,w,c
  5840  0034E6  100A               	iorwf	??___fleq+1,w,c
  5841  0034E8  100B               	iorwf	??___fleq+2,w,c
  5842  0034EA  100C               	iorwf	??___fleq+3,w,c
  5843  0034EC  A4D8               	btfss	status,2,c
  5844  0034EE  D008               	goto	l3825
  5845  0034F0  0E00               	movlw	0
  5846  0034F2  6E01               	movwf	___fleq@ff1,c
  5847  0034F4  0E00               	movlw	0
  5848  0034F6  6E02               	movwf	___fleq@ff1+1,c
  5849  0034F8  0E00               	movlw	0
  5850  0034FA  6E03               	movwf	___fleq@ff1+2,c
  5851  0034FC  0E00               	movlw	0
  5852  0034FE  6E04               	movwf	___fleq@ff1+3,c
  5853  003500                     l3825:
  5854  003500  0E00               	movlw	0
  5855  003502  1405               	andwf	___fleq@ff2,w,c
  5856  003504  6E09               	movwf	??___fleq& (0+255),c
  5857  003506  0E00               	movlw	0
  5858  003508  1406               	andwf	___fleq@ff2+1,w,c
  5859  00350A  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5860  00350C  0E80               	movlw	128
  5861  00350E  1407               	andwf	___fleq@ff2+2,w,c
  5862  003510  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5863  003512  0E7F               	movlw	127
  5864  003514  1408               	andwf	___fleq@ff2+3,w,c
  5865  003516  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5866  003518  5009               	movf	??___fleq,w,c
  5867  00351A  100A               	iorwf	??___fleq+1,w,c
  5868  00351C  100B               	iorwf	??___fleq+2,w,c
  5869  00351E  100C               	iorwf	??___fleq+3,w,c
  5870  003520  A4D8               	btfss	status,2,c
  5871  003522  D008               	goto	l3829
  5872  003524  0E00               	movlw	0
  5873  003526  6E05               	movwf	___fleq@ff2,c
  5874  003528  0E00               	movlw	0
  5875  00352A  6E06               	movwf	___fleq@ff2+1,c
  5876  00352C  0E00               	movlw	0
  5877  00352E  6E07               	movwf	___fleq@ff2+2,c
  5878  003530  0E00               	movlw	0
  5879  003532  6E08               	movwf	___fleq@ff2+3,c
  5880  003534                     l3829:
  5881  003534  5005               	movf	___fleq@ff2,w,c
  5882  003536  1801               	xorwf	___fleq@ff1,w,c
  5883  003538  E10A               	bnz	u3990
  5884  00353A  5006               	movf	___fleq@ff2+1,w,c
  5885  00353C  1802               	xorwf	___fleq@ff1+1,w,c
  5886  00353E  E107               	bnz	u3990
  5887  003540  5007               	movf	___fleq@ff2+2,w,c
  5888  003542  1803               	xorwf	___fleq@ff1+2,w,c
  5889  003544  E104               	bnz	u3990
  5890  003546  5008               	movf	___fleq@ff2+3,w,c
  5891  003548  1804               	xorwf	___fleq@ff1+3,w,c
  5892  00354A  B4D8               	btfsc	status,2,c
  5893  00354C  D002               	goto	l3833
  5894  00354E                     u3990:
  5895  00354E  90D8               	bcf	status,0,c
  5896  003550  0012               	return	
  5897  003552                     l3833:
  5898  003552  80D8               	bsf	status,0,c
  5899  003554  0012               	return		;funcret
  5900  003556                     __end_of___fleq:
  5901                           	opt callstack 0
  5902                           
  5903 ;; *************** function ___awmod *****************
  5904 ;; Defined at:
  5905 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  dividend        2    0[COMRAM] int 
  5908 ;;  divisor         2    2[COMRAM] int 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  sign            1    5[COMRAM] unsigned char 
  5911 ;;  counter         1    4[COMRAM] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    0[COMRAM] int 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;Total ram usage:        6 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_efgtoa
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text24
  5935  0038D0                     __ptext24:
  5936                           	opt callstack 0
  5937  0038D0                     ___awmod:
  5938                           	opt callstack 25
  5939                           
  5940                           ;incstack = 0
  5941  0038D0  0E00               	movlw	0
  5942  0038D2  6E06               	movwf	___awmod@sign,c
  5943  0038D4  AE02               	btfss	___awmod@dividend+1,7,c
  5944  0038D6  D006               	goto	l3793
  5945  0038D8  6C01               	negf	___awmod@dividend,c
  5946  0038DA  1E02               	comf	___awmod@dividend+1,f,c
  5947  0038DC  B0D8               	btfsc	status,0,c
  5948  0038DE  2A02               	incf	___awmod@dividend+1,f,c
  5949  0038E0  0E01               	movlw	1
  5950  0038E2  6E06               	movwf	___awmod@sign,c
  5951  0038E4                     l3793:
  5952  0038E4  AE04               	btfss	___awmod@divisor+1,7,c
  5953  0038E6  D004               	goto	l3797
  5954  0038E8  6C03               	negf	___awmod@divisor,c
  5955  0038EA  1E04               	comf	___awmod@divisor+1,f,c
  5956  0038EC  B0D8               	btfsc	status,0,c
  5957  0038EE  2A04               	incf	___awmod@divisor+1,f,c
  5958  0038F0                     l3797:
  5959  0038F0  5003               	movf	___awmod@divisor,w,c
  5960  0038F2  1004               	iorwf	___awmod@divisor+1,w,c
  5961  0038F4  B4D8               	btfsc	status,2,c
  5962  0038F6  D018               	goto	l3813
  5963  0038F8  0E01               	movlw	1
  5964  0038FA  6E05               	movwf	___awmod@counter,c
  5965  0038FC  D004               	goto	l3803
  5966  0038FE                     l3801:
  5967  0038FE  90D8               	bcf	status,0,c
  5968  003900  3603               	rlcf	___awmod@divisor,f,c
  5969  003902  3604               	rlcf	___awmod@divisor+1,f,c
  5970  003904  2A05               	incf	___awmod@counter,f,c
  5971  003906                     l3803:
  5972  003906  AE04               	btfss	___awmod@divisor+1,7,c
  5973  003908  D7FA               	goto	l3801
  5974  00390A                     u3940:
  5975  00390A  5003               	movf	___awmod@divisor,w,c
  5976  00390C  5C01               	subwf	___awmod@dividend,w,c
  5977  00390E  5004               	movf	___awmod@divisor+1,w,c
  5978  003910  5802               	subwfb	___awmod@dividend+1,w,c
  5979  003912  A0D8               	btfss	status,0,c
  5980  003914  D004               	goto	l3809
  5981  003916  5003               	movf	___awmod@divisor,w,c
  5982  003918  5E01               	subwf	___awmod@dividend,f,c
  5983  00391A  5004               	movf	___awmod@divisor+1,w,c
  5984  00391C  5A02               	subwfb	___awmod@dividend+1,f,c
  5985  00391E                     l3809:
  5986  00391E  90D8               	bcf	status,0,c
  5987  003920  3204               	rrcf	___awmod@divisor+1,f,c
  5988  003922  3203               	rrcf	___awmod@divisor,f,c
  5989  003924  2E05               	decfsz	___awmod@counter,f,c
  5990  003926  D7F1               	goto	u3940
  5991  003928                     l3813:
  5992  003928  5006               	movf	___awmod@sign,w,c
  5993  00392A  B4D8               	btfsc	status,2,c
  5994  00392C  D004               	goto	l3817
  5995  00392E  6C01               	negf	___awmod@dividend,c
  5996  003930  1E02               	comf	___awmod@dividend+1,f,c
  5997  003932  B0D8               	btfsc	status,0,c
  5998  003934  2A02               	incf	___awmod@dividend+1,f,c
  5999  003936                     l3817:
  6000  003936  C001  F001         	movff	___awmod@dividend,?___awmod
  6001  00393A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6002  00393E  0012               	return		;funcret
  6003  003940                     __end_of___awmod:
  6004                           	opt callstack 0
  6005                           
  6006 ;; *************** function ___awdiv *****************
  6007 ;; Defined at:
  6008 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  dividend        2    0[COMRAM] int 
  6011 ;;  divisor         2    2[COMRAM] int 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  quotient        2    6[COMRAM] int 
  6014 ;;  sign            1    5[COMRAM] unsigned char 
  6015 ;;  counter         1    4[COMRAM] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  2    0[COMRAM] int 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;Total ram usage:        8 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_efgtoa
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text25
  6039  003556                     __ptext25:
  6040                           	opt callstack 0
  6041  003556                     ___awdiv:
  6042                           	opt callstack 25
  6043                           
  6044                           ;incstack = 0
  6045  003556  0E00               	movlw	0
  6046  003558  6E06               	movwf	___awdiv@sign,c
  6047  00355A  AE04               	btfss	___awdiv@divisor+1,7,c
  6048  00355C  D006               	goto	l3749
  6049  00355E  6C03               	negf	___awdiv@divisor,c
  6050  003560  1E04               	comf	___awdiv@divisor+1,f,c
  6051  003562  B0D8               	btfsc	status,0,c
  6052  003564  2A04               	incf	___awdiv@divisor+1,f,c
  6053  003566  0E01               	movlw	1
  6054  003568  6E06               	movwf	___awdiv@sign,c
  6055  00356A                     l3749:
  6056  00356A  AE02               	btfss	___awdiv@dividend+1,7,c
  6057  00356C  D006               	goto	l3755
  6058  00356E  6C01               	negf	___awdiv@dividend,c
  6059  003570  1E02               	comf	___awdiv@dividend+1,f,c
  6060  003572  B0D8               	btfsc	status,0,c
  6061  003574  2A02               	incf	___awdiv@dividend+1,f,c
  6062  003576  0E01               	movlw	1
  6063  003578  1A06               	xorwf	___awdiv@sign,f,c
  6064  00357A                     l3755:
  6065  00357A  0E00               	movlw	0
  6066  00357C  6E08               	movwf	___awdiv@quotient+1,c
  6067  00357E  0E00               	movlw	0
  6068  003580  6E07               	movwf	___awdiv@quotient,c
  6069  003582  5003               	movf	___awdiv@divisor,w,c
  6070  003584  1004               	iorwf	___awdiv@divisor+1,w,c
  6071  003586  B4D8               	btfsc	status,2,c
  6072  003588  D01C               	goto	l3777
  6073  00358A  0E01               	movlw	1
  6074  00358C  6E05               	movwf	___awdiv@counter,c
  6075  00358E  D004               	goto	l3763
  6076  003590                     l3761:
  6077  003590  90D8               	bcf	status,0,c
  6078  003592  3603               	rlcf	___awdiv@divisor,f,c
  6079  003594  3604               	rlcf	___awdiv@divisor+1,f,c
  6080  003596  2A05               	incf	___awdiv@counter,f,c
  6081  003598                     l3763:
  6082  003598  AE04               	btfss	___awdiv@divisor+1,7,c
  6083  00359A  D7FA               	goto	l3761
  6084  00359C                     u3880:
  6085  00359C  90D8               	bcf	status,0,c
  6086  00359E  3607               	rlcf	___awdiv@quotient,f,c
  6087  0035A0  3608               	rlcf	___awdiv@quotient+1,f,c
  6088  0035A2  5003               	movf	___awdiv@divisor,w,c
  6089  0035A4  5C01               	subwf	___awdiv@dividend,w,c
  6090  0035A6  5004               	movf	___awdiv@divisor+1,w,c
  6091  0035A8  5802               	subwfb	___awdiv@dividend+1,w,c
  6092  0035AA  A0D8               	btfss	status,0,c
  6093  0035AC  D005               	goto	l3773
  6094  0035AE  5003               	movf	___awdiv@divisor,w,c
  6095  0035B0  5E01               	subwf	___awdiv@dividend,f,c
  6096  0035B2  5004               	movf	___awdiv@divisor+1,w,c
  6097  0035B4  5A02               	subwfb	___awdiv@dividend+1,f,c
  6098  0035B6  8007               	bsf	___awdiv@quotient,0,c
  6099  0035B8                     l3773:
  6100  0035B8  90D8               	bcf	status,0,c
  6101  0035BA  3204               	rrcf	___awdiv@divisor+1,f,c
  6102  0035BC  3203               	rrcf	___awdiv@divisor,f,c
  6103  0035BE  2E05               	decfsz	___awdiv@counter,f,c
  6104  0035C0  D7ED               	goto	u3880
  6105  0035C2                     l3777:
  6106  0035C2  5006               	movf	___awdiv@sign,w,c
  6107  0035C4  B4D8               	btfsc	status,2,c
  6108  0035C6  D004               	goto	l3781
  6109  0035C8  6C07               	negf	___awdiv@quotient,c
  6110  0035CA  1E08               	comf	___awdiv@quotient+1,f,c
  6111  0035CC  B0D8               	btfsc	status,0,c
  6112  0035CE  2A08               	incf	___awdiv@quotient+1,f,c
  6113  0035D0                     l3781:
  6114  0035D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6115  0035D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6116  0035D8  0012               	return		;funcret
  6117  0035DA                     __end_of___awdiv:
  6118                           	opt callstack 0
  6119                           
  6120 ;; *************** function _atoi *****************
  6121 ;; Defined at:
  6122 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6125 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  n               2   20[COMRAM] int 
  6128 ;;  neg             2   13[COMRAM] int 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  2    7[COMRAM] int 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;Total ram usage:       15 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    1
  6145 ;; This function calls:
  6146 ;;		___wmul
  6147 ;;		_isdigit
  6148 ;;		_isspace
  6149 ;; This function is called by:
  6150 ;;		_vfpfcnvrt
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text26
  6155  002B3C                     __ptext26:
  6156                           	opt callstack 0
  6157  002B3C                     _atoi:
  6158                           	opt callstack 25
  6159                           
  6160                           ;incstack = 0
  6161  002B3C  0E00               	movlw	0
  6162  002B3E  6E16               	movwf	atoi@n+1,c
  6163  002B40  0E00               	movlw	0
  6164  002B42  6E15               	movwf	atoi@n,c
  6165  002B44  0E00               	movlw	0
  6166  002B46  6E0F               	movwf	atoi@neg+1,c
  6167  002B48  0E00               	movlw	0
  6168  002B4A  6E0E               	movwf	atoi@neg,c
  6169  002B4C  D002               	goto	l4237
  6170  002B4E                     l4235:
  6171  002B4E  4A08               	infsnz	atoi@s,f,c
  6172  002B50  2A09               	incf	atoi@s+1,f,c
  6173  002B52                     l4237:
  6174  002B52  0E01               	movlw	1
  6175  002B54  6E14               	movwf	_atoi$1281,c
  6176  002B56  C008  FFF6         	movff	atoi@s,tblptrl
  6177  002B5A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6178  002B5E                     	if	0	;tblptru may be non-zero
  6179  002B5E                     	endif
  6180  002B5E                     	if	0	;tblptru may be non-zero
  6181  002B5E                     	endif
  6182  002B5E  0008               	tblrd		*
  6183  002B60  50F5               	movf	tablat,w,c
  6184  002B62  0A20               	xorlw	32
  6185  002B64  B4D8               	btfsc	status,2,c
  6186  002B66  D018               	goto	l4245
  6187  002B68  0EF7               	movlw	247
  6188  002B6A  6E0A               	movwf	??_atoi& (0+255),c
  6189  002B6C  0EFF               	movlw	255
  6190  002B6E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6191  002B70  C008  FFF6         	movff	atoi@s,tblptrl
  6192  002B74  C009  FFF7         	movff	atoi@s+1,tblptrh
  6193  002B78                     	if	0	;tblptru may be non-zero
  6194  002B78                     	endif
  6195  002B78                     	if	0	;tblptru may be non-zero
  6196  002B78                     	endif
  6197  002B78  0008               	tblrd		*
  6198  002B7A  50F5               	movf	tablat,w,c
  6199  002B7C  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6200  002B7E  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6201  002B80  500A               	movf	??_atoi,w,c
  6202  002B82  260C               	addwf	??_atoi+2,f,c
  6203  002B84  500B               	movf	??_atoi+1,w,c
  6204  002B86  220D               	addwfc	??_atoi+3,f,c
  6205  002B88  500D               	movf	??_atoi+3,w,c
  6206  002B8A  E104               	bnz	u4680
  6207  002B8C  0E05               	movlw	5
  6208  002B8E  5C0C               	subwf	??_atoi+2,w,c
  6209  002B90  A0D8               	btfss	status,0,c
  6210  002B92  D002               	goto	l4245
  6211  002B94                     u4680:
  6212  002B94  0E00               	movlw	0
  6213  002B96  6E14               	movwf	_atoi$1281,c
  6214  002B98                     l4245:
  6215  002B98  C014  F010         	movff	_atoi$1281,_atoi$1280
  6216  002B9C  6A11               	clrf	_atoi$1280+1,c
  6217  002B9E  5010               	movf	_atoi$1280,w,c
  6218  002BA0  1011               	iorwf	_atoi$1280+1,w,c
  6219  002BA2  B4D8               	btfsc	status,2,c
  6220  002BA4  D008               	goto	l4255
  6221  002BA6  D7D3               	goto	l4235
  6222  002BA8                     l4251:
  6223  002BA8  0E00               	movlw	0
  6224  002BAA  6E0F               	movwf	atoi@neg+1,c
  6225  002BAC  0E01               	movlw	1
  6226  002BAE  6E0E               	movwf	atoi@neg,c
  6227  002BB0                     l4253:
  6228  002BB0  4A08               	infsnz	atoi@s,f,c
  6229  002BB2  2A09               	incf	atoi@s+1,f,c
  6230  002BB4  D02E               	goto	l4261
  6231  002BB6                     l4255:
  6232  002BB6  C008  FFF6         	movff	atoi@s,tblptrl
  6233  002BBA  C009  FFF7         	movff	atoi@s+1,tblptrh
  6234  002BBE                     	if	0	;tblptru may be non-zero
  6235  002BBE                     	endif
  6236  002BBE                     	if	0	;tblptru may be non-zero
  6237  002BBE                     	endif
  6238  002BBE  0008               	tblrd		*
  6239  002BC0  50F5               	movf	tablat,w,c
  6240  002BC2  6E0A               	movwf	??_atoi& (0+255),c
  6241  002BC4  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6242                           
  6243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6244                           ; Switch size 1, requested type "simple"
  6245                           ; Number of cases is 1, Range of values is 0 to 0
  6246                           ; switch strategies available:
  6247                           ; Name         Instructions Cycles
  6248                           ; simple_byte            4     3 (average)
  6249                           ;	Chosen strategy is simple_byte
  6250  002BC6  500B               	movf	??_atoi+1,w,c
  6251  002BC8  0A00               	xorlw	0	; case 0
  6252  002BCA  A4D8               	btfss	status,2,c
  6253  002BCC  D022               	goto	l4261
  6254                           
  6255                           ; Switch size 1, requested type "simple"
  6256                           ; Number of cases is 2, Range of values is 43 to 45
  6257                           ; switch strategies available:
  6258                           ; Name         Instructions Cycles
  6259                           ; simple_byte            7     4 (average)
  6260                           ;	Chosen strategy is simple_byte
  6261  002BCE  500A               	movf	??_atoi,w,c
  6262  002BD0  0A2B               	xorlw	43	; case 43
  6263  002BD2  B4D8               	btfsc	status,2,c
  6264  002BD4  D7ED               	goto	l4253
  6265  002BD6  0A06               	xorlw	6	; case 45
  6266  002BD8  B4D8               	btfsc	status,2,c
  6267  002BDA  D7E6               	goto	l4251
  6268  002BDC  D01A               	goto	l4261
  6269  002BDE                     l4257:
  6270  002BDE  C015  F001         	movff	atoi@n,___wmul@multiplier
  6271  002BE2  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6272  002BE6  0E00               	movlw	0
  6273  002BE8  6E04               	movwf	___wmul@multiplicand+1,c
  6274  002BEA  0E0A               	movlw	10
  6275  002BEC  6E03               	movwf	___wmul@multiplicand,c
  6276  002BEE  ECA9  F01F         	call	___wmul	;wreg free
  6277  002BF2  C008  FFF6         	movff	atoi@s,tblptrl
  6278  002BF6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6279  002BFA                     	if	0	;tblptru may be non-zero
  6280  002BFA                     	endif
  6281  002BFA                     	if	0	;tblptru may be non-zero
  6282  002BFA                     	endif
  6283  002BFA  0008               	tblrd		*
  6284  002BFC  50F5               	movf	tablat,w,c
  6285  002BFE  5E01               	subwf	?___wmul,f,c
  6286  002C00  0E00               	movlw	0
  6287  002C02  5A02               	subwfb	?___wmul+1,f,c
  6288  002C04  0E30               	movlw	48
  6289  002C06  2401               	addwf	?___wmul,w,c
  6290  002C08  6E15               	movwf	atoi@n,c
  6291  002C0A  0E00               	movlw	0
  6292  002C0C  2002               	addwfc	?___wmul+1,w,c
  6293  002C0E  6E16               	movwf	atoi@n+1,c
  6294  002C10  D7CF               	goto	l4253
  6295  002C12                     l4261:
  6296  002C12  0ED0               	movlw	208
  6297  002C14  6E0A               	movwf	??_atoi& (0+255),c
  6298  002C16  0EFF               	movlw	255
  6299  002C18  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6300  002C1A  C008  FFF6         	movff	atoi@s,tblptrl
  6301  002C1E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6302  002C22                     	if	0	;tblptru may be non-zero
  6303  002C22                     	endif
  6304  002C22                     	if	0	;tblptru may be non-zero
  6305  002C22                     	endif
  6306  002C22  0008               	tblrd		*
  6307  002C24  50F5               	movf	tablat,w,c
  6308  002C26  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6309  002C28  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6310  002C2A  500A               	movf	??_atoi,w,c
  6311  002C2C  260C               	addwf	??_atoi+2,f,c
  6312  002C2E  500B               	movf	??_atoi+1,w,c
  6313  002C30  220D               	addwfc	??_atoi+3,f,c
  6314  002C32  500D               	movf	??_atoi+3,w,c
  6315  002C34  E106               	bnz	u4700
  6316  002C36  0E0A               	movlw	10
  6317  002C38  5C0C               	subwf	??_atoi+2,w,c
  6318  002C3A  B0D8               	btfsc	status,0,c
  6319  002C3C  D002               	goto	u4700
  6320  002C3E  0E01               	movlw	1
  6321  002C40  D001               	goto	u4710
  6322  002C42                     u4700:
  6323  002C42  0E00               	movlw	0
  6324  002C44                     u4710:
  6325  002C44  6E12               	movwf	_atoi$1282,c
  6326  002C46  6A13               	clrf	_atoi$1282+1,c
  6327  002C48  5012               	movf	_atoi$1282,w,c
  6328  002C4A  1013               	iorwf	_atoi$1282+1,w,c
  6329  002C4C  A4D8               	btfss	status,2,c
  6330  002C4E  D7C7               	goto	l4257
  6331  002C50  500E               	movf	atoi@neg,w,c
  6332  002C52  100F               	iorwf	atoi@neg+1,w,c
  6333  002C54  A4D8               	btfss	status,2,c
  6334  002C56  D00D               	goto	l1235
  6335  002C58  C015  F00A         	movff	atoi@n,??_atoi
  6336  002C5C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6337  002C60  1E0A               	comf	??_atoi,f,c
  6338  002C62  1E0B               	comf	??_atoi+1,f,c
  6339  002C64  4A0A               	infsnz	??_atoi,f,c
  6340  002C66  2A0B               	incf	??_atoi+1,f,c
  6341  002C68  C00A  F008         	movff	??_atoi,?_atoi
  6342  002C6C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6343  002C70  0012               	return	
  6344  002C72                     l1235:
  6345  002C72  C015  F008         	movff	atoi@n,?_atoi
  6346  002C76  C016  F009         	movff	atoi@n+1,?_atoi+1
  6347  002C7A  0012               	return		;funcret
  6348  002C7C                     __end_of_atoi:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function _isspace *****************
  6352 ;; Defined at:
  6353 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  c               2    0[COMRAM] int 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  2    0[COMRAM] int 
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;Total ram usage:        7 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_atoi
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text27
  6381  003DEC                     __ptext27:
  6382                           	opt callstack 0
  6383  003DEC                     _isspace:
  6384                           	opt callstack 25
  6385                           
  6386                           ;incstack = 0
  6387  003DEC  0E01               	movlw	1
  6388  003DEE  6E07               	movwf	_isspace$1311,c
  6389  003DF0  0E20               	movlw	32
  6390  003DF2  1801               	xorwf	isspace@c,w,c
  6391  003DF4  1002               	iorwf	isspace@c+1,w,c
  6392  003DF6  B4D8               	btfsc	status,2,c
  6393  003DF8  D014               	goto	l3919
  6394  003DFA  0EF7               	movlw	247
  6395  003DFC  6E03               	movwf	??_isspace& (0+255),c
  6396  003DFE  0EFF               	movlw	255
  6397  003E00  6E04               	movwf	(??_isspace+1)& (0+255),c
  6398  003E02  C001  F005         	movff	isspace@c,??_isspace+2
  6399  003E06  C002  F006         	movff	isspace@c+1,??_isspace+3
  6400  003E0A  5003               	movf	??_isspace,w,c
  6401  003E0C  2605               	addwf	??_isspace+2,f,c
  6402  003E0E  5004               	movf	??_isspace+1,w,c
  6403  003E10  2206               	addwfc	??_isspace+3,f,c
  6404  003E12  5006               	movf	??_isspace+3,w,c
  6405  003E14  E104               	bnz	u4140
  6406  003E16  0E05               	movlw	5
  6407  003E18  5C05               	subwf	??_isspace+2,w,c
  6408  003E1A  A0D8               	btfss	status,0,c
  6409  003E1C  D002               	goto	l3919
  6410  003E1E                     u4140:
  6411  003E1E  0E00               	movlw	0
  6412  003E20  6E07               	movwf	_isspace$1311,c
  6413  003E22                     l3919:
  6414  003E22  C007  F001         	movff	_isspace$1311,?_isspace
  6415  003E26  6A02               	clrf	?_isspace+1,c
  6416  003E28  0012               	return		;funcret
  6417  003E2A                     __end_of_isspace:
  6418                           	opt callstack 0
  6419                           
  6420 ;; *************** function _isdigit *****************
  6421 ;; Defined at:
  6422 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  c               2    0[COMRAM] int 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  2    0[COMRAM] int 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;Total ram usage:        6 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_vfpfcnvrt
  6446 ;;		_atoi
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text28
  6451  003ECA                     __ptext28:
  6452                           	opt callstack 0
  6453  003ECA                     _isdigit:
  6454                           	opt callstack 26
  6455                           
  6456                           ;incstack = 0
  6457  003ECA  0ED0               	movlw	208
  6458  003ECC  6E03               	movwf	??_isdigit& (0+255),c
  6459  003ECE  0EFF               	movlw	255
  6460  003ED0  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6461  003ED2  C001  F005         	movff	isdigit@c,??_isdigit+2
  6462  003ED6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6463  003EDA  5003               	movf	??_isdigit,w,c
  6464  003EDC  2605               	addwf	??_isdigit+2,f,c
  6465  003EDE  5004               	movf	??_isdigit+1,w,c
  6466  003EE0  2206               	addwfc	??_isdigit+3,f,c
  6467  003EE2  5006               	movf	??_isdigit+3,w,c
  6468  003EE4  E106               	bnz	u3410
  6469  003EE6  0E0A               	movlw	10
  6470  003EE8  5C05               	subwf	??_isdigit+2,w,c
  6471  003EEA  B0D8               	btfsc	status,0,c
  6472  003EEC  D002               	goto	u3410
  6473  003EEE  0E01               	movlw	1
  6474  003EF0  D001               	goto	u3420
  6475  003EF2                     u3410:
  6476  003EF2  0E00               	movlw	0
  6477  003EF4                     u3420:
  6478  003EF4  6E01               	movwf	?_isdigit,c
  6479  003EF6  6A02               	clrf	?_isdigit+1,c
  6480  003EF8  0012               	return		;funcret
  6481  003EFA                     __end_of_isdigit:
  6482                           	opt callstack 0
  6483                           
  6484 ;; *************** function ___wmul *****************
  6485 ;; Defined at:
  6486 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  multiplier      2    0[COMRAM] unsigned int 
  6489 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  product         2    4[COMRAM] unsigned int 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2    0[COMRAM] unsigned int 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, prodl, prodh
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;Total ram usage:        6 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_atoi
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text29
  6515  003F52                     __ptext29:
  6516                           	opt callstack 0
  6517  003F52                     ___wmul:
  6518                           	opt callstack 25
  6519                           
  6520                           ;incstack = 0
  6521  003F52  5001               	movf	___wmul@multiplier,w,c
  6522  003F54  0203               	mulwf	___wmul@multiplicand,c
  6523  003F56  CFF3 F005          	movff	prodl,___wmul@product
  6524  003F5A  CFF4 F006          	movff	prodh,___wmul@product+1
  6525  003F5E  5001               	movf	___wmul@multiplier,w,c
  6526  003F60  0204               	mulwf	___wmul@multiplicand+1,c
  6527  003F62  50F3               	movf	prodl,w,c
  6528  003F64  2606               	addwf	___wmul@product+1,f,c
  6529  003F66  5002               	movf	___wmul@multiplier+1,w,c
  6530  003F68  0203               	mulwf	___wmul@multiplicand,c
  6531  003F6A  50F3               	movf	prodl,w,c
  6532  003F6C  2606               	addwf	___wmul@product+1,f,c
  6533  003F6E  C005  F001         	movff	___wmul@product,?___wmul
  6534  003F72  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6535  003F76  0012               	return		;funcret
  6536  003F78                     __end_of___wmul:
  6537                           	opt callstack 0
  6538                           
  6539 ;; *************** function _set_buck *****************
  6540 ;; Defined at:
  6541 ;;		line 154 in file "mppt.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  dty             2   49[COMRAM] int 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:        2 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    1
  6562 ;; This function calls:
  6563 ;;		___flmul
  6564 ;;		___fltol
  6565 ;;		___xxtofl
  6566 ;; This function is called by:
  6567 ;;		_main
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text30
  6572  0035DA                     __ptext30:
  6573                           	opt callstack 0
  6574  0035DA                     _set_buck:
  6575                           	opt callstack 29
  6576                           
  6577                           ;mppt.c: 154: void set_buck(int dty);mppt.c: 155: {;mppt.c: 156:  if(dty>100)
  6578                           
  6579                           ;incstack = 0
  6580  0035DA  BE33               	btfsc	set_buck@dty+1,7,c
  6581  0035DC  D00A               	goto	l4735
  6582  0035DE  5033               	movf	set_buck@dty+1,w,c
  6583  0035E0  E104               	bnz	u5180
  6584  0035E2  0E65               	movlw	101
  6585  0035E4  5C32               	subwf	set_buck@dty,w,c
  6586  0035E6  A0D8               	btfss	status,0,c
  6587  0035E8  D004               	goto	l4735
  6588  0035EA                     u5180:
  6589                           
  6590                           ;mppt.c: 157:     {;mppt.c: 158:         dty=100;
  6591  0035EA  0E00               	movlw	0
  6592  0035EC  6E33               	movwf	set_buck@dty+1,c
  6593  0035EE  0E64               	movlw	100
  6594  0035F0  6E32               	movwf	set_buck@dty,c
  6595  0035F2                     l4735:
  6596                           
  6597                           ;mppt.c: 160:     if(dty<0)
  6598  0035F2  AE33               	btfss	set_buck@dty+1,7,c
  6599  0035F4  D004               	goto	l4739
  6600                           
  6601                           ;mppt.c: 161:     {;mppt.c: 162:         dty=0;
  6602  0035F6  0E00               	movlw	0
  6603  0035F8  6E33               	movwf	set_buck@dty+1,c
  6604  0035FA  0E00               	movlw	0
  6605  0035FC  6E32               	movwf	set_buck@dty,c
  6606  0035FE                     l4739:
  6607                           
  6608                           ;mppt.c: 165:  c=dty*1.61;
  6609  0035FE  0E7B               	movlw	123
  6610  003600  6E13               	movwf	___flmul@a,c
  6611  003602  0E14               	movlw	20
  6612  003604  6E14               	movwf	___flmul@a+1,c
  6613  003606  0ECE               	movlw	206
  6614  003608  6E15               	movwf	___flmul@a+2,c
  6615  00360A  0E3F               	movlw	63
  6616  00360C  6E16               	movwf	___flmul@a+3,c
  6617  00360E  C032  F001         	movff	set_buck@dty,___xxtofl@val
  6618  003612  C033  F002         	movff	set_buck@dty+1,___xxtofl@val+1
  6619  003616  0E00               	movlw	0
  6620  003618  BE02               	btfsc	___xxtofl@val+1,7,c
  6621  00361A  0EFF               	movlw	-1
  6622  00361C  6E03               	movwf	___xxtofl@val+2,c
  6623  00361E  6E04               	movwf	___xxtofl@val+3,c
  6624  003620  0E01               	movlw	1
  6625  003622  EC3E  F016         	call	___xxtofl
  6626  003626  C001  F00F         	movff	?___xxtofl,___flmul@b
  6627  00362A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6628  00362E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6629  003632  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6630  003636  ECB6  F00E         	call	___flmul	;wreg free
  6631  00363A  C00F  F028         	movff	?___flmul,___fltol@f1
  6632  00363E  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  6633  003642  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  6634  003646  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  6635  00364A  ECC0  F018         	call	___fltol	;wreg free
  6636  00364E  C028  F0EA         	movff	?___fltol,_c
  6637  003652  C029  F0EB         	movff	?___fltol+1,_c+1
  6638                           
  6639                           ;mppt.c: 166:  CCPR2L=c;
  6640  003656  C0EA  FF67         	movff	_c,3943	;volatile
  6641  00365A  0012               	return		;funcret
  6642  00365C                     __end_of_set_buck:
  6643                           	opt callstack 0
  6644                           
  6645 ;; *************** function _set_boost *****************
  6646 ;; Defined at:
  6647 ;;		line 139 in file "mppt.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  dty             2   49[COMRAM] int 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;Total ram usage:        2 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    1
  6668 ;; This function calls:
  6669 ;;		___flmul
  6670 ;;		___fltol
  6671 ;;		___xxtofl
  6672 ;; This function is called by:
  6673 ;;		_main
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text31
  6678  00365C                     __ptext31:
  6679                           	opt callstack 0
  6680  00365C                     _set_boost:
  6681                           	opt callstack 29
  6682                           
  6683                           ;mppt.c: 139: void set_boost(int dty);mppt.c: 140: {;mppt.c: 141:  if(dty>100)
  6684                           
  6685                           ;incstack = 0
  6686  00365C  BE33               	btfsc	set_boost@dty+1,7,c
  6687  00365E  D00A               	goto	l4723
  6688  003660  5033               	movf	set_boost@dty+1,w,c
  6689  003662  E104               	bnz	u5160
  6690  003664  0E65               	movlw	101
  6691  003666  5C32               	subwf	set_boost@dty,w,c
  6692  003668  A0D8               	btfss	status,0,c
  6693  00366A  D004               	goto	l4723
  6694  00366C                     u5160:
  6695                           
  6696                           ;mppt.c: 142:     {;mppt.c: 143:         dty=100;
  6697  00366C  0E00               	movlw	0
  6698  00366E  6E33               	movwf	set_boost@dty+1,c
  6699  003670  0E64               	movlw	100
  6700  003672  6E32               	movwf	set_boost@dty,c
  6701  003674                     l4723:
  6702                           
  6703                           ;mppt.c: 145:     if(dty<0)
  6704  003674  AE33               	btfss	set_boost@dty+1,7,c
  6705  003676  D004               	goto	l4727
  6706                           
  6707                           ;mppt.c: 146:     {;mppt.c: 147:         dty=0;
  6708  003678  0E00               	movlw	0
  6709  00367A  6E33               	movwf	set_boost@dty+1,c
  6710  00367C  0E00               	movlw	0
  6711  00367E  6E32               	movwf	set_boost@dty,c
  6712  003680                     l4727:
  6713                           
  6714                           ;mppt.c: 149:  c=dty*1.61;
  6715  003680  0E7B               	movlw	123
  6716  003682  6E13               	movwf	___flmul@a,c
  6717  003684  0E14               	movlw	20
  6718  003686  6E14               	movwf	___flmul@a+1,c
  6719  003688  0ECE               	movlw	206
  6720  00368A  6E15               	movwf	___flmul@a+2,c
  6721  00368C  0E3F               	movlw	63
  6722  00368E  6E16               	movwf	___flmul@a+3,c
  6723  003690  C032  F001         	movff	set_boost@dty,___xxtofl@val
  6724  003694  C033  F002         	movff	set_boost@dty+1,___xxtofl@val+1
  6725  003698  0E00               	movlw	0
  6726  00369A  BE02               	btfsc	___xxtofl@val+1,7,c
  6727  00369C  0EFF               	movlw	-1
  6728  00369E  6E03               	movwf	___xxtofl@val+2,c
  6729  0036A0  6E04               	movwf	___xxtofl@val+3,c
  6730  0036A2  0E01               	movlw	1
  6731  0036A4  EC3E  F016         	call	___xxtofl
  6732  0036A8  C001  F00F         	movff	?___xxtofl,___flmul@b
  6733  0036AC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6734  0036B0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6735  0036B4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6736  0036B8  ECB6  F00E         	call	___flmul	;wreg free
  6737  0036BC  C00F  F028         	movff	?___flmul,___fltol@f1
  6738  0036C0  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  6739  0036C4  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  6740  0036C8  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  6741  0036CC  ECC0  F018         	call	___fltol	;wreg free
  6742  0036D0  C028  F0EA         	movff	?___fltol,_c
  6743  0036D4  C029  F0EB         	movff	?___fltol+1,_c+1
  6744                           
  6745                           ;mppt.c: 150:  CCPR1L=c;
  6746  0036D8  C0EA  FFBE         	movff	_c,4030	;volatile
  6747  0036DC  0012               	return		;funcret
  6748  0036DE                     __end_of_set_boost:
  6749                           	opt callstack 0
  6750                           
  6751 ;; *************** function ___fltol *****************
  6752 ;; Defined at:
  6753 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  f1              4   39[COMRAM] void 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  exp1            1   48[COMRAM] unsigned char 
  6758 ;;  sign1           1   47[COMRAM] unsigned char 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  4   39[COMRAM] long 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;Total ram usage:       10 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_set_boost
  6778 ;;		_set_buck
  6779 ;;		_efgtoa
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text32
  6784  003180                     __ptext32:
  6785                           	opt callstack 0
  6786  003180                     ___fltol:
  6787                           	opt callstack 25
  6788                           
  6789                           ;incstack = 0
  6790  003180  342A               	rlcf	___fltol@f1+2,w,c
  6791  003182  342B               	rlcf	___fltol@f1+3,w,c
  6792  003184  6E31               	movwf	___fltol@exp1,c
  6793  003186  5031               	movf	___fltol@exp1,w,c
  6794  003188  A4D8               	btfss	status,2,c
  6795  00318A  D009               	goto	l3873
  6796  00318C                     u4060:
  6797  00318C  0E00               	movlw	0
  6798  00318E  6E28               	movwf	?___fltol,c
  6799  003190  0E00               	movlw	0
  6800  003192  6E29               	movwf	?___fltol+1,c
  6801  003194  0E00               	movlw	0
  6802  003196  6E2A               	movwf	?___fltol+2,c
  6803  003198  0E00               	movlw	0
  6804  00319A  6E2B               	movwf	?___fltol+3,c
  6805  00319C  0012               	return	
  6806  00319E                     l3873:
  6807  00319E  C028  F02C         	movff	___fltol@f1,??___fltol
  6808  0031A2  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  6809  0031A6  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  6810  0031AA  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  6811  0031AE  0E20               	movlw	32
  6812  0031B0  D005               	goto	u4070
  6813  0031B2                     u4075:
  6814  0031B2  90D8               	bcf	status,0,c
  6815  0031B4  322F               	rrcf	??___fltol+3,f,c
  6816  0031B6  322E               	rrcf	??___fltol+2,f,c
  6817  0031B8  322D               	rrcf	??___fltol+1,f,c
  6818  0031BA  322C               	rrcf	??___fltol,f,c
  6819  0031BC                     u4070:
  6820  0031BC  2EE8               	decfsz	wreg,f,c
  6821  0031BE  D7F9               	goto	u4075
  6822  0031C0  502C               	movf	??___fltol,w,c
  6823  0031C2  6E30               	movwf	___fltol@sign1,c
  6824  0031C4  8E2A               	bsf	___fltol@f1+2,7,c
  6825  0031C6  0EFF               	movlw	255
  6826  0031C8  1628               	andwf	___fltol@f1,f,c
  6827  0031CA  0EFF               	movlw	255
  6828  0031CC  1629               	andwf	___fltol@f1+1,f,c
  6829  0031CE  0EFF               	movlw	255
  6830  0031D0  162A               	andwf	___fltol@f1+2,f,c
  6831  0031D2  0E00               	movlw	0
  6832  0031D4  162B               	andwf	___fltol@f1+3,f,c
  6833  0031D6  0E96               	movlw	150
  6834  0031D8  5E31               	subwf	___fltol@exp1,f,c
  6835  0031DA  AE31               	btfss	___fltol@exp1,7,c
  6836  0031DC  D00D               	goto	l3893
  6837  0031DE  5031               	movf	___fltol@exp1,w,c
  6838  0031E0  0A80               	xorlw	128
  6839  0031E2  0F97               	addlw	151
  6840  0031E4  A0D8               	btfss	status,0,c
  6841  0031E6  D7D2               	goto	u4060
  6842  0031E8                     l3889:
  6843  0031E8  90D8               	bcf	status,0,c
  6844  0031EA  322B               	rrcf	___fltol@f1+3,f,c
  6845  0031EC  322A               	rrcf	___fltol@f1+2,f,c
  6846  0031EE  3229               	rrcf	___fltol@f1+1,f,c
  6847  0031F0  3228               	rrcf	___fltol@f1,f,c
  6848  0031F2  3E31               	incfsz	___fltol@exp1,f,c
  6849  0031F4  D7F9               	goto	l3889
  6850  0031F6  D00D               	goto	u4110
  6851  0031F8                     l3893:
  6852  0031F8  0E1F               	movlw	31
  6853  0031FA  6431               	cpfsgt	___fltol@exp1,c
  6854  0031FC  D007               	goto	l3901
  6855  0031FE  D7C6               	goto	u4060
  6856  003200                     l3899:
  6857  003200  90D8               	bcf	status,0,c
  6858  003202  3628               	rlcf	___fltol@f1,f,c
  6859  003204  3629               	rlcf	___fltol@f1+1,f,c
  6860  003206  362A               	rlcf	___fltol@f1+2,f,c
  6861  003208  362B               	rlcf	___fltol@f1+3,f,c
  6862  00320A  0631               	decf	___fltol@exp1,f,c
  6863  00320C                     l3901:
  6864  00320C  5031               	movf	___fltol@exp1,w,c
  6865  00320E  A4D8               	btfss	status,2,c
  6866  003210  D7F7               	goto	l3899
  6867  003212                     u4110:
  6868  003212  5030               	movf	___fltol@sign1,w,c
  6869  003214  B4D8               	btfsc	status,2,c
  6870  003216  D008               	goto	l3907
  6871  003218  1E2B               	comf	___fltol@f1+3,f,c
  6872  00321A  1E2A               	comf	___fltol@f1+2,f,c
  6873  00321C  1E29               	comf	___fltol@f1+1,f,c
  6874  00321E  6C28               	negf	___fltol@f1,c
  6875  003220  0E00               	movlw	0
  6876  003222  2229               	addwfc	___fltol@f1+1,f,c
  6877  003224  222A               	addwfc	___fltol@f1+2,f,c
  6878  003226  222B               	addwfc	___fltol@f1+3,f,c
  6879  003228                     l3907:
  6880  003228  C028  F028         	movff	___fltol@f1,?___fltol
  6881  00322C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  6882  003230  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  6883  003234  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  6884  003238  0012               	return		;funcret
  6885  00323A                     __end_of___fltol:
  6886                           	opt callstack 0
  6887                           
  6888 ;; *************** function _read_Uout *****************
  6889 ;; Defined at:
  6890 ;;		line 59 in file "mppt.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;		None
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;Total ram usage:        2 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    5
  6911 ;; This function calls:
  6912 ;;		_Lcd_Clear
  6913 ;;		_Lcd_Set_Cursor
  6914 ;;		_Lcd_Write_String
  6915 ;;		___fldiv
  6916 ;;		___flge
  6917 ;;		___flmul
  6918 ;;		___xxtofl
  6919 ;; This function is called by:
  6920 ;;		_main
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text33
  6925  002DBC                     __ptext33:
  6926                           	opt callstack 0
  6927  002DBC                     _read_Uout:
  6928                           	opt callstack 25
  6929                           
  6930                           ;mppt.c: 61:     ADCON0=0b00000111;
  6931                           
  6932                           ;incstack = 0
  6933  002DBC  0E07               	movlw	7
  6934  002DBE  6EC2               	movwf	4034,c	;volatile
  6935                           
  6936                           ;mppt.c: 62:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6937  002DC0  0ED0               	movlw	208
  6938  002DC2  6E34               	movwf	??_read_Uout& (0+255),c
  6939  002DC4  0ECA               	movlw	202
  6940  002DC6                     u5377:
  6941  002DC6  2EE8               	decfsz	wreg,f,c
  6942  002DC8  D7FE               	bra	u5377
  6943  002DCA  2E34               	decfsz	??_read_Uout& (0+255),f,c
  6944  002DCC  D7FC               	bra	u5377
  6945                           
  6946                           ;mppt.c: 63:     ADCON0bits.GO=1;
  6947  002DCE  82C2               	bsf	4034,1,c	;volatile
  6948                           
  6949                           ;mppt.c: 64:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6950  002DD0  0E09               	movlw	9
  6951  002DD2  6E35               	movwf	(??_read_Uout+1)& (0+255),c
  6952  002DD4  0E1E               	movlw	30
  6953  002DD6  6E34               	movwf	??_read_Uout& (0+255),c
  6954  002DD8  0EE4               	movlw	228
  6955  002DDA                     u5387:
  6956  002DDA  2EE8               	decfsz	wreg,f,c
  6957  002DDC  D7FE               	bra	u5387
  6958  002DDE  2E34               	decfsz	??_read_Uout& (0+255),f,c
  6959  002DE0  D7FC               	bra	u5387
  6960  002DE2  2E35               	decfsz	(??_read_Uout+1)& (0+255),f,c
  6961  002DE4  D7FA               	bra	u5387
  6962  002DE6  D000               	nop2	
  6963                           
  6964                           ;mppt.c: 65:     rez_adc_U=ADRESH;
  6965  002DE8  50C4               	movf	4036,w,c	;volatile
  6966  002DEA  6E01               	movwf	___xxtofl@val,c
  6967  002DEC  6A02               	clrf	___xxtofl@val+1,c
  6968  002DEE  6A03               	clrf	___xxtofl@val+2,c
  6969  002DF0  6A04               	clrf	___xxtofl@val+3,c
  6970  002DF2  0E00               	movlw	0
  6971  002DF4  EC3E  F016         	call	___xxtofl
  6972  002DF8  C001  F0CA         	movff	?___xxtofl,_rez_adc_U
  6973  002DFC  C002  F0CB         	movff	?___xxtofl+1,_rez_adc_U+1
  6974  002E00  C003  F0CC         	movff	?___xxtofl+2,_rez_adc_U+2
  6975  002E04  C004  F0CD         	movff	?___xxtofl+3,_rez_adc_U+3
  6976                           
  6977                           ;mppt.c: 66:     tens=rez_adc_U*0.01953125;
  6978  002E08  C0CA  F00F         	movff	_rez_adc_U,___flmul@b
  6979  002E0C  C0CB  F010         	movff	_rez_adc_U+1,___flmul@b+1
  6980  002E10  C0CC  F011         	movff	_rez_adc_U+2,___flmul@b+2
  6981  002E14  C0CD  F012         	movff	_rez_adc_U+3,___flmul@b+3
  6982  002E18  0E00               	movlw	0
  6983  002E1A  6E13               	movwf	___flmul@a,c
  6984  002E1C  0E00               	movlw	0
  6985  002E1E  6E14               	movwf	___flmul@a+1,c
  6986  002E20  0EA0               	movlw	160
  6987  002E22  6E15               	movwf	___flmul@a+2,c
  6988  002E24  0E3C               	movlw	60
  6989  002E26  6E16               	movwf	___flmul@a+3,c
  6990  002E28  ECB6  F00E         	call	___flmul	;wreg free
  6991  002E2C  C00F  F0C6         	movff	?___flmul,_tens
  6992  002E30  C010  F0C7         	movff	?___flmul+1,_tens+1
  6993  002E34  C011  F0C8         	movff	?___flmul+2,_tens+2
  6994  002E38  C012  F0C9         	movff	?___flmul+3,_tens+3
  6995                           
  6996                           ;mppt.c: 67:     Uout=tens/0.25;
  6997  002E3C  C0C6  F001         	movff	_tens,___fldiv@b
  6998  002E40  C0C7  F002         	movff	_tens+1,___fldiv@b+1
  6999  002E44  C0C8  F003         	movff	_tens+2,___fldiv@b+2
  7000  002E48  C0C9  F004         	movff	_tens+3,___fldiv@b+3
  7001  002E4C  0E00               	movlw	0
  7002  002E4E  6E05               	movwf	___fldiv@a,c
  7003  002E50  0E00               	movlw	0
  7004  002E52  6E06               	movwf	___fldiv@a+1,c
  7005  002E54  0E80               	movlw	128
  7006  002E56  6E07               	movwf	___fldiv@a+2,c
  7007  002E58  0E3E               	movlw	62
  7008  002E5A  6E08               	movwf	___fldiv@a+3,c
  7009  002E5C  EC7F  F013         	call	___fldiv	;wreg free
  7010  002E60  C001  F0DA         	movff	?___fldiv,_Uout
  7011  002E64  C002  F0DB         	movff	?___fldiv+1,_Uout+1
  7012  002E68  C003  F0DC         	movff	?___fldiv+2,_Uout+2
  7013  002E6C  C004  F0DD         	movff	?___fldiv+3,_Uout+3
  7014                           
  7015                           ;mppt.c: 68:     if(Uout>14.4)
  7016  002E70  0E66               	movlw	102
  7017  002E72  6E28               	movwf	___flge@ff1,c
  7018  002E74  0E66               	movlw	102
  7019  002E76  6E29               	movwf	___flge@ff1+1,c
  7020  002E78  0E66               	movlw	102
  7021  002E7A  6E2A               	movwf	___flge@ff1+2,c
  7022  002E7C  0E41               	movlw	65
  7023  002E7E  6E2B               	movwf	___flge@ff1+3,c
  7024  002E80  C0DA  F02C         	movff	_Uout,___flge@ff2
  7025  002E84  C0DB  F02D         	movff	_Uout+1,___flge@ff2+1
  7026  002E88  C0DC  F02E         	movff	_Uout+2,___flge@ff2+2
  7027  002E8C  C0DD  F02F         	movff	_Uout+3,___flge@ff2+3
  7028  002E90  ECF2  F017         	call	___flge	;wreg free
  7029  002E94  B0D8               	btfsc	status,0,c
  7030  002E96  0012               	return	
  7031                           
  7032                           ;mppt.c: 69:     {;mppt.c: 70:         _delay((unsigned long)((10)*(64000000/4000.0)));
  7033  002E98  0ED0               	movlw	208
  7034  002E9A  6E34               	movwf	??_read_Uout& (0+255),c
  7035  002E9C  0ECA               	movlw	202
  7036  002E9E                     u5397:
  7037  002E9E  2EE8               	decfsz	wreg,f,c
  7038  002EA0  D7FE               	bra	u5397
  7039  002EA2  2E34               	decfsz	??_read_Uout& (0+255),f,c
  7040  002EA4  D7FC               	bra	u5397
  7041                           
  7042                           ;mppt.c: 71:         CCPR1L=0;
  7043  002EA6  0E00               	movlw	0
  7044  002EA8  6EBE               	movwf	4030,c	;volatile
  7045                           
  7046                           ;mppt.c: 72:         CCPR2L=0;
  7047  002EAA  0E00               	movlw	0
  7048  002EAC  6E67               	movwf	3943,c	;volatile
  7049                           
  7050                           ;mppt.c: 73:         Lcd_Clear();
  7051  002EAE  ECF3  F01F         	call	_Lcd_Clear	;wreg free
  7052                           
  7053                           ;mppt.c: 74:         Lcd_Set_Cursor(1,1);
  7054  002EB2  0E01               	movlw	1
  7055  002EB4  6E0B               	movwf	Lcd_Set_Cursor@b,c
  7056  002EB6  0E01               	movlw	1
  7057  002EB8  EC61  F01E         	call	_Lcd_Set_Cursor
  7058                           
  7059                           ;mppt.c: 75:         Lcd_Write_String("Over Voltage");
  7060  002EBC  0E01               	movlw	low STR_6
  7061  002EBE  6E08               	movwf	Lcd_Write_String@a,c
  7062  002EC0  0E10               	movlw	high STR_6
  7063  002EC2  6E09               	movwf	Lcd_Write_String@a+1,c
  7064  002EC4  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  7065  002EC8                     l4643:
  7066                           
  7067                           ;mppt.c: 77:         {;mppt.c: 78:             _delay((unsigned long)((100)*(64000000/40
      +                          00.0)));
  7068  002EC8  0E09               	movlw	9
  7069  002ECA  6E35               	movwf	(??_read_Uout+1)& (0+255),c
  7070  002ECC  0E1E               	movlw	30
  7071  002ECE  6E34               	movwf	??_read_Uout& (0+255),c
  7072  002ED0  0EE4               	movlw	228
  7073  002ED2                     u5407:
  7074  002ED2  2EE8               	decfsz	wreg,f,c
  7075  002ED4  D7FE               	bra	u5407
  7076  002ED6  2E34               	decfsz	??_read_Uout& (0+255),f,c
  7077  002ED8  D7FC               	bra	u5407
  7078  002EDA  2E35               	decfsz	(??_read_Uout+1)& (0+255),f,c
  7079  002EDC  D7FA               	bra	u5407
  7080  002EDE  D000               	nop2	
  7081  002EE0  D7F3               	goto	l4643
  7082  002EE2                     __end_of_read_Uout:
  7083                           	opt callstack 0
  7084                           
  7085 ;; *************** function _read_Uin *****************
  7086 ;; Defined at:
  7087 ;;		line 94 in file "mppt.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;Total ram usage:        2 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    1
  7108 ;; This function calls:
  7109 ;;		___fldiv
  7110 ;;		___flmul
  7111 ;;		___xxtofl
  7112 ;; This function is called by:
  7113 ;;		_main
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text34
  7118  00323A                     __ptext34:
  7119                           	opt callstack 0
  7120  00323A                     _read_Uin:
  7121                           	opt callstack 29
  7122                           
  7123                           ;mppt.c: 96:     ADCON0=0b00001111;
  7124                           
  7125                           ;incstack = 0
  7126  00323A  0E0F               	movlw	15
  7127  00323C  6EC2               	movwf	4034,c	;volatile
  7128                           
  7129                           ;mppt.c: 97:     _delay((unsigned long)((10)*(64000000/4000.0)));
  7130  00323E  0ED0               	movlw	208
  7131  003240  6E28               	movwf	??_read_Uin& (0+255),c
  7132  003242  0ECA               	movlw	202
  7133  003244                     u5417:
  7134  003244  2EE8               	decfsz	wreg,f,c
  7135  003246  D7FE               	bra	u5417
  7136  003248  2E28               	decfsz	??_read_Uin& (0+255),f,c
  7137  00324A  D7FC               	bra	u5417
  7138                           
  7139                           ;mppt.c: 98:     ADCON0bits.GO=1;
  7140  00324C  82C2               	bsf	4034,1,c	;volatile
  7141                           
  7142                           ;mppt.c: 99:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7143  00324E  0E09               	movlw	9
  7144  003250  6E29               	movwf	(??_read_Uin+1)& (0+255),c
  7145  003252  0E1E               	movlw	30
  7146  003254  6E28               	movwf	??_read_Uin& (0+255),c
  7147  003256  0EE4               	movlw	228
  7148  003258                     u5427:
  7149  003258  2EE8               	decfsz	wreg,f,c
  7150  00325A  D7FE               	bra	u5427
  7151  00325C  2E28               	decfsz	??_read_Uin& (0+255),f,c
  7152  00325E  D7FC               	bra	u5427
  7153  003260  2E29               	decfsz	(??_read_Uin+1)& (0+255),f,c
  7154  003262  D7FA               	bra	u5427
  7155  003264  D000               	nop2	
  7156                           
  7157                           ;mppt.c: 100:     rez_adc_U=ADRESH;
  7158  003266  50C4               	movf	4036,w,c	;volatile
  7159  003268  6E01               	movwf	___xxtofl@val,c
  7160  00326A  6A02               	clrf	___xxtofl@val+1,c
  7161  00326C  6A03               	clrf	___xxtofl@val+2,c
  7162  00326E  6A04               	clrf	___xxtofl@val+3,c
  7163  003270  0E00               	movlw	0
  7164  003272  EC3E  F016         	call	___xxtofl
  7165  003276  C001  F0CA         	movff	?___xxtofl,_rez_adc_U
  7166  00327A  C002  F0CB         	movff	?___xxtofl+1,_rez_adc_U+1
  7167  00327E  C003  F0CC         	movff	?___xxtofl+2,_rez_adc_U+2
  7168  003282  C004  F0CD         	movff	?___xxtofl+3,_rez_adc_U+3
  7169                           
  7170                           ;mppt.c: 101:     tens=rez_adc_U*0.01953125;
  7171  003286  C0CA  F00F         	movff	_rez_adc_U,___flmul@b
  7172  00328A  C0CB  F010         	movff	_rez_adc_U+1,___flmul@b+1
  7173  00328E  C0CC  F011         	movff	_rez_adc_U+2,___flmul@b+2
  7174  003292  C0CD  F012         	movff	_rez_adc_U+3,___flmul@b+3
  7175  003296  0E00               	movlw	0
  7176  003298  6E13               	movwf	___flmul@a,c
  7177  00329A  0E00               	movlw	0
  7178  00329C  6E14               	movwf	___flmul@a+1,c
  7179  00329E  0EA0               	movlw	160
  7180  0032A0  6E15               	movwf	___flmul@a+2,c
  7181  0032A2  0E3C               	movlw	60
  7182  0032A4  6E16               	movwf	___flmul@a+3,c
  7183  0032A6  ECB6  F00E         	call	___flmul	;wreg free
  7184  0032AA  C00F  F0C6         	movff	?___flmul,_tens
  7185  0032AE  C010  F0C7         	movff	?___flmul+1,_tens+1
  7186  0032B2  C011  F0C8         	movff	?___flmul+2,_tens+2
  7187  0032B6  C012  F0C9         	movff	?___flmul+3,_tens+3
  7188                           
  7189                           ;mppt.c: 102:     Uin=tens/0.2;
  7190  0032BA  C0C6  F001         	movff	_tens,___fldiv@b
  7191  0032BE  C0C7  F002         	movff	_tens+1,___fldiv@b+1
  7192  0032C2  C0C8  F003         	movff	_tens+2,___fldiv@b+2
  7193  0032C6  C0C9  F004         	movff	_tens+3,___fldiv@b+3
  7194  0032CA  0ECD               	movlw	205
  7195  0032CC  6E05               	movwf	___fldiv@a,c
  7196  0032CE  0ECC               	movlw	204
  7197  0032D0  6E06               	movwf	___fldiv@a+1,c
  7198  0032D2  0E4C               	movlw	76
  7199  0032D4  6E07               	movwf	___fldiv@a+2,c
  7200  0032D6  0E3E               	movlw	62
  7201  0032D8  6E08               	movwf	___fldiv@a+3,c
  7202  0032DA  EC7F  F013         	call	___fldiv	;wreg free
  7203  0032DE  C001  F0DE         	movff	?___fldiv,_Uin
  7204  0032E2  C002  F0DF         	movff	?___fldiv+1,_Uin+1
  7205  0032E6  C003  F0E0         	movff	?___fldiv+2,_Uin+2
  7206  0032EA  C004  F0E1         	movff	?___fldiv+3,_Uin+3
  7207  0032EE  0012               	return		;funcret
  7208  0032F0                     __end_of_read_Uin:
  7209                           	opt callstack 0
  7210                           
  7211 ;; *************** function ___fldiv *****************
  7212 ;; Defined at:
  7213 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  b               4    0[COMRAM] void 
  7216 ;;  a               4    4[COMRAM] void 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  grs             4   19[COMRAM] unsigned long 
  7219 ;;  rem             4   12[COMRAM] unsigned long 
  7220 ;;  new_exp         2   17[COMRAM] short 
  7221 ;;  aexp            1   24[COMRAM] unsigned char 
  7222 ;;  bexp            1   23[COMRAM] unsigned char 
  7223 ;;  sign            1   16[COMRAM] unsigned char 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  4    0[COMRAM] unsigned char 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;Total ram usage:       25 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_read_Uout
  7243 ;;		_read_Uin
  7244 ;;		_efgtoa
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text35
  7249  0026FE                     __ptext35:
  7250                           	opt callstack 0
  7251  0026FE                     ___fldiv:
  7252                           	opt callstack 25
  7253                           
  7254                           ;incstack = 0
  7255  0026FE  5004               	movf	___fldiv@b+3,w,c
  7256  002700  0B80               	andlw	128
  7257  002702  6E11               	movwf	___fldiv@sign,c
  7258  002704  5004               	movf	___fldiv@b+3,w,c
  7259  002706  2404               	addwf	___fldiv@b+3,w,c
  7260  002708  6E18               	movwf	___fldiv@bexp,c
  7261  00270A  BE03               	btfsc	___fldiv@b+2,7,c
  7262  00270C  8018               	bsf	___fldiv@bexp,0,c
  7263  00270E  5018               	movf	___fldiv@bexp,w,c
  7264  002710  B4D8               	btfsc	status,2,c
  7265  002712  D00D               	goto	l3483
  7266  002714  2818               	incf	___fldiv@bexp,w,c
  7267  002716  A4D8               	btfss	status,2,c
  7268  002718  D008               	goto	l3479
  7269  00271A  0E00               	movlw	0
  7270  00271C  6E01               	movwf	___fldiv@b,c
  7271  00271E  0E00               	movlw	0
  7272  002720  6E02               	movwf	___fldiv@b+1,c
  7273  002722  0E00               	movlw	0
  7274  002724  6E03               	movwf	___fldiv@b+2,c
  7275  002726  0E00               	movlw	0
  7276  002728  6E04               	movwf	___fldiv@b+3,c
  7277  00272A                     l3479:
  7278  00272A  8E03               	bsf	___fldiv@b+2,7,c
  7279  00272C  D006               	goto	L10
  7280  00272E                     l3483:
  7281  00272E  0E00               	movlw	0
  7282  002730  6E01               	movwf	___fldiv@b,c
  7283  002732  0E00               	movlw	0
  7284  002734  6E02               	movwf	___fldiv@b+1,c
  7285  002736  0E00               	movlw	0
  7286  002738  6E03               	movwf	___fldiv@b+2,c
  7287  00273A                     L10:
  7288  00273A  0E00               	movlw	0
  7289  00273C  6E04               	movwf	___fldiv@b+3,c
  7290  00273E  5008               	movf	___fldiv@a+3,w,c
  7291  002740  0B80               	andlw	128
  7292  002742  1A11               	xorwf	___fldiv@sign,f,c
  7293  002744  5008               	movf	___fldiv@a+3,w,c
  7294  002746  2408               	addwf	___fldiv@a+3,w,c
  7295  002748  6E19               	movwf	___fldiv@aexp,c
  7296  00274A  BE07               	btfsc	___fldiv@a+2,7,c
  7297  00274C  8019               	bsf	___fldiv@aexp,0,c
  7298  00274E  5019               	movf	___fldiv@aexp,w,c
  7299  002750  B4D8               	btfsc	status,2,c
  7300  002752  D00D               	goto	l3503
  7301  002754  2819               	incf	___fldiv@aexp,w,c
  7302  002756  A4D8               	btfss	status,2,c
  7303  002758  D008               	goto	l3499
  7304  00275A  0E00               	movlw	0
  7305  00275C  6E05               	movwf	___fldiv@a,c
  7306  00275E  0E00               	movlw	0
  7307  002760  6E06               	movwf	___fldiv@a+1,c
  7308  002762  0E00               	movlw	0
  7309  002764  6E07               	movwf	___fldiv@a+2,c
  7310  002766  0E00               	movlw	0
  7311  002768  6E08               	movwf	___fldiv@a+3,c
  7312  00276A                     l3499:
  7313  00276A  8E07               	bsf	___fldiv@a+2,7,c
  7314  00276C  D006               	goto	L11
  7315  00276E                     l3503:
  7316  00276E  0E00               	movlw	0
  7317  002770  6E05               	movwf	___fldiv@a,c
  7318  002772  0E00               	movlw	0
  7319  002774  6E06               	movwf	___fldiv@a+1,c
  7320  002776  0E00               	movlw	0
  7321  002778  6E07               	movwf	___fldiv@a+2,c
  7322  00277A                     L11:
  7323  00277A  0E00               	movlw	0
  7324  00277C  6E08               	movwf	___fldiv@a+3,c
  7325  00277E  5005               	movf	___fldiv@a,w,c
  7326  002780  1006               	iorwf	___fldiv@a+1,w,c
  7327  002782  1007               	iorwf	___fldiv@a+2,w,c
  7328  002784  1008               	iorwf	___fldiv@a+3,w,c
  7329  002786  A4D8               	btfss	status,2,c
  7330  002788  D017               	goto	l3517
  7331  00278A  0E00               	movlw	0
  7332  00278C  6E01               	movwf	___fldiv@b,c
  7333  00278E  0E00               	movlw	0
  7334  002790  6E02               	movwf	___fldiv@b+1,c
  7335  002792  0E00               	movlw	0
  7336  002794  6E03               	movwf	___fldiv@b+2,c
  7337  002796  0E00               	movlw	0
  7338  002798  6E04               	movwf	___fldiv@b+3,c
  7339  00279A  0E80               	movlw	128
  7340  00279C  1203               	iorwf	___fldiv@b+2,f,c
  7341  00279E  0E7F               	movlw	127
  7342  0027A0  1204               	iorwf	___fldiv@b+3,f,c
  7343  0027A2                     l3511:
  7344  0027A2  5011               	movf	___fldiv@sign,w,c
  7345  0027A4  1204               	iorwf	___fldiv@b+3,f,c
  7346  0027A6  C001  F001         	movff	___fldiv@b,?___fldiv
  7347  0027AA  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7348  0027AE  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7349  0027B2  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7350  0027B6  0012               	return	
  7351  0027B8                     l3517:
  7352  0027B8  5018               	movf	___fldiv@bexp,w,c
  7353  0027BA  A4D8               	btfss	status,2,c
  7354  0027BC  D009               	goto	l3525
  7355  0027BE  0E00               	movlw	0
  7356  0027C0  6E01               	movwf	?___fldiv,c
  7357  0027C2  0E00               	movlw	0
  7358  0027C4  6E02               	movwf	?___fldiv+1,c
  7359  0027C6  0E00               	movlw	0
  7360  0027C8  6E03               	movwf	?___fldiv+2,c
  7361  0027CA  0E00               	movlw	0
  7362  0027CC  6E04               	movwf	?___fldiv+3,c
  7363  0027CE  0012               	return	
  7364  0027D0                     l3525:
  7365  0027D0  5019               	movf	___fldiv@aexp,w,c
  7366  0027D2  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7367  0027D6  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7368  0027D8  5E09               	subwf	??___fldiv,f,c
  7369  0027DA  0E00               	movlw	0
  7370  0027DC  5A0A               	subwfb	??___fldiv+1,f,c
  7371  0027DE  0E7F               	movlw	127
  7372  0027E0  2409               	addwf	??___fldiv,w,c
  7373  0027E2  6E12               	movwf	___fldiv@new_exp,c
  7374  0027E4  0E00               	movlw	0
  7375  0027E6  200A               	addwfc	??___fldiv+1,w,c
  7376  0027E8  6E13               	movwf	___fldiv@new_exp+1,c
  7377  0027EA  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7378  0027EE  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7379  0027F2  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7380  0027F6  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7381  0027FA  0E00               	movlw	0
  7382  0027FC  6E01               	movwf	___fldiv@b,c
  7383  0027FE  0E00               	movlw	0
  7384  002800  6E02               	movwf	___fldiv@b+1,c
  7385  002802  0E00               	movlw	0
  7386  002804  6E03               	movwf	___fldiv@b+2,c
  7387  002806  0E00               	movlw	0
  7388  002808  6E04               	movwf	___fldiv@b+3,c
  7389  00280A  0E00               	movlw	0
  7390  00280C  6E14               	movwf	___fldiv@grs,c
  7391  00280E  0E00               	movlw	0
  7392  002810  6E15               	movwf	___fldiv@grs+1,c
  7393  002812  0E00               	movlw	0
  7394  002814  6E16               	movwf	___fldiv@grs+2,c
  7395  002816  0E00               	movlw	0
  7396  002818  6E17               	movwf	___fldiv@grs+3,c
  7397  00281A  0E00               	movlw	0
  7398  00281C  6E19               	movwf	___fldiv@aexp,c
  7399  00281E  D028               	goto	l1109
  7400  002820                     l3535:
  7401  002820  5019               	movf	___fldiv@aexp,w,c
  7402  002822  B4D8               	btfsc	status,2,c
  7403  002824  D011               	goto	l3543
  7404  002826  90D8               	bcf	status,0,c
  7405  002828  360D               	rlcf	___fldiv@rem,f,c
  7406  00282A  360E               	rlcf	___fldiv@rem+1,f,c
  7407  00282C  360F               	rlcf	___fldiv@rem+2,f,c
  7408  00282E  3610               	rlcf	___fldiv@rem+3,f,c
  7409  002830  90D8               	bcf	status,0,c
  7410  002832  3601               	rlcf	___fldiv@b,f,c
  7411  002834  3602               	rlcf	___fldiv@b+1,f,c
  7412  002836  3603               	rlcf	___fldiv@b+2,f,c
  7413  002838  3604               	rlcf	___fldiv@b+3,f,c
  7414  00283A  BE17               	btfsc	___fldiv@grs+3,7,c
  7415  00283C  8001               	bsf	___fldiv@b,0,c
  7416  00283E  90D8               	bcf	status,0,c
  7417  002840  3614               	rlcf	___fldiv@grs,f,c
  7418  002842  3615               	rlcf	___fldiv@grs+1,f,c
  7419  002844  3616               	rlcf	___fldiv@grs+2,f,c
  7420  002846  3617               	rlcf	___fldiv@grs+3,f,c
  7421  002848                     l3543:
  7422  002848  5005               	movf	___fldiv@a,w,c
  7423  00284A  5C0D               	subwf	___fldiv@rem,w,c
  7424  00284C  5006               	movf	___fldiv@a+1,w,c
  7425  00284E  580E               	subwfb	___fldiv@rem+1,w,c
  7426  002850  5007               	movf	___fldiv@a+2,w,c
  7427  002852  580F               	subwfb	___fldiv@rem+2,w,c
  7428  002854  5008               	movf	___fldiv@a+3,w,c
  7429  002856  5810               	subwfb	___fldiv@rem+3,w,c
  7430  002858  A0D8               	btfss	status,0,c
  7431  00285A  D009               	goto	l3549
  7432  00285C  8C17               	bsf	___fldiv@grs+3,6,c
  7433  00285E  5005               	movf	___fldiv@a,w,c
  7434  002860  5E0D               	subwf	___fldiv@rem,f,c
  7435  002862  5006               	movf	___fldiv@a+1,w,c
  7436  002864  5A0E               	subwfb	___fldiv@rem+1,f,c
  7437  002866  5007               	movf	___fldiv@a+2,w,c
  7438  002868  5A0F               	subwfb	___fldiv@rem+2,f,c
  7439  00286A  5008               	movf	___fldiv@a+3,w,c
  7440  00286C  5A10               	subwfb	___fldiv@rem+3,f,c
  7441  00286E                     l3549:
  7442  00286E  2A19               	incf	___fldiv@aexp,f,c
  7443  002870                     l1109:
  7444  002870  0E19               	movlw	25
  7445  002872  6419               	cpfsgt	___fldiv@aexp,c
  7446  002874  D7D5               	goto	l3535
  7447  002876  500D               	movf	___fldiv@rem,w,c
  7448  002878  100E               	iorwf	___fldiv@rem+1,w,c
  7449  00287A  100F               	iorwf	___fldiv@rem+2,w,c
  7450  00287C  1010               	iorwf	___fldiv@rem+3,w,c
  7451  00287E  B4D8               	btfsc	status,2,c
  7452  002880  D011               	goto	l3561
  7453  002882  8014               	bsf	___fldiv@grs,0,c
  7454  002884  D00F               	goto	l3561
  7455  002886                     l3555:
  7456  002886  90D8               	bcf	status,0,c
  7457  002888  3601               	rlcf	___fldiv@b,f,c
  7458  00288A  3602               	rlcf	___fldiv@b+1,f,c
  7459  00288C  3603               	rlcf	___fldiv@b+2,f,c
  7460  00288E  3604               	rlcf	___fldiv@b+3,f,c
  7461  002890  BE17               	btfsc	___fldiv@grs+3,7,c
  7462  002892  8001               	bsf	___fldiv@b,0,c
  7463  002894  90D8               	bcf	status,0,c
  7464  002896  3614               	rlcf	___fldiv@grs,f,c
  7465  002898  3615               	rlcf	___fldiv@grs+1,f,c
  7466  00289A  3616               	rlcf	___fldiv@grs+2,f,c
  7467  00289C  3617               	rlcf	___fldiv@grs+3,f,c
  7468  00289E  0612               	decf	___fldiv@new_exp,f,c
  7469  0028A0  A0D8               	btfss	status,0,c
  7470  0028A2  0613               	decf	___fldiv@new_exp+1,f,c
  7471  0028A4                     l3561:
  7472  0028A4  AE03               	btfss	___fldiv@b+2,7,c
  7473  0028A6  D7EF               	goto	l3555
  7474  0028A8  0E00               	movlw	0
  7475  0028AA  6E19               	movwf	___fldiv@aexp,c
  7476  0028AC  AE17               	btfss	___fldiv@grs+3,7,c
  7477  0028AE  D017               	goto	l1120
  7478  0028B0  0EFF               	movlw	255
  7479  0028B2  1414               	andwf	___fldiv@grs,w,c
  7480  0028B4  6E09               	movwf	??___fldiv& (0+255),c
  7481  0028B6  0EFF               	movlw	255
  7482  0028B8  1415               	andwf	___fldiv@grs+1,w,c
  7483  0028BA  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7484  0028BC  0EFF               	movlw	255
  7485  0028BE  1416               	andwf	___fldiv@grs+2,w,c
  7486  0028C0  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7487  0028C2  0E7F               	movlw	127
  7488  0028C4  1417               	andwf	___fldiv@grs+3,w,c
  7489  0028C6  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7490  0028C8  5009               	movf	??___fldiv,w,c
  7491  0028CA  100A               	iorwf	??___fldiv+1,w,c
  7492  0028CC  100B               	iorwf	??___fldiv+2,w,c
  7493  0028CE  100C               	iorwf	??___fldiv+3,w,c
  7494  0028D0  B4D8               	btfsc	status,2,c
  7495  0028D2  D003               	goto	l1121
  7496  0028D4                     u3590:
  7497  0028D4  0E01               	movlw	1
  7498  0028D6  6E19               	movwf	___fldiv@aexp,c
  7499  0028D8  D002               	goto	l1120
  7500  0028DA                     l1121:
  7501  0028DA  B001               	btfsc	___fldiv@b,0,c
  7502  0028DC  D7FB               	goto	u3590
  7503  0028DE                     l1120:
  7504  0028DE  5019               	movf	___fldiv@aexp,w,c
  7505  0028E0  B4D8               	btfsc	status,2,c
  7506  0028E2  D01F               	goto	l3581
  7507  0028E4  0E01               	movlw	1
  7508  0028E6  2601               	addwf	___fldiv@b,f,c
  7509  0028E8  0E00               	movlw	0
  7510  0028EA  2202               	addwfc	___fldiv@b+1,f,c
  7511  0028EC  2203               	addwfc	___fldiv@b+2,f,c
  7512  0028EE  2204               	addwfc	___fldiv@b+3,f,c
  7513  0028F0  A004               	btfss	___fldiv@b+3,0,c
  7514  0028F2  D017               	goto	l3581
  7515  0028F4  C001  F009         	movff	___fldiv@b,??___fldiv
  7516  0028F8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7517  0028FC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7518  002900  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7519  002904  340C               	rlcf	??___fldiv+3,w,c
  7520  002906  320C               	rrcf	??___fldiv+3,f,c
  7521  002908  320B               	rrcf	??___fldiv+2,f,c
  7522  00290A  320A               	rrcf	??___fldiv+1,f,c
  7523  00290C  3209               	rrcf	??___fldiv,f,c
  7524  00290E  C009  F001         	movff	??___fldiv,___fldiv@b
  7525  002912  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7526  002916  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7527  00291A  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7528  00291E  4A12               	infsnz	___fldiv@new_exp,f,c
  7529  002920  2A13               	incf	___fldiv@new_exp+1,f,c
  7530  002922                     l3581:
  7531  002922  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7532  002924  D010               	goto	l3585
  7533  002926  5013               	movf	___fldiv@new_exp+1,w,c
  7534  002928  E103               	bnz	u3630
  7535  00292A  2812               	incf	___fldiv@new_exp,w,c
  7536  00292C  A0D8               	btfss	status,0,c
  7537  00292E  D00B               	goto	l3585
  7538  002930                     u3630:
  7539  002930  0E00               	movlw	0
  7540  002932  6E13               	movwf	___fldiv@new_exp+1,c
  7541  002934  6812               	setf	___fldiv@new_exp,c
  7542  002936  0E00               	movlw	0
  7543  002938  6E01               	movwf	___fldiv@b,c
  7544  00293A  0E00               	movlw	0
  7545  00293C  6E02               	movwf	___fldiv@b+1,c
  7546  00293E  0E00               	movlw	0
  7547  002940  6E03               	movwf	___fldiv@b+2,c
  7548  002942  0E00               	movlw	0
  7549  002944  6E04               	movwf	___fldiv@b+3,c
  7550  002946                     l3585:
  7551  002946  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7552  002948  D005               	goto	u3640
  7553  00294A  5013               	movf	___fldiv@new_exp+1,w,c
  7554  00294C  E111               	bnz	l3589
  7555  00294E  0412               	decf	___fldiv@new_exp,w,c
  7556  002950  B0D8               	btfsc	status,0,c
  7557  002952  D00E               	goto	l3589
  7558  002954                     u3640:
  7559  002954  0E00               	movlw	0
  7560  002956  6E13               	movwf	___fldiv@new_exp+1,c
  7561  002958  0E00               	movlw	0
  7562  00295A  6E12               	movwf	___fldiv@new_exp,c
  7563  00295C  0E00               	movlw	0
  7564  00295E  6E01               	movwf	___fldiv@b,c
  7565  002960  0E00               	movlw	0
  7566  002962  6E02               	movwf	___fldiv@b+1,c
  7567  002964  0E00               	movlw	0
  7568  002966  6E03               	movwf	___fldiv@b+2,c
  7569  002968  0E00               	movlw	0
  7570  00296A  6E04               	movwf	___fldiv@b+3,c
  7571  00296C  0E00               	movlw	0
  7572  00296E  6E11               	movwf	___fldiv@sign,c
  7573  002970                     l3589:
  7574  002970  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7575  002974  A018               	btfss	___fldiv@bexp,0,c
  7576  002976  D002               	goto	l3595
  7577  002978  8E03               	bsf	___fldiv@b+2,7,c
  7578  00297A  D001               	goto	l3597
  7579  00297C                     l3595:
  7580  00297C  9E03               	bcf	___fldiv@b+2,7,c
  7581  00297E                     l3597:
  7582  00297E  90D8               	bcf	status,0,c
  7583  002980  3018               	rrcf	___fldiv@bexp,w,c
  7584  002982  6E04               	movwf	___fldiv@b+3,c
  7585  002984  D70E               	goto	l3511
  7586  002986                     __end_of___fldiv:
  7587                           	opt callstack 0
  7588                           
  7589 ;; *************** function _read_Iout *****************
  7590 ;; Defined at:
  7591 ;;		line 22 in file "mppt.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;		None
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;		None
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  1    wreg      void 
  7598 ;; Registers used:
  7599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;Total ram usage:        2 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:    5
  7612 ;; This function calls:
  7613 ;;		_Lcd_Clear
  7614 ;;		_Lcd_Set_Cursor
  7615 ;;		_Lcd_Write_String
  7616 ;;		___flge
  7617 ;;		___flmul
  7618 ;;		___xxtofl
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text36
  7625  002EE2                     __ptext36:
  7626                           	opt callstack 0
  7627  002EE2                     _read_Iout:
  7628                           	opt callstack 25
  7629                           
  7630                           ;mppt.c: 24:     ADCON0=0b00001011;
  7631                           
  7632                           ;incstack = 0
  7633  002EE2  0E0B               	movlw	11
  7634  002EE4  6EC2               	movwf	4034,c	;volatile
  7635                           
  7636                           ;mppt.c: 25:     _delay((unsigned long)((10)*(64000000/4000.0)));
  7637  002EE6  0ED0               	movlw	208
  7638  002EE8  6E34               	movwf	??_read_Iout& (0+255),c
  7639  002EEA  0ECA               	movlw	202
  7640  002EEC                     u5437:
  7641  002EEC  2EE8               	decfsz	wreg,f,c
  7642  002EEE  D7FE               	bra	u5437
  7643  002EF0  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7644  002EF2  D7FC               	bra	u5437
  7645                           
  7646                           ;mppt.c: 26:     ADCON0bits.GO=1;
  7647  002EF4  82C2               	bsf	4034,1,c	;volatile
  7648                           
  7649                           ;mppt.c: 27:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7650  002EF6  0E09               	movlw	9
  7651  002EF8  6E35               	movwf	(??_read_Iout+1)& (0+255),c
  7652  002EFA  0E1E               	movlw	30
  7653  002EFC  6E34               	movwf	??_read_Iout& (0+255),c
  7654  002EFE  0EE4               	movlw	228
  7655  002F00                     u5447:
  7656  002F00  2EE8               	decfsz	wreg,f,c
  7657  002F02  D7FE               	bra	u5447
  7658  002F04  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7659  002F06  D7FC               	bra	u5447
  7660  002F08  2E35               	decfsz	(??_read_Iout+1)& (0+255),f,c
  7661  002F0A  D7FA               	bra	u5447
  7662  002F0C  D000               	nop2	
  7663                           
  7664                           ;mppt.c: 28:     rez_adc_A=ADRESH;
  7665  002F0E  50C4               	movf	4036,w,c	;volatile
  7666  002F10  6E01               	movwf	___xxtofl@val,c
  7667  002F12  6A02               	clrf	___xxtofl@val+1,c
  7668  002F14  6A03               	clrf	___xxtofl@val+2,c
  7669  002F16  6A04               	clrf	___xxtofl@val+3,c
  7670  002F18  0E00               	movlw	0
  7671  002F1A  EC3E  F016         	call	___xxtofl
  7672  002F1E  C001  F0D2         	movff	?___xxtofl,_rez_adc_A
  7673  002F22  C002  F0D3         	movff	?___xxtofl+1,_rez_adc_A+1
  7674  002F26  C003  F0D4         	movff	?___xxtofl+2,_rez_adc_A+2
  7675  002F2A  C004  F0D5         	movff	?___xxtofl+3,_rez_adc_A+3
  7676                           
  7677                           ;mppt.c: 29:     tens_A=rez_adc_A*0.0181372549019608;
  7678  002F2E  C0D2  F00F         	movff	_rez_adc_A,___flmul@b
  7679  002F32  C0D3  F010         	movff	_rez_adc_A+1,___flmul@b+1
  7680  002F36  C0D4  F011         	movff	_rez_adc_A+2,___flmul@b+2
  7681  002F3A  C0D5  F012         	movff	_rez_adc_A+3,___flmul@b+3
  7682  002F3E  0E95               	movlw	149
  7683  002F40  6E13               	movwf	___flmul@a,c
  7684  002F42  0E94               	movlw	148
  7685  002F44  6E14               	movwf	___flmul@a+1,c
  7686  002F46  0E94               	movlw	148
  7687  002F48  6E15               	movwf	___flmul@a+2,c
  7688  002F4A  0E3C               	movlw	60
  7689  002F4C  6E16               	movwf	___flmul@a+3,c
  7690  002F4E  ECB6  F00E         	call	___flmul	;wreg free
  7691  002F52  C00F  F0CE         	movff	?___flmul,_tens_A
  7692  002F56  C010  F0CF         	movff	?___flmul+1,_tens_A+1
  7693  002F5A  C011  F0D0         	movff	?___flmul+2,_tens_A+2
  7694  002F5E  C012  F0D1         	movff	?___flmul+3,_tens_A+3
  7695                           
  7696                           ;mppt.c: 30:     Iout=tens_A;
  7697  002F62  C0CE  F0D6         	movff	_tens_A,_Iout
  7698  002F66  C0CF  F0D7         	movff	_tens_A+1,_Iout+1
  7699  002F6A  C0D0  F0D8         	movff	_tens_A+2,_Iout+2
  7700  002F6E  C0D1  F0D9         	movff	_tens_A+3,_Iout+3
  7701                           
  7702                           ;mppt.c: 31:     if(Iout>2)
  7703  002F72  0E00               	movlw	0
  7704  002F74  6E28               	movwf	___flge@ff1,c
  7705  002F76  0E00               	movlw	0
  7706  002F78  6E29               	movwf	___flge@ff1+1,c
  7707  002F7A  0E00               	movlw	0
  7708  002F7C  6E2A               	movwf	___flge@ff1+2,c
  7709  002F7E  0E40               	movlw	64
  7710  002F80  6E2B               	movwf	___flge@ff1+3,c
  7711  002F82  C0D6  F02C         	movff	_Iout,___flge@ff2
  7712  002F86  C0D7  F02D         	movff	_Iout+1,___flge@ff2+1
  7713  002F8A  C0D8  F02E         	movff	_Iout+2,___flge@ff2+2
  7714  002F8E  C0D9  F02F         	movff	_Iout+3,___flge@ff2+3
  7715  002F92  ECF2  F017         	call	___flge	;wreg free
  7716  002F96  B0D8               	btfsc	status,0,c
  7717  002F98  0012               	return	
  7718                           
  7719                           ;mppt.c: 32:     {;mppt.c: 33:         _delay((unsigned long)((10)*(64000000/4000.0)));
  7720  002F9A  0ED0               	movlw	208
  7721  002F9C  6E34               	movwf	??_read_Iout& (0+255),c
  7722  002F9E  0ECA               	movlw	202
  7723  002FA0                     u5457:
  7724  002FA0  2EE8               	decfsz	wreg,f,c
  7725  002FA2  D7FE               	bra	u5457
  7726  002FA4  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7727  002FA6  D7FC               	bra	u5457
  7728                           
  7729                           ;mppt.c: 34:         CCPR1L=0;
  7730  002FA8  0E00               	movlw	0
  7731  002FAA  6EBE               	movwf	4030,c	;volatile
  7732                           
  7733                           ;mppt.c: 35:         CCPR2L=0;
  7734  002FAC  0E00               	movlw	0
  7735  002FAE  6E67               	movwf	3943,c	;volatile
  7736                           
  7737                           ;mppt.c: 36:         Lcd_Clear();
  7738  002FB0  ECF3  F01F         	call	_Lcd_Clear	;wreg free
  7739                           
  7740                           ;mppt.c: 37:         Lcd_Set_Cursor(1,1);
  7741  002FB4  0E01               	movlw	1
  7742  002FB6  6E0B               	movwf	Lcd_Set_Cursor@b,c
  7743  002FB8  0E01               	movlw	1
  7744  002FBA  EC61  F01E         	call	_Lcd_Set_Cursor
  7745                           
  7746                           ;mppt.c: 38:         Lcd_Write_String("Over Current");
  7747  002FBE  0E0E               	movlw	low STR_2
  7748  002FC0  6E08               	movwf	Lcd_Write_String@a,c
  7749  002FC2  0E10               	movlw	high STR_2
  7750  002FC4  6E09               	movwf	Lcd_Write_String@a+1,c
  7751  002FC6  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  7752  002FCA                     l4683:
  7753                           
  7754                           ;mppt.c: 40:         {;mppt.c: 41:             _delay((unsigned long)((100)*(64000000/40
      +                          00.0)));
  7755  002FCA  0E09               	movlw	9
  7756  002FCC  6E35               	movwf	(??_read_Iout+1)& (0+255),c
  7757  002FCE  0E1E               	movlw	30
  7758  002FD0  6E34               	movwf	??_read_Iout& (0+255),c
  7759  002FD2  0EE4               	movlw	228
  7760  002FD4                     u5467:
  7761  002FD4  2EE8               	decfsz	wreg,f,c
  7762  002FD6  D7FE               	bra	u5467
  7763  002FD8  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7764  002FDA  D7FC               	bra	u5467
  7765  002FDC  2E35               	decfsz	(??_read_Iout+1)& (0+255),f,c
  7766  002FDE  D7FA               	bra	u5467
  7767  002FE0  D000               	nop2	
  7768  002FE2  D7F3               	goto	l4683
  7769  002FE4                     __end_of_read_Iout:
  7770                           	opt callstack 0
  7771                           
  7772 ;; *************** function ___xxtofl *****************
  7773 ;; Defined at:
  7774 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  sign            1    wreg     unsigned char 
  7777 ;;  val             4    0[COMRAM] long 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  sign            1    8[COMRAM] unsigned char 
  7780 ;;  arg             4   10[COMRAM] unsigned long 
  7781 ;;  exp             1    9[COMRAM] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  4    0[COMRAM] unsigned char 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;Total ram usage:       14 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_read_Iout
  7801 ;;		_read_Uout
  7802 ;;		_read_Uin
  7803 ;;		_set_boost
  7804 ;;		_set_buck
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text37
  7809  002C7C                     __ptext37:
  7810                           	opt callstack 0
  7811  002C7C                     ___xxtofl:
  7812                           	opt callstack 29
  7813                           
  7814                           ;incstack = 0
  7815                           ;___xxtofl@sign stored from wreg
  7816  002C7C  6E09               	movwf	___xxtofl@sign,c
  7817  002C7E  5009               	movf	___xxtofl@sign,w,c
  7818  002C80  A4D8               	btfss	status,2,c
  7819  002C82  AE04               	btfss	___xxtofl@val+3,7,c
  7820  002C84  D01A               	goto	l1180
  7821  002C86  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7822  002C8A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7823  002C8E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7824  002C92  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7825  002C96  1E05               	comf	??___xxtofl,f,c
  7826  002C98  1E06               	comf	??___xxtofl+1,f,c
  7827  002C9A  1E07               	comf	??___xxtofl+2,f,c
  7828  002C9C  1E08               	comf	??___xxtofl+3,f,c
  7829  002C9E  2A05               	incf	??___xxtofl,f,c
  7830  002CA0  0E00               	movlw	0
  7831  002CA2  2206               	addwfc	??___xxtofl+1,f,c
  7832  002CA4  2207               	addwfc	??___xxtofl+2,f,c
  7833  002CA6  2208               	addwfc	??___xxtofl+3,f,c
  7834  002CA8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7835  002CAC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7836  002CB0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7837  002CB4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7838  002CB8  D008               	goto	l4521
  7839  002CBA                     l1180:
  7840  002CBA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7841  002CBE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7842  002CC2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7843  002CC6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7844  002CCA                     l4521:
  7845  002CCA  5001               	movf	___xxtofl@val,w,c
  7846  002CCC  1002               	iorwf	___xxtofl@val+1,w,c
  7847  002CCE  1003               	iorwf	___xxtofl@val+2,w,c
  7848  002CD0  1004               	iorwf	___xxtofl@val+3,w,c
  7849  002CD2  A4D8               	btfss	status,2,c
  7850  002CD4  D009               	goto	l4527
  7851  002CD6  0E00               	movlw	0
  7852  002CD8  6E01               	movwf	?___xxtofl,c
  7853  002CDA  0E00               	movlw	0
  7854  002CDC  6E02               	movwf	?___xxtofl+1,c
  7855  002CDE  0E00               	movlw	0
  7856  002CE0  6E03               	movwf	?___xxtofl+2,c
  7857  002CE2  0E00               	movlw	0
  7858  002CE4  6E04               	movwf	?___xxtofl+3,c
  7859  002CE6  0012               	return	
  7860  002CE8                     l4527:
  7861  002CE8  0E96               	movlw	150
  7862  002CEA  6E0A               	movwf	___xxtofl@exp,c
  7863  002CEC  D006               	goto	l4531
  7864  002CEE                     l4529:
  7865  002CEE  2A0A               	incf	___xxtofl@exp,f,c
  7866  002CF0  90D8               	bcf	status,0,c
  7867  002CF2  320E               	rrcf	___xxtofl@arg+3,f,c
  7868  002CF4  320D               	rrcf	___xxtofl@arg+2,f,c
  7869  002CF6  320C               	rrcf	___xxtofl@arg+1,f,c
  7870  002CF8  320B               	rrcf	___xxtofl@arg,f,c
  7871  002CFA                     l4531:
  7872  002CFA  0E00               	movlw	0
  7873  002CFC  140B               	andwf	___xxtofl@arg,w,c
  7874  002CFE  6E05               	movwf	??___xxtofl& (0+255),c
  7875  002D00  0E00               	movlw	0
  7876  002D02  140C               	andwf	___xxtofl@arg+1,w,c
  7877  002D04  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7878  002D06  0E00               	movlw	0
  7879  002D08  140D               	andwf	___xxtofl@arg+2,w,c
  7880  002D0A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7881  002D0C  0EFE               	movlw	254
  7882  002D0E  140E               	andwf	___xxtofl@arg+3,w,c
  7883  002D10  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7884  002D12  5005               	movf	??___xxtofl,w,c
  7885  002D14  1006               	iorwf	??___xxtofl+1,w,c
  7886  002D16  1007               	iorwf	??___xxtofl+2,w,c
  7887  002D18  1008               	iorwf	??___xxtofl+3,w,c
  7888  002D1A  B4D8               	btfsc	status,2,c
  7889  002D1C  D00D               	goto	l1187
  7890  002D1E  D7E7               	goto	l4529
  7891  002D20                     l4533:
  7892  002D20  2A0A               	incf	___xxtofl@exp,f,c
  7893  002D22  0E01               	movlw	1
  7894  002D24  260B               	addwf	___xxtofl@arg,f,c
  7895  002D26  0E00               	movlw	0
  7896  002D28  220C               	addwfc	___xxtofl@arg+1,f,c
  7897  002D2A  220D               	addwfc	___xxtofl@arg+2,f,c
  7898  002D2C  220E               	addwfc	___xxtofl@arg+3,f,c
  7899  002D2E  90D8               	bcf	status,0,c
  7900  002D30  320E               	rrcf	___xxtofl@arg+3,f,c
  7901  002D32  320D               	rrcf	___xxtofl@arg+2,f,c
  7902  002D34  320C               	rrcf	___xxtofl@arg+1,f,c
  7903  002D36  320B               	rrcf	___xxtofl@arg,f,c
  7904  002D38                     l1187:
  7905  002D38  0E00               	movlw	0
  7906  002D3A  140B               	andwf	___xxtofl@arg,w,c
  7907  002D3C  6E05               	movwf	??___xxtofl& (0+255),c
  7908  002D3E  0E00               	movlw	0
  7909  002D40  140C               	andwf	___xxtofl@arg+1,w,c
  7910  002D42  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7911  002D44  0E00               	movlw	0
  7912  002D46  140D               	andwf	___xxtofl@arg+2,w,c
  7913  002D48  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7914  002D4A  0EFF               	movlw	255
  7915  002D4C  140E               	andwf	___xxtofl@arg+3,w,c
  7916  002D4E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7917  002D50  5005               	movf	??___xxtofl,w,c
  7918  002D52  1006               	iorwf	??___xxtofl+1,w,c
  7919  002D54  1007               	iorwf	??___xxtofl+2,w,c
  7920  002D56  1008               	iorwf	??___xxtofl+3,w,c
  7921  002D58  B4D8               	btfsc	status,2,c
  7922  002D5A  D007               	goto	l4541
  7923  002D5C  D7E1               	goto	l4533
  7924  002D5E                     l4539:
  7925  002D5E  060A               	decf	___xxtofl@exp,f,c
  7926  002D60  90D8               	bcf	status,0,c
  7927  002D62  360B               	rlcf	___xxtofl@arg,f,c
  7928  002D64  360C               	rlcf	___xxtofl@arg+1,f,c
  7929  002D66  360D               	rlcf	___xxtofl@arg+2,f,c
  7930  002D68  360E               	rlcf	___xxtofl@arg+3,f,c
  7931  002D6A                     l4541:
  7932  002D6A  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7933  002D6C  D003               	goto	u5090
  7934  002D6E  0E02               	movlw	2
  7935  002D70  600A               	cpfslt	___xxtofl@exp,c
  7936  002D72  D7F5               	goto	l4539
  7937  002D74                     u5090:
  7938  002D74  A00A               	btfss	___xxtofl@exp,0,c
  7939  002D76  9E0D               	bcf	___xxtofl@arg+2,7,c
  7940  002D78  90D8               	bcf	status,0,c
  7941  002D7A  320A               	rrcf	___xxtofl@exp,f,c
  7942  002D7C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7943  002D80  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7944  002D82  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7945  002D84  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7946  002D86  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7947  002D8A  6A07               	clrf	??___xxtofl+2,c
  7948  002D8C  6A06               	clrf	??___xxtofl+1,c
  7949  002D8E  6A05               	clrf	??___xxtofl,c
  7950  002D90  5005               	movf	??___xxtofl,w,c
  7951  002D92  120B               	iorwf	___xxtofl@arg,f,c
  7952  002D94  5006               	movf	??___xxtofl+1,w,c
  7953  002D96  120C               	iorwf	___xxtofl@arg+1,f,c
  7954  002D98  5007               	movf	??___xxtofl+2,w,c
  7955  002D9A  120D               	iorwf	___xxtofl@arg+2,f,c
  7956  002D9C  5008               	movf	??___xxtofl+3,w,c
  7957  002D9E  120E               	iorwf	___xxtofl@arg+3,f,c
  7958  002DA0  5009               	movf	___xxtofl@sign,w,c
  7959  002DA2  A4D8               	btfss	status,2,c
  7960  002DA4  AE04               	btfss	___xxtofl@val+3,7,c
  7961  002DA6  D001               	goto	l4557
  7962  002DA8  8E0E               	bsf	___xxtofl@arg+3,7,c
  7963  002DAA                     l4557:
  7964  002DAA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7965  002DAE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7966  002DB2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7967  002DB6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7968  002DBA  0012               	return		;funcret
  7969  002DBC                     __end_of___xxtofl:
  7970                           	opt callstack 0
  7971                           
  7972 ;; *************** function ___flmul *****************
  7973 ;; Defined at:
  7974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  b               4   14[COMRAM] unsigned char 
  7977 ;;  a               4   18[COMRAM] unsigned char 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  prod            4   33[COMRAM] struct .
  7980 ;;  grs             4   27[COMRAM] unsigned long 
  7981 ;;  temp            2   37[COMRAM] struct .
  7982 ;;  bexp            1   32[COMRAM] unsigned char 
  7983 ;;  aexp            1   31[COMRAM] unsigned char 
  7984 ;;  sign            1   26[COMRAM] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  4   14[COMRAM] unsigned char 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0, prodl, prodh
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7994 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;Total ram usage:       25 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;;		_read_Iout
  8005 ;;		_read_Uout
  8006 ;;		_read_Uin
  8007 ;;		_write_Power
  8008 ;;		_set_boost
  8009 ;;		_set_buck
  8010 ;;		_efgtoa
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text38
  8015  001D6C                     __ptext38:
  8016                           	opt callstack 0
  8017  001D6C                     ___flmul:
  8018                           	opt callstack 25
  8019                           
  8020                           ;incstack = 0
  8021  001D6C  5012               	movf	___flmul@b+3,w,c
  8022  001D6E  0B80               	andlw	128
  8023  001D70  6E1B               	movwf	___flmul@sign,c
  8024  001D72  5012               	movf	___flmul@b+3,w,c
  8025  001D74  2412               	addwf	___flmul@b+3,w,c
  8026  001D76  6E21               	movwf	___flmul@bexp,c
  8027  001D78  BE11               	btfsc	___flmul@b+2,7,c
  8028  001D7A  8021               	bsf	___flmul@bexp,0,c
  8029  001D7C  5021               	movf	___flmul@bexp,w,c
  8030  001D7E  B4D8               	btfsc	status,2,c
  8031  001D80  D00D               	goto	l3619
  8032  001D82  2821               	incf	___flmul@bexp,w,c
  8033  001D84  A4D8               	btfss	status,2,c
  8034  001D86  D008               	goto	l3617
  8035  001D88  0E00               	movlw	0
  8036  001D8A  6E0F               	movwf	___flmul@b,c
  8037  001D8C  0E00               	movlw	0
  8038  001D8E  6E10               	movwf	___flmul@b+1,c
  8039  001D90  0E00               	movlw	0
  8040  001D92  6E11               	movwf	___flmul@b+2,c
  8041  001D94  0E00               	movlw	0
  8042  001D96  6E12               	movwf	___flmul@b+3,c
  8043  001D98                     l3617:
  8044  001D98  8E11               	bsf	___flmul@b+2,7,c
  8045  001D9A  D008               	goto	l3621
  8046  001D9C                     l3619:
  8047  001D9C  0E00               	movlw	0
  8048  001D9E  6E0F               	movwf	___flmul@b,c
  8049  001DA0  0E00               	movlw	0
  8050  001DA2  6E10               	movwf	___flmul@b+1,c
  8051  001DA4  0E00               	movlw	0
  8052  001DA6  6E11               	movwf	___flmul@b+2,c
  8053  001DA8  0E00               	movlw	0
  8054  001DAA  6E12               	movwf	___flmul@b+3,c
  8055  001DAC                     l3621:
  8056  001DAC  5016               	movf	___flmul@a+3,w,c
  8057  001DAE  0B80               	andlw	128
  8058  001DB0  1A1B               	xorwf	___flmul@sign,f,c
  8059  001DB2  5016               	movf	___flmul@a+3,w,c
  8060  001DB4  2416               	addwf	___flmul@a+3,w,c
  8061  001DB6  6E20               	movwf	___flmul@aexp,c
  8062  001DB8  BE15               	btfsc	___flmul@a+2,7,c
  8063  001DBA  8020               	bsf	___flmul@aexp,0,c
  8064  001DBC  5020               	movf	___flmul@aexp,w,c
  8065  001DBE  B4D8               	btfsc	status,2,c
  8066  001DC0  D00D               	goto	l3637
  8067  001DC2  2820               	incf	___flmul@aexp,w,c
  8068  001DC4  A4D8               	btfss	status,2,c
  8069  001DC6  D008               	goto	l3635
  8070  001DC8  0E00               	movlw	0
  8071  001DCA  6E13               	movwf	___flmul@a,c
  8072  001DCC  0E00               	movlw	0
  8073  001DCE  6E14               	movwf	___flmul@a+1,c
  8074  001DD0  0E00               	movlw	0
  8075  001DD2  6E15               	movwf	___flmul@a+2,c
  8076  001DD4  0E00               	movlw	0
  8077  001DD6  6E16               	movwf	___flmul@a+3,c
  8078  001DD8                     l3635:
  8079  001DD8  8E15               	bsf	___flmul@a+2,7,c
  8080  001DDA  D008               	goto	l1139
  8081  001DDC                     l3637:
  8082  001DDC  0E00               	movlw	0
  8083  001DDE  6E13               	movwf	___flmul@a,c
  8084  001DE0  0E00               	movlw	0
  8085  001DE2  6E14               	movwf	___flmul@a+1,c
  8086  001DE4  0E00               	movlw	0
  8087  001DE6  6E15               	movwf	___flmul@a+2,c
  8088  001DE8  0E00               	movlw	0
  8089  001DEA  6E16               	movwf	___flmul@a+3,c
  8090  001DEC                     l1139:
  8091  001DEC  5020               	movf	___flmul@aexp,w,c
  8092  001DEE  B4D8               	btfsc	status,2,c
  8093  001DF0  D003               	goto	u3730
  8094  001DF2  5021               	movf	___flmul@bexp,w,c
  8095  001DF4  A4D8               	btfss	status,2,c
  8096  001DF6  D009               	goto	l3645
  8097  001DF8                     u3730:
  8098  001DF8  0E00               	movlw	0
  8099  001DFA  6E0F               	movwf	?___flmul,c
  8100  001DFC  0E00               	movlw	0
  8101  001DFE  6E10               	movwf	?___flmul+1,c
  8102  001E00  0E00               	movlw	0
  8103  001E02  6E11               	movwf	?___flmul+2,c
  8104  001E04  0E00               	movlw	0
  8105  001E06  6E12               	movwf	?___flmul+3,c
  8106  001E08  0012               	return	
  8107  001E0A                     l3645:
  8108  001E0A  5015               	movf	___flmul@a+2,w,c
  8109  001E0C  020F               	mulwf	___flmul@b,c
  8110  001E0E  CFF3 F026          	movff	prodl,___flmul@temp
  8111  001E12  CFF4 F027          	movff	prodh,___flmul@temp+1
  8112  001E16  5026               	movf	___flmul@temp,w,c
  8113  001E18  6E1C               	movwf	___flmul@grs,c
  8114  001E1A  6A1D               	clrf	___flmul@grs+1,c
  8115  001E1C  6A1E               	clrf	___flmul@grs+2,c
  8116  001E1E  6A1F               	clrf	___flmul@grs+3,c
  8117  001E20  5027               	movf	___flmul@temp+1,w,c
  8118  001E22  6E22               	movwf	___flmul@prod,c
  8119  001E24  6A23               	clrf	___flmul@prod+1,c
  8120  001E26  6A24               	clrf	___flmul@prod+2,c
  8121  001E28  6A25               	clrf	___flmul@prod+3,c
  8122  001E2A  5014               	movf	___flmul@a+1,w,c
  8123  001E2C  0210               	mulwf	___flmul@b+1,c
  8124  001E2E  CFF3 F026          	movff	prodl,___flmul@temp
  8125  001E32  CFF4 F027          	movff	prodh,___flmul@temp+1
  8126  001E36  5026               	movf	___flmul@temp,w,c
  8127  001E38  261C               	addwf	___flmul@grs,f,c
  8128  001E3A  0E00               	movlw	0
  8129  001E3C  221D               	addwfc	___flmul@grs+1,f,c
  8130  001E3E  221E               	addwfc	___flmul@grs+2,f,c
  8131  001E40  221F               	addwfc	___flmul@grs+3,f,c
  8132  001E42  5027               	movf	___flmul@temp+1,w,c
  8133  001E44  2622               	addwf	___flmul@prod,f,c
  8134  001E46  0E00               	movlw	0
  8135  001E48  2223               	addwfc	___flmul@prod+1,f,c
  8136  001E4A  2224               	addwfc	___flmul@prod+2,f,c
  8137  001E4C  2225               	addwfc	___flmul@prod+3,f,c
  8138  001E4E  5013               	movf	___flmul@a,w,c
  8139  001E50  0211               	mulwf	___flmul@b+2,c
  8140  001E52  CFF3 F026          	movff	prodl,___flmul@temp
  8141  001E56  CFF4 F027          	movff	prodh,___flmul@temp+1
  8142  001E5A  5026               	movf	___flmul@temp,w,c
  8143  001E5C  261C               	addwf	___flmul@grs,f,c
  8144  001E5E  0E00               	movlw	0
  8145  001E60  221D               	addwfc	___flmul@grs+1,f,c
  8146  001E62  221E               	addwfc	___flmul@grs+2,f,c
  8147  001E64  221F               	addwfc	___flmul@grs+3,f,c
  8148  001E66  5027               	movf	___flmul@temp+1,w,c
  8149  001E68  2622               	addwf	___flmul@prod,f,c
  8150  001E6A  0E00               	movlw	0
  8151  001E6C  2223               	addwfc	___flmul@prod+1,f,c
  8152  001E6E  2224               	addwfc	___flmul@prod+2,f,c
  8153  001E70  2225               	addwfc	___flmul@prod+3,f,c
  8154  001E72  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8155  001E76  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8156  001E7A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8157  001E7E  6A1C               	clrf	___flmul@grs,c
  8158  001E80  5013               	movf	___flmul@a,w,c
  8159  001E82  0210               	mulwf	___flmul@b+1,c
  8160  001E84  CFF3 F026          	movff	prodl,___flmul@temp
  8161  001E88  CFF4 F027          	movff	prodh,___flmul@temp+1
  8162  001E8C  5026               	movf	___flmul@temp,w,c
  8163  001E8E  261C               	addwf	___flmul@grs,f,c
  8164  001E90  5027               	movf	___flmul@temp+1,w,c
  8165  001E92  221D               	addwfc	___flmul@grs+1,f,c
  8166  001E94  0E00               	movlw	0
  8167  001E96  221E               	addwfc	___flmul@grs+2,f,c
  8168  001E98  0E00               	movlw	0
  8169  001E9A  221F               	addwfc	___flmul@grs+3,f,c
  8170  001E9C  5014               	movf	___flmul@a+1,w,c
  8171  001E9E  020F               	mulwf	___flmul@b,c
  8172  001EA0  CFF3 F026          	movff	prodl,___flmul@temp
  8173  001EA4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8174  001EA8  5026               	movf	___flmul@temp,w,c
  8175  001EAA  261C               	addwf	___flmul@grs,f,c
  8176  001EAC  5027               	movf	___flmul@temp+1,w,c
  8177  001EAE  221D               	addwfc	___flmul@grs+1,f,c
  8178  001EB0  0E00               	movlw	0
  8179  001EB2  221E               	addwfc	___flmul@grs+2,f,c
  8180  001EB4  0E00               	movlw	0
  8181  001EB6  221F               	addwfc	___flmul@grs+3,f,c
  8182  001EB8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8183  001EBC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8184  001EC0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8185  001EC4  6A1C               	clrf	___flmul@grs,c
  8186  001EC6  5013               	movf	___flmul@a,w,c
  8187  001EC8  020F               	mulwf	___flmul@b,c
  8188  001ECA  CFF3 F026          	movff	prodl,___flmul@temp
  8189  001ECE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8190  001ED2  5026               	movf	___flmul@temp,w,c
  8191  001ED4  261C               	addwf	___flmul@grs,f,c
  8192  001ED6  5027               	movf	___flmul@temp+1,w,c
  8193  001ED8  221D               	addwfc	___flmul@grs+1,f,c
  8194  001EDA  0E00               	movlw	0
  8195  001EDC  221E               	addwfc	___flmul@grs+2,f,c
  8196  001EDE  0E00               	movlw	0
  8197  001EE0  221F               	addwfc	___flmul@grs+3,f,c
  8198  001EE2  5015               	movf	___flmul@a+2,w,c
  8199  001EE4  0210               	mulwf	___flmul@b+1,c
  8200  001EE6  CFF3 F026          	movff	prodl,___flmul@temp
  8201  001EEA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8202  001EEE  5026               	movf	___flmul@temp,w,c
  8203  001EF0  2622               	addwf	___flmul@prod,f,c
  8204  001EF2  5027               	movf	___flmul@temp+1,w,c
  8205  001EF4  2223               	addwfc	___flmul@prod+1,f,c
  8206  001EF6  0E00               	movlw	0
  8207  001EF8  2224               	addwfc	___flmul@prod+2,f,c
  8208  001EFA  0E00               	movlw	0
  8209  001EFC  2225               	addwfc	___flmul@prod+3,f,c
  8210  001EFE  5014               	movf	___flmul@a+1,w,c
  8211  001F00  0211               	mulwf	___flmul@b+2,c
  8212  001F02  CFF3 F026          	movff	prodl,___flmul@temp
  8213  001F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  8214  001F0A  5026               	movf	___flmul@temp,w,c
  8215  001F0C  2622               	addwf	___flmul@prod,f,c
  8216  001F0E  5027               	movf	___flmul@temp+1,w,c
  8217  001F10  2223               	addwfc	___flmul@prod+1,f,c
  8218  001F12  0E00               	movlw	0
  8219  001F14  2224               	addwfc	___flmul@prod+2,f,c
  8220  001F16  0E00               	movlw	0
  8221  001F18  2225               	addwfc	___flmul@prod+3,f,c
  8222  001F1A  5015               	movf	___flmul@a+2,w,c
  8223  001F1C  0211               	mulwf	___flmul@b+2,c
  8224  001F1E  CFF3 F026          	movff	prodl,___flmul@temp
  8225  001F22  CFF4 F027          	movff	prodh,___flmul@temp+1
  8226  001F26  5026               	movf	___flmul@temp,w,c
  8227  001F28  6E17               	movwf	??___flmul& (0+255),c
  8228  001F2A  5027               	movf	___flmul@temp+1,w,c
  8229  001F2C  6E18               	movwf	(??___flmul+1)& (0+255),c
  8230  001F2E  6A19               	clrf	(??___flmul+2)& (0+255),c
  8231  001F30  6A1A               	clrf	(??___flmul+3)& (0+255),c
  8232  001F32  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8233  001F36  C018  F019         	movff	??___flmul+1,??___flmul+2
  8234  001F3A  C017  F018         	movff	??___flmul,??___flmul+1
  8235  001F3E  6A17               	clrf	??___flmul,c
  8236  001F40  5017               	movf	??___flmul,w,c
  8237  001F42  2622               	addwf	___flmul@prod,f,c
  8238  001F44  5018               	movf	??___flmul+1,w,c
  8239  001F46  2223               	addwfc	___flmul@prod+1,f,c
  8240  001F48  5019               	movf	??___flmul+2,w,c
  8241  001F4A  2224               	addwfc	___flmul@prod+2,f,c
  8242  001F4C  501A               	movf	??___flmul+3,w,c
  8243  001F4E  2225               	addwfc	___flmul@prod+3,f,c
  8244  001F50  C01C  F017         	movff	___flmul@grs,??___flmul
  8245  001F54  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8246  001F58  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8247  001F5C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8248  001F60  0E19               	movlw	25
  8249  001F62  D005               	goto	u3740
  8250  001F64                     u3745:
  8251  001F64  90D8               	bcf	status,0,c
  8252  001F66  321A               	rrcf	??___flmul+3,f,c
  8253  001F68  3219               	rrcf	??___flmul+2,f,c
  8254  001F6A  3218               	rrcf	??___flmul+1,f,c
  8255  001F6C  3217               	rrcf	??___flmul,f,c
  8256  001F6E                     u3740:
  8257  001F6E  2EE8               	decfsz	wreg,f,c
  8258  001F70  D7F9               	goto	u3745
  8259  001F72  5017               	movf	??___flmul,w,c
  8260  001F74  2622               	addwf	___flmul@prod,f,c
  8261  001F76  5018               	movf	??___flmul+1,w,c
  8262  001F78  2223               	addwfc	___flmul@prod+1,f,c
  8263  001F7A  5019               	movf	??___flmul+2,w,c
  8264  001F7C  2224               	addwfc	___flmul@prod+2,f,c
  8265  001F7E  501A               	movf	??___flmul+3,w,c
  8266  001F80  2225               	addwfc	___flmul@prod+3,f,c
  8267  001F82  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8268  001F86  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8269  001F8A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8270  001F8E  6A1C               	clrf	___flmul@grs,c
  8271  001F90  5020               	movf	___flmul@aexp,w,c
  8272  001F92  C021  F017         	movff	___flmul@bexp,??___flmul
  8273  001F96  6A18               	clrf	(??___flmul+1)& (0+255),c
  8274  001F98  2617               	addwf	??___flmul,f,c
  8275  001F9A  0E00               	movlw	0
  8276  001F9C  2218               	addwfc	??___flmul+1,f,c
  8277  001F9E  0E82               	movlw	130
  8278  001FA0  2417               	addwf	??___flmul,w,c
  8279  001FA2  6E26               	movwf	___flmul@temp,c
  8280  001FA4  0EFF               	movlw	255
  8281  001FA6  2018               	addwfc	??___flmul+1,w,c
  8282  001FA8  6E27               	movwf	___flmul@temp+1,c
  8283  001FAA  D00F               	goto	l3693
  8284  001FAC                     l3687:
  8285  001FAC  90D8               	bcf	status,0,c
  8286  001FAE  3622               	rlcf	___flmul@prod,f,c
  8287  001FB0  3623               	rlcf	___flmul@prod+1,f,c
  8288  001FB2  3624               	rlcf	___flmul@prod+2,f,c
  8289  001FB4  3625               	rlcf	___flmul@prod+3,f,c
  8290  001FB6  BE1F               	btfsc	___flmul@grs+3,7,c
  8291  001FB8  8022               	bsf	___flmul@prod,0,c
  8292  001FBA  90D8               	bcf	status,0,c
  8293  001FBC  361C               	rlcf	___flmul@grs,f,c
  8294  001FBE  361D               	rlcf	___flmul@grs+1,f,c
  8295  001FC0  361E               	rlcf	___flmul@grs+2,f,c
  8296  001FC2  361F               	rlcf	___flmul@grs+3,f,c
  8297  001FC4  0626               	decf	___flmul@temp,f,c
  8298  001FC6  A0D8               	btfss	status,0,c
  8299  001FC8  0627               	decf	___flmul@temp+1,f,c
  8300  001FCA                     l3693:
  8301  001FCA  AE24               	btfss	___flmul@prod+2,7,c
  8302  001FCC  D7EF               	goto	l3687
  8303  001FCE  0E00               	movlw	0
  8304  001FD0  6E20               	movwf	___flmul@aexp,c
  8305  001FD2  AE1F               	btfss	___flmul@grs+3,7,c
  8306  001FD4  D017               	goto	l1148
  8307  001FD6  0EFF               	movlw	255
  8308  001FD8  141C               	andwf	___flmul@grs,w,c
  8309  001FDA  6E17               	movwf	??___flmul& (0+255),c
  8310  001FDC  0EFF               	movlw	255
  8311  001FDE  141D               	andwf	___flmul@grs+1,w,c
  8312  001FE0  6E18               	movwf	(??___flmul+1)& (0+255),c
  8313  001FE2  0EFF               	movlw	255
  8314  001FE4  141E               	andwf	___flmul@grs+2,w,c
  8315  001FE6  6E19               	movwf	(??___flmul+2)& (0+255),c
  8316  001FE8  0E7F               	movlw	127
  8317  001FEA  141F               	andwf	___flmul@grs+3,w,c
  8318  001FEC  6E1A               	movwf	(??___flmul+3)& (0+255),c
  8319  001FEE  5017               	movf	??___flmul,w,c
  8320  001FF0  1018               	iorwf	??___flmul+1,w,c
  8321  001FF2  1019               	iorwf	??___flmul+2,w,c
  8322  001FF4  101A               	iorwf	??___flmul+3,w,c
  8323  001FF6  B4D8               	btfsc	status,2,c
  8324  001FF8  D003               	goto	l1149
  8325  001FFA                     u3780:
  8326  001FFA  0E01               	movlw	1
  8327  001FFC  6E20               	movwf	___flmul@aexp,c
  8328  001FFE  D002               	goto	l1148
  8329  002000                     l1149:
  8330  002000  B022               	btfsc	___flmul@prod,0,c
  8331  002002  D7FB               	goto	u3780
  8332  002004                     l1148:
  8333  002004  5020               	movf	___flmul@aexp,w,c
  8334  002006  B4D8               	btfsc	status,2,c
  8335  002008  D01F               	goto	l3713
  8336  00200A  0E01               	movlw	1
  8337  00200C  2622               	addwf	___flmul@prod,f,c
  8338  00200E  0E00               	movlw	0
  8339  002010  2223               	addwfc	___flmul@prod+1,f,c
  8340  002012  2224               	addwfc	___flmul@prod+2,f,c
  8341  002014  2225               	addwfc	___flmul@prod+3,f,c
  8342  002016  A025               	btfss	___flmul@prod+3,0,c
  8343  002018  D017               	goto	l3713
  8344  00201A  C022  F017         	movff	___flmul@prod,??___flmul
  8345  00201E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8346  002022  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8347  002026  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8348  00202A  341A               	rlcf	??___flmul+3,w,c
  8349  00202C  321A               	rrcf	??___flmul+3,f,c
  8350  00202E  3219               	rrcf	??___flmul+2,f,c
  8351  002030  3218               	rrcf	??___flmul+1,f,c
  8352  002032  3217               	rrcf	??___flmul,f,c
  8353  002034  C017  F022         	movff	??___flmul,___flmul@prod
  8354  002038  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8355  00203C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8356  002040  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8357  002044  4A26               	infsnz	___flmul@temp,f,c
  8358  002046  2A27               	incf	___flmul@temp+1,f,c
  8359  002048                     l3713:
  8360  002048  BE27               	btfsc	___flmul@temp+1,7,c
  8361  00204A  D00D               	goto	l3717
  8362  00204C  5027               	movf	___flmul@temp+1,w,c
  8363  00204E  E103               	bnz	u3820
  8364  002050  2826               	incf	___flmul@temp,w,c
  8365  002052  A0D8               	btfss	status,0,c
  8366  002054  D008               	goto	l3717
  8367  002056                     u3820:
  8368  002056  0E00               	movlw	0
  8369  002058  6E22               	movwf	___flmul@prod,c
  8370  00205A  0E00               	movlw	0
  8371  00205C  6E23               	movwf	___flmul@prod+1,c
  8372  00205E  0E80               	movlw	128
  8373  002060  6E24               	movwf	___flmul@prod+2,c
  8374  002062  0E7F               	movlw	127
  8375  002064  D020               	goto	L12
  8376  002066                     l3717:
  8377  002066  BE27               	btfsc	___flmul@temp+1,7,c
  8378  002068  D005               	goto	u3830
  8379  00206A  5027               	movf	___flmul@temp+1,w,c
  8380  00206C  E10E               	bnz	l1156
  8381  00206E  0426               	decf	___flmul@temp,w,c
  8382  002070  B0D8               	btfsc	status,0,c
  8383  002072  D00B               	goto	l1156
  8384  002074                     u3830:
  8385  002074  0E00               	movlw	0
  8386  002076  6E22               	movwf	___flmul@prod,c
  8387  002078  0E00               	movlw	0
  8388  00207A  6E23               	movwf	___flmul@prod+1,c
  8389  00207C  0E00               	movlw	0
  8390  00207E  6E24               	movwf	___flmul@prod+2,c
  8391  002080  0E00               	movlw	0
  8392  002082  6E25               	movwf	___flmul@prod+3,c
  8393  002084  0E00               	movlw	0
  8394  002086  6E1B               	movwf	___flmul@sign,c
  8395  002088  D00F               	goto	l3729
  8396  00208A                     l1156:
  8397  00208A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8398  00208E  0EFF               	movlw	255
  8399  002090  1622               	andwf	___flmul@prod,f,c
  8400  002092  0EFF               	movlw	255
  8401  002094  1623               	andwf	___flmul@prod+1,f,c
  8402  002096  0E7F               	movlw	127
  8403  002098  1624               	andwf	___flmul@prod+2,f,c
  8404  00209A  0E00               	movlw	0
  8405  00209C  1625               	andwf	___flmul@prod+3,f,c
  8406  00209E  B021               	btfsc	___flmul@bexp,0,c
  8407  0020A0  8E24               	bsf	___flmul@prod+2,7,c
  8408  0020A2  90D8               	bcf	status,0,c
  8409  0020A4  3021               	rrcf	___flmul@bexp,w,c
  8410  0020A6                     L12:
  8411  0020A6  6E25               	movwf	___flmul@prod+3,c
  8412  0020A8                     l3729:
  8413  0020A8  501B               	movf	___flmul@sign,w,c
  8414  0020AA  1225               	iorwf	___flmul@prod+3,f,c
  8415  0020AC  C022  F00F         	movff	___flmul@prod,?___flmul
  8416  0020B0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8417  0020B4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8418  0020B8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8419  0020BC  0012               	return		;funcret
  8420  0020BE                     __end_of___flmul:
  8421                           	opt callstack 0
  8422                           
  8423 ;; *************** function _pwm_init *****************
  8424 ;; Defined at:
  8425 ;;		line 125 in file "mppt.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  Uin             4   51[COMRAM] float 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;		None
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, status,2, status,0, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;Total ram usage:        4 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:    1
  8446 ;; This function calls:
  8447 ;;		___flge
  8448 ;; This function is called by:
  8449 ;;		_main
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           	psect	text39
  8454  003E62                     __ptext39:
  8455                           	opt callstack 0
  8456  003E62                     _pwm_init:
  8457                           	opt callstack 29
  8458                           
  8459                           ;mppt.c: 125: void pwm_init(float Uin);mppt.c: 126: {;mppt.c: 127:     if(Uin>12)
  8460                           
  8461                           ;incstack = 0
  8462  003E62  0E00               	movlw	0
  8463  003E64  6E28               	movwf	___flge@ff1,c
  8464  003E66  0E00               	movlw	0
  8465  003E68  6E29               	movwf	___flge@ff1+1,c
  8466  003E6A  0E40               	movlw	64
  8467  003E6C  6E2A               	movwf	___flge@ff1+2,c
  8468  003E6E  0E41               	movlw	65
  8469  003E70  6E2B               	movwf	___flge@ff1+3,c
  8470  003E72  C034  F02C         	movff	pwm_init@Uin,___flge@ff2
  8471  003E76  C035  F02D         	movff	pwm_init@Uin+1,___flge@ff2+1
  8472  003E7A  C036  F02E         	movff	pwm_init@Uin+2,___flge@ff2+2
  8473  003E7E  C037  F02F         	movff	pwm_init@Uin+3,___flge@ff2+3
  8474  003E82  ECF2  F017         	call	___flge	;wreg free
  8475  003E86  B0D8               	btfsc	status,0,c
  8476  003E88  0012               	return	
  8477                           
  8478                           ;mppt.c: 128:     {;mppt.c: 129:         boost_pwm=0;
  8479  003E8A  0E00               	movlw	0
  8480  003E8C  0100               	movlb	0	; () banked
  8481  003E8E  6FEF               	movwf	(_boost_pwm+1)& (0+255),b
  8482  003E90  0E00               	movlw	0
  8483  003E92  6FEE               	movwf	_boost_pwm& (0+255),b
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;mppt.c: 130:         CCPR2L=boost_pwm;
  8487  003E94  0E00               	movlw	0
  8488  003E96  6E67               	movwf	3943,c	;volatile
  8489                           
  8490                           ;mppt.c: 132:     }
  8491  003E98  0012               	return		;funcret
  8492  003E9A                     __end_of_pwm_init:
  8493                           	opt callstack 0
  8494                           
  8495 ;; *************** function ___flge *****************
  8496 ;; Defined at:
  8497 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  ff1             4   39[COMRAM] void 
  8500 ;;  ff2             4   43[COMRAM] void 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;		None               void
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8512 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;Total ram usage:       12 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_main
  8522 ;;		_read_Iout
  8523 ;;		_read_Uout
  8524 ;;		_pwm_init
  8525 ;;		_efgtoa
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text40
  8530  002FE4                     __ptext40:
  8531                           	opt callstack 0
  8532  002FE4                     ___flge:
  8533                           	opt callstack 25
  8534                           
  8535                           ;incstack = 0
  8536  002FE4  0E00               	movlw	0
  8537  002FE6  1428               	andwf	___flge@ff1,w,c
  8538  002FE8  6E30               	movwf	??___flge& (0+255),c
  8539  002FEA  0E00               	movlw	0
  8540  002FEC  1429               	andwf	___flge@ff1+1,w,c
  8541  002FEE  6E31               	movwf	(??___flge+1)& (0+255),c
  8542  002FF0  0E80               	movlw	128
  8543  002FF2  142A               	andwf	___flge@ff1+2,w,c
  8544  002FF4  6E32               	movwf	(??___flge+2)& (0+255),c
  8545  002FF6  0E7F               	movlw	127
  8546  002FF8  142B               	andwf	___flge@ff1+3,w,c
  8547  002FFA  6E33               	movwf	(??___flge+3)& (0+255),c
  8548  002FFC  5030               	movf	??___flge,w,c
  8549  002FFE  1031               	iorwf	??___flge+1,w,c
  8550  003000  1032               	iorwf	??___flge+2,w,c
  8551  003002  1033               	iorwf	??___flge+3,w,c
  8552  003004  A4D8               	btfss	status,2,c
  8553  003006  D008               	goto	l3841
  8554  003008  0E00               	movlw	0
  8555  00300A  6E28               	movwf	___flge@ff1,c
  8556  00300C  0E00               	movlw	0
  8557  00300E  6E29               	movwf	___flge@ff1+1,c
  8558  003010  0E00               	movlw	0
  8559  003012  6E2A               	movwf	___flge@ff1+2,c
  8560  003014  0E00               	movlw	0
  8561  003016  6E2B               	movwf	___flge@ff1+3,c
  8562  003018                     l3841:
  8563  003018  0E00               	movlw	0
  8564  00301A  142C               	andwf	___flge@ff2,w,c
  8565  00301C  6E30               	movwf	??___flge& (0+255),c
  8566  00301E  0E00               	movlw	0
  8567  003020  142D               	andwf	___flge@ff2+1,w,c
  8568  003022  6E31               	movwf	(??___flge+1)& (0+255),c
  8569  003024  0E80               	movlw	128
  8570  003026  142E               	andwf	___flge@ff2+2,w,c
  8571  003028  6E32               	movwf	(??___flge+2)& (0+255),c
  8572  00302A  0E7F               	movlw	127
  8573  00302C  142F               	andwf	___flge@ff2+3,w,c
  8574  00302E  6E33               	movwf	(??___flge+3)& (0+255),c
  8575  003030  5030               	movf	??___flge,w,c
  8576  003032  1031               	iorwf	??___flge+1,w,c
  8577  003034  1032               	iorwf	??___flge+2,w,c
  8578  003036  1033               	iorwf	??___flge+3,w,c
  8579  003038  A4D8               	btfss	status,2,c
  8580  00303A  D008               	goto	l3845
  8581  00303C  0E00               	movlw	0
  8582  00303E  6E2C               	movwf	___flge@ff2,c
  8583  003040  0E00               	movlw	0
  8584  003042  6E2D               	movwf	___flge@ff2+1,c
  8585  003044  0E00               	movlw	0
  8586  003046  6E2E               	movwf	___flge@ff2+2,c
  8587  003048  0E00               	movlw	0
  8588  00304A  6E2F               	movwf	___flge@ff2+3,c
  8589  00304C                     l3845:
  8590  00304C  AE2B               	btfss	___flge@ff1+3,7,c
  8591  00304E  D009               	goto	l3849
  8592  003050  6C28               	negf	___flge@ff1,c
  8593  003052  1E29               	comf	___flge@ff1+1,f,c
  8594  003054  B0D8               	btfsc	status,0,c
  8595  003056  2A29               	incf	___flge@ff1+1,f,c
  8596  003058  1E2A               	comf	___flge@ff1+2,f,c
  8597  00305A  B0D8               	btfsc	status,0,c
  8598  00305C  2A2A               	incf	___flge@ff1+2,f,c
  8599  00305E  0E80               	movlw	128
  8600  003060  562B               	subfwb	___flge@ff1+3,f,c
  8601  003062                     l3849:
  8602  003062  AE2F               	btfss	___flge@ff2+3,7,c
  8603  003064  D009               	goto	l790
  8604  003066  6C2C               	negf	___flge@ff2,c
  8605  003068  1E2D               	comf	___flge@ff2+1,f,c
  8606  00306A  B0D8               	btfsc	status,0,c
  8607  00306C  2A2D               	incf	___flge@ff2+1,f,c
  8608  00306E  1E2E               	comf	___flge@ff2+2,f,c
  8609  003070  B0D8               	btfsc	status,0,c
  8610  003072  2A2E               	incf	___flge@ff2+2,f,c
  8611  003074  0E80               	movlw	128
  8612  003076  562F               	subfwb	___flge@ff2+3,f,c
  8613  003078                     l790:
  8614  003078  0E00               	movlw	0
  8615  00307A  1A28               	xorwf	___flge@ff1,f,c
  8616  00307C  0E00               	movlw	0
  8617  00307E  1A29               	xorwf	___flge@ff1+1,f,c
  8618  003080  0E00               	movlw	0
  8619  003082  1A2A               	xorwf	___flge@ff1+2,f,c
  8620  003084  0E80               	movlw	128
  8621  003086  1A2B               	xorwf	___flge@ff1+3,f,c
  8622  003088  0E00               	movlw	0
  8623  00308A  1A2C               	xorwf	___flge@ff2,f,c
  8624  00308C  0E00               	movlw	0
  8625  00308E  1A2D               	xorwf	___flge@ff2+1,f,c
  8626  003090  0E00               	movlw	0
  8627  003092  1A2E               	xorwf	___flge@ff2+2,f,c
  8628  003094  0E80               	movlw	128
  8629  003096  1A2F               	xorwf	___flge@ff2+3,f,c
  8630  003098  502C               	movf	___flge@ff2,w,c
  8631  00309A  5C28               	subwf	___flge@ff1,w,c
  8632  00309C  502D               	movf	___flge@ff2+1,w,c
  8633  00309E  5829               	subwfb	___flge@ff1+1,w,c
  8634  0030A0  502E               	movf	___flge@ff2+2,w,c
  8635  0030A2  582A               	subwfb	___flge@ff1+2,w,c
  8636  0030A4  502F               	movf	___flge@ff2+3,w,c
  8637  0030A6  582B               	subwfb	___flge@ff1+3,w,c
  8638  0030A8  B0D8               	btfsc	status,0,c
  8639  0030AA  D002               	goto	l3855
  8640  0030AC  90D8               	bcf	status,0,c
  8641  0030AE  0012               	return	
  8642  0030B0                     l3855:
  8643  0030B0  80D8               	bsf	status,0,c
  8644  0030B2  0012               	return		;funcret
  8645  0030B4                     __end_of___flge:
  8646                           	opt callstack 0
  8647                           
  8648 ;; *************** function _pwm_config *****************
  8649 ;; Defined at:
  8650 ;;		line 44 in file "config.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_main
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text41
  8678  003FBC                     __ptext41:
  8679                           	opt callstack 0
  8680  003FBC                     _pwm_config:
  8681                           	opt callstack 30
  8682                           
  8683                           ;config.c: 46:     CCPTMRS0=0b00000000;
  8684                           
  8685                           ;incstack = 0
  8686  003FBC  0E00               	movlw	0
  8687  003FBE  010F               	movlb	15	; () banked
  8688  003FC0  6F49               	movwf	73,b	;volatile
  8689                           
  8690                           ;config.c: 47:     CCP2CON=0b00001100;
  8691  003FC2  0E0C               	movlw	12
  8692  003FC4  6E66               	movwf	3942,c	;volatile
  8693                           
  8694                           ;config.c: 48:     CCP1CON=0b00001100;
  8695  003FC6  0E0C               	movlw	12
  8696  003FC8  6EBD               	movwf	4029,c	;volatile
  8697                           
  8698                           ;config.c: 49:     T2CON=0b01111101;
  8699  003FCA  0E7D               	movlw	125
  8700  003FCC  6EBA               	movwf	4026,c	;volatile
  8701                           
  8702                           ;config.c: 50:     PR2=160;
  8703  003FCE  0EA0               	movlw	160
  8704  003FD0  6EBB               	movwf	4027,c	;volatile
  8705                           
  8706                           ; BSR set to: 15
  8707  003FD2  0012               	return		;funcret
  8708  003FD4                     __end_of_pwm_config:
  8709                           	opt callstack 0
  8710                           
  8711 ;; *************** function _init_io_display *****************
  8712 ;; Defined at:
  8713 ;;		line 62 in file "config.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;Total ram usage:        2 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:    5
  8734 ;; This function calls:
  8735 ;;		_Cursor_Off
  8736 ;;		_I2C_Master_Init
  8737 ;;		_Lcd_Clear
  8738 ;;		_Lcd_Init
  8739 ;;		_Lcd_Set_Cursor
  8740 ;;		_Lcd_Write_String
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text42
  8747  003940                     __ptext42:
  8748                           	opt callstack 0
  8749  003940                     _init_io_display:
  8750                           	opt callstack 25
  8751                           
  8752                           ;config.c: 64:     TRISCbits.TRISC3=1;
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;incstack = 0
  8756  003940  8694               	bsf	3988,3,c	;volatile
  8757                           
  8758                           ;config.c: 65:     TRISCbits.TRISC4=1;
  8759  003942  8894               	bsf	3988,4,c	;volatile
  8760                           
  8761                           ;config.c: 66:     I2C_Master_Init(100000);
  8762  003944  0EA0               	movlw	160
  8763  003946  6E0E               	movwf	I2C_Master_Init@c,c
  8764  003948  0E86               	movlw	134
  8765  00394A  6E0F               	movwf	I2C_Master_Init@c+1,c
  8766  00394C  0E01               	movlw	1
  8767  00394E  6E10               	movwf	I2C_Master_Init@c+2,c
  8768  003950  0E00               	movlw	0
  8769  003952  6E11               	movwf	I2C_Master_Init@c+3,c
  8770  003954  EC36  F01D         	call	_I2C_Master_Init	;wreg free
  8771                           
  8772                           ;config.c: 67:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8773  003958  0E09               	movlw	9
  8774  00395A  6E17               	movwf	(??_init_io_display+1)& (0+255),c
  8775  00395C  0E1E               	movlw	30
  8776  00395E  6E16               	movwf	??_init_io_display& (0+255),c
  8777  003960  0EE4               	movlw	228
  8778  003962                     u5477:
  8779  003962  2EE8               	decfsz	wreg,f,c
  8780  003964  D7FE               	bra	u5477
  8781  003966  2E16               	decfsz	??_init_io_display& (0+255),f,c
  8782  003968  D7FC               	bra	u5477
  8783  00396A  2E17               	decfsz	(??_init_io_display+1)& (0+255),f,c
  8784  00396C  D7FA               	bra	u5477
  8785  00396E  D000               	nop2	
  8786                           
  8787                           ;config.c: 68:     Lcd_Init();
  8788  003970  ECEF  F01B         	call	_Lcd_Init	;wreg free
  8789                           
  8790                           ;config.c: 69:     Lcd_Clear();
  8791  003974  ECF3  F01F         	call	_Lcd_Clear	;wreg free
  8792                           
  8793                           ;config.c: 70:     Cursor_Off();
  8794  003978  ECFA  F01F         	call	_Cursor_Off	;wreg free
  8795                           
  8796                           ;config.c: 71:     Lcd_Set_Cursor(1,1);
  8797  00397C  0E01               	movlw	1
  8798  00397E  6E0B               	movwf	Lcd_Set_Cursor@b,c
  8799  003980  0E01               	movlw	1
  8800  003982  EC61  F01E         	call	_Lcd_Set_Cursor
  8801                           
  8802                           ;config.c: 72:     Lcd_Write_String("Test");
  8803  003986  0E20               	movlw	low STR_1
  8804  003988  6E08               	movwf	Lcd_Write_String@a,c
  8805  00398A  0E10               	movlw	high STR_1
  8806  00398C  6E09               	movwf	Lcd_Write_String@a+1,c
  8807  00398E  EC2D  F01C         	call	_Lcd_Write_String	;wreg free
  8808                           
  8809                           ;config.c: 73:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8810  003992  0E09               	movlw	9
  8811  003994  6E17               	movwf	(??_init_io_display+1)& (0+255),c
  8812  003996  0E1E               	movlw	30
  8813  003998  6E16               	movwf	??_init_io_display& (0+255),c
  8814  00399A  0EE4               	movlw	228
  8815  00399C                     u5487:
  8816  00399C  2EE8               	decfsz	wreg,f,c
  8817  00399E  D7FE               	bra	u5487
  8818  0039A0  2E16               	decfsz	??_init_io_display& (0+255),f,c
  8819  0039A2  D7FC               	bra	u5487
  8820  0039A4  2E17               	decfsz	(??_init_io_display+1)& (0+255),f,c
  8821  0039A6  D7FA               	bra	u5487
  8822  0039A8  D000               	nop2	
  8823  0039AA  0012               	return		;funcret
  8824  0039AC                     __end_of_init_io_display:
  8825                           	opt callstack 0
  8826                           
  8827 ;; *************** function _Lcd_Write_String *****************
  8828 ;; Defined at:
  8829 ;;		line 109 in file "lcd_i2c.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  a               2    7[COMRAM] PTR unsigned char 
  8832 ;;		 -> STR_13(3), str_P(8), STR_11(3), STR_9(4), 
  8833 ;;		 -> str_V(8), STR_7(3), STR_6(13), STR_5(3), 
  8834 ;;		 -> str_A(8), STR_3(3), STR_2(13), STR_1(5), 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  i               2   11[COMRAM] int 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;Total ram usage:        6 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:    4
  8853 ;; This function calls:
  8854 ;;		_Lcd_Write_Char
  8855 ;; This function is called by:
  8856 ;;		_init_io_display
  8857 ;;		_read_Iout
  8858 ;;		_write_Iout
  8859 ;;		_read_Uout
  8860 ;;		_write_Uout
  8861 ;;		_write_Uin
  8862 ;;		_write_Power
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text43
  8867  00385A                     __ptext43:
  8868                           	opt callstack 0
  8869  00385A                     _Lcd_Write_String:
  8870                           	opt callstack 25
  8871                           
  8872                           ;lcd_i2c.c: 109: void Lcd_Write_String(char *a);lcd_i2c.c: 110: {;lcd_i2c.c: 111:  int i
      +                          ;;lcd_i2c.c: 112:  for(i=0;a[i]!='\0';i++)
  8873                           
  8874                           ;incstack = 0
  8875  00385A  0E00               	movlw	0
  8876  00385C  6E0D               	movwf	Lcd_Write_String@i+1,c
  8877  00385E  0E00               	movlw	0
  8878  003860  6E0C               	movwf	Lcd_Write_String@i,c
  8879  003862  D01B               	goto	l4501
  8880  003864                     l4497:
  8881                           
  8882                           ;lcd_i2c.c: 113:     Lcd_Write_Char(a[i]);
  8883  003864  500C               	movf	Lcd_Write_String@i,w,c
  8884  003866  2408               	addwf	Lcd_Write_String@a,w,c
  8885  003868  6E0A               	movwf	??_Lcd_Write_String& (0+255),c
  8886  00386A  500D               	movf	Lcd_Write_String@i+1,w,c
  8887  00386C  2009               	addwfc	Lcd_Write_String@a+1,w,c
  8888  00386E  6E0B               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  8889  003870  C00A  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8890  003874  C00B  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8891  003878  0E00               	movlw	low (__smallconst shr (0+16))
  8892  00387A  6EF8               	movwf	tblptru,c
  8893  00387C  0E0F               	movlw	(high __ramtop+-1)
  8894  00387E  64F7               	cpfsgt	tblptrh,c
  8895  003880  D003               	bra	u5007
  8896  003882  0008               	tblrd		*
  8897  003884  50F5               	movf	tablat,w,c
  8898  003886  D005               	bra	u5000
  8899  003888                     u5007:
  8900  003888  CFF6 FFE9          	movff	tblptrl,fsr0l
  8901  00388C  CFF7 FFEA          	movff	tblptrh,fsr0h
  8902  003890  50EF               	movf	indf0,w,c
  8903  003892                     u5000:
  8904  003892  EC63  F01D         	call	_Lcd_Write_Char
  8905  003896  4A0C               	infsnz	Lcd_Write_String@i,f,c
  8906  003898  2A0D               	incf	Lcd_Write_String@i+1,f,c
  8907  00389A                     l4501:
  8908  00389A  500C               	movf	Lcd_Write_String@i,w,c
  8909  00389C  2408               	addwf	Lcd_Write_String@a,w,c
  8910  00389E  6E0A               	movwf	??_Lcd_Write_String& (0+255),c
  8911  0038A0  500D               	movf	Lcd_Write_String@i+1,w,c
  8912  0038A2  2009               	addwfc	Lcd_Write_String@a+1,w,c
  8913  0038A4  6E0B               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  8914  0038A6  C00A  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8915  0038AA  C00B  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8916  0038AE  0E00               	movlw	low (__smallconst shr (0+16))
  8917  0038B0  6EF8               	movwf	tblptru,c
  8918  0038B2  0E0F               	movlw	(high __ramtop+-1)
  8919  0038B4  64F7               	cpfsgt	tblptrh,c
  8920  0038B6  D003               	bra	u5017
  8921  0038B8  0008               	tblrd		*
  8922  0038BA  50F5               	movf	tablat,w,c
  8923  0038BC  D005               	bra	u5010
  8924  0038BE                     u5017:
  8925  0038BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8926  0038C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8927  0038C6  50EF               	movf	indf0,w,c
  8928  0038C8                     u5010:
  8929  0038C8  0900               	iorlw	0
  8930  0038CA  B4D8               	btfsc	status,2,c
  8931  0038CC  0012               	return	
  8932  0038CE  D7CA               	goto	l4497
  8933  0038D0                     __end_of_Lcd_Write_String:
  8934                           	opt callstack 0
  8935                           
  8936 ;; *************** function _Lcd_Write_Char *****************
  8937 ;; Defined at:
  8938 ;;		line 85 in file "lcd_i2c.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;  a               1    wreg     unsigned char 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  a               1    4[COMRAM] unsigned char 
  8943 ;;  temp            1    6[COMRAM] unsigned char 
  8944 ;;  y               1    5[COMRAM] unsigned char 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0, cstack
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;Total ram usage:        3 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    3
  8961 ;; This function calls:
  8962 ;;		_Lcd_Port
  8963 ;; This function is called by:
  8964 ;;		_Lcd_Write_String
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text44
  8969  003AC6                     __ptext44:
  8970                           	opt callstack 0
  8971  003AC6                     _Lcd_Write_Char:
  8972                           	opt callstack 25
  8973                           
  8974                           ;incstack = 0
  8975                           ;Lcd_Write_Char@a stored from wreg
  8976  003AC6  6E05               	movwf	Lcd_Write_Char@a,c
  8977                           
  8978                           ;lcd_i2c.c: 85: void Lcd_Write_Char(char a);lcd_i2c.c: 86: {;lcd_i2c.c: 87:    char temp
      +                          ,y;;lcd_i2c.c: 88:    temp = a&0x0F;
  8979  003AC8  5005               	movf	Lcd_Write_Char@a,w,c
  8980  003ACA  0B0F               	andlw	15
  8981  003ACC  6E07               	movwf	Lcd_Write_Char@temp,c
  8982                           
  8983                           ;lcd_i2c.c: 89:    temp=temp<<4;
  8984  003ACE  3807               	swapf	Lcd_Write_Char@temp,w,c
  8985  003AD0  0BF0               	andlw	240
  8986  003AD2  6E07               	movwf	Lcd_Write_Char@temp,c
  8987                           
  8988                           ;lcd_i2c.c: 90:    y = a&0xF0;
  8989  003AD4  5005               	movf	Lcd_Write_Char@a,w,c
  8990  003AD6  0BF0               	andlw	240
  8991  003AD8  6E06               	movwf	Lcd_Write_Char@y,c
  8992                           
  8993                           ;lcd_i2c.c: 93:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
  8994  003ADA  0E01               	movlw	1
  8995  003ADC  ECCD  F01F         	call	_Lcd_Port
  8996                           
  8997                           ;lcd_i2c.c: 94:    Lcd_Port(y);
  8998  003AE0  5006               	movf	Lcd_Write_Char@y,w,c
  8999  003AE2  ECCD  F01F         	call	_Lcd_Port
  9000                           
  9001                           ;lcd_i2c.c: 96:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
  9002  003AE6  5006               	movf	Lcd_Write_Char@y,w,c
  9003  003AE8  0905               	iorlw	5
  9004  003AEA  ECCD  F01F         	call	_Lcd_Port
  9005                           
  9006                           ;lcd_i2c.c: 97:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  9007  003AEE  0ED5               	movlw	213
  9008  003AF0                     u5497:
  9009  003AF0  2EE8               	decfsz	wreg,f,c
  9010  003AF2  D7FE               	bra	u5497
  9011  003AF4  F000               	nop	
  9012                           
  9013                           ;lcd_i2c.c: 99:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
  9014  003AF6  5006               	movf	Lcd_Write_Char@y,w,c
  9015  003AF8  0901               	iorlw	1
  9016  003AFA  ECCD  F01F         	call	_Lcd_Port
  9017                           
  9018                           ;lcd_i2c.c: 100:    Lcd_Port(temp);
  9019  003AFE  5007               	movf	Lcd_Write_Char@temp,w,c
  9020  003B00  ECCD  F01F         	call	_Lcd_Port
  9021                           
  9022                           ;lcd_i2c.c: 103:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
  9023  003B04  5007               	movf	Lcd_Write_Char@temp,w,c
  9024  003B06  0905               	iorlw	5
  9025  003B08  ECCD  F01F         	call	_Lcd_Port
  9026                           
  9027                           ;lcd_i2c.c: 104:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  9028  003B0C  0ED5               	movlw	213
  9029  003B0E                     u5507:
  9030  003B0E  2EE8               	decfsz	wreg,f,c
  9031  003B10  D7FE               	bra	u5507
  9032  003B12  F000               	nop	
  9033                           
  9034                           ;lcd_i2c.c: 106:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
  9035  003B14  5007               	movf	Lcd_Write_Char@temp,w,c
  9036  003B16  0901               	iorlw	1
  9037  003B18  ECCD  F01F         	call	_Lcd_Port
  9038  003B1C  0012               	return		;funcret
  9039  003B1E                     __end_of_Lcd_Write_Char:
  9040                           	opt callstack 0
  9041                           
  9042 ;; *************** function _Lcd_Set_Cursor *****************
  9043 ;; Defined at:
  9044 ;;		line 45 in file "lcd_i2c.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  a               1    wreg     unsigned char 
  9047 ;;  b               1   10[COMRAM] unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  a               1   11[COMRAM] unsigned char 
  9050 ;;  temp            1   14[COMRAM] unsigned char 
  9051 ;;  y               1   13[COMRAM] unsigned char 
  9052 ;;  z               1   12[COMRAM] unsigned char 
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9062 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;Total ram usage:        5 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    4
  9069 ;; This function calls:
  9070 ;;		_Lcd_Cmd
  9071 ;; This function is called by:
  9072 ;;		_init_io_display
  9073 ;;		_read_Iout
  9074 ;;		_write_Iout
  9075 ;;		_read_Uout
  9076 ;;		_write_Uout
  9077 ;;		_write_Uin
  9078 ;;		_write_Power
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           	psect	text45
  9083  003CC2                     __ptext45:
  9084                           	opt callstack 0
  9085  003CC2                     _Lcd_Set_Cursor:
  9086                           	opt callstack 25
  9087                           
  9088                           ;incstack = 0
  9089                           ;Lcd_Set_Cursor@a stored from wreg
  9090  003CC2  6E0C               	movwf	Lcd_Set_Cursor@a,c
  9091                           
  9092                           ;lcd_i2c.c: 45: void Lcd_Set_Cursor(char a, char b);lcd_i2c.c: 46: {;lcd_i2c.c: 47:  cha
      +                          r temp,z,y;;lcd_i2c.c: 48:  if(a == 1)
  9093  003CC4  040C               	decf	Lcd_Set_Cursor@a,w,c
  9094  003CC6  A4D8               	btfss	status,2,c
  9095  003CC8  D010               	goto	l4487
  9096                           
  9097                           ;lcd_i2c.c: 49:  {;lcd_i2c.c: 50:    temp = 0x80 + b - 1;
  9098  003CCA  500B               	movf	Lcd_Set_Cursor@b,w,c
  9099  003CCC  0F7F               	addlw	127
  9100  003CCE  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  9101                           
  9102                           ;lcd_i2c.c: 51:   z = temp>>4;
  9103  003CD0  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  9104  003CD2  0B0F               	andlw	15
  9105  003CD4  6E0D               	movwf	Lcd_Set_Cursor@z,c
  9106                           
  9107                           ;lcd_i2c.c: 52:   y = temp & 0x0F;
  9108  003CD6  500F               	movf	Lcd_Set_Cursor@temp,w,c
  9109  003CD8  0B0F               	andlw	15
  9110  003CDA  6E0E               	movwf	Lcd_Set_Cursor@y,c
  9111                           
  9112                           ;lcd_i2c.c: 53:   Lcd_Cmd(z);
  9113  003CDC  500D               	movf	Lcd_Set_Cursor@z,w,c
  9114  003CDE  ECAF  F01E         	call	_Lcd_Cmd
  9115                           
  9116                           ;lcd_i2c.c: 54:   Lcd_Cmd(y);
  9117  003CE2  500E               	movf	Lcd_Set_Cursor@y,w,c
  9118  003CE4  ECAF  F01E         	call	_Lcd_Cmd
  9119                           
  9120                           ;lcd_i2c.c: 55:  }
  9121  003CE8  0012               	return	
  9122  003CEA                     l4487:
  9123  003CEA  0E02               	movlw	2
  9124  003CEC  180C               	xorwf	Lcd_Set_Cursor@a,w,c
  9125  003CEE  A4D8               	btfss	status,2,c
  9126  003CF0  0012               	return	
  9127                           
  9128                           ;lcd_i2c.c: 57:  {;lcd_i2c.c: 58:   temp = 0xC0 + b - 1;
  9129  003CF2  500B               	movf	Lcd_Set_Cursor@b,w,c
  9130  003CF4  0FBF               	addlw	191
  9131  003CF6  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  9132                           
  9133                           ;lcd_i2c.c: 59:   z = temp>>4;
  9134  003CF8  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  9135  003CFA  0B0F               	andlw	15
  9136  003CFC  6E0D               	movwf	Lcd_Set_Cursor@z,c
  9137                           
  9138                           ;lcd_i2c.c: 60:   y = temp & 0x0F;
  9139  003CFE  500F               	movf	Lcd_Set_Cursor@temp,w,c
  9140  003D00  0B0F               	andlw	15
  9141  003D02  6E0E               	movwf	Lcd_Set_Cursor@y,c
  9142                           
  9143                           ;lcd_i2c.c: 61:   Lcd_Cmd(z);
  9144  003D04  500D               	movf	Lcd_Set_Cursor@z,w,c
  9145  003D06  ECAF  F01E         	call	_Lcd_Cmd
  9146                           
  9147                           ;lcd_i2c.c: 62:   Lcd_Cmd(y);
  9148  003D0A  500E               	movf	Lcd_Set_Cursor@y,w,c
  9149  003D0C  ECAF  F01E         	call	_Lcd_Cmd
  9150  003D10  0012               	return		;funcret
  9151  003D12                     __end_of_Lcd_Set_Cursor:
  9152                           	opt callstack 0
  9153                           
  9154 ;; *************** function _Lcd_Init *****************
  9155 ;; Defined at:
  9156 ;;		line 66 in file "lcd_i2c.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, status,2, status,0, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9174 ;;Total ram usage:        2 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:    4
  9177 ;; This function calls:
  9178 ;;		_Lcd_Cmd
  9179 ;;		_Lcd_Port
  9180 ;; This function is called by:
  9181 ;;		_init_io_display
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text46
  9186  0037DE                     __ptext46:
  9187                           	opt callstack 0
  9188  0037DE                     _Lcd_Init:
  9189                           	opt callstack 25
  9190                           
  9191                           ;lcd_i2c.c: 68:   Lcd_Port(0x00);
  9192                           
  9193                           ;incstack = 0
  9194  0037DE  0E00               	movlw	0
  9195  0037E0  ECCD  F01F         	call	_Lcd_Port
  9196                           
  9197                           ;lcd_i2c.c: 69:    _delay((unsigned long)((20)*(64000000/4000.0)));
  9198  0037E4  0E02               	movlw	2
  9199  0037E6  6E0C               	movwf	(??_Lcd_Init+1)& (0+255),c
  9200  0037E8  0EA0               	movlw	160
  9201  0037EA  6E0B               	movwf	??_Lcd_Init& (0+255),c
  9202  0037EC  0E92               	movlw	146
  9203  0037EE                     u5517:
  9204  0037EE  2EE8               	decfsz	wreg,f,c
  9205  0037F0  D7FE               	bra	u5517
  9206  0037F2  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  9207  0037F4  D7FC               	bra	u5517
  9208  0037F6  2E0C               	decfsz	(??_Lcd_Init+1)& (0+255),f,c
  9209  0037F8  D7FA               	bra	u5517
  9210  0037FA  D000               	nop2	
  9211                           
  9212                           ;lcd_i2c.c: 70:   Lcd_Cmd(0x03);
  9213  0037FC  0E03               	movlw	3
  9214  0037FE  ECAF  F01E         	call	_Lcd_Cmd
  9215                           
  9216                           ;lcd_i2c.c: 71:  _delay((unsigned long)((5)*(64000000/4000.0)));
  9217  003802  0E68               	movlw	104
  9218  003804  6E0B               	movwf	??_Lcd_Init& (0+255),c
  9219  003806  0EE4               	movlw	228
  9220  003808                     u5527:
  9221  003808  2EE8               	decfsz	wreg,f,c
  9222  00380A  D7FE               	bra	u5527
  9223  00380C  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  9224  00380E  D7FC               	bra	u5527
  9225  003810  D000               	nop2	
  9226                           
  9227                           ;lcd_i2c.c: 72:   Lcd_Cmd(0x03);
  9228  003812  0E03               	movlw	3
  9229  003814  ECAF  F01E         	call	_Lcd_Cmd
  9230                           
  9231                           ;lcd_i2c.c: 73:  _delay((unsigned long)((11)*(64000000/4000.0)));
  9232  003818  0EE5               	movlw	229
  9233  00381A  6E0B               	movwf	??_Lcd_Init& (0+255),c
  9234  00381C  0E91               	movlw	145
  9235  00381E                     u5537:
  9236  00381E  2EE8               	decfsz	wreg,f,c
  9237  003820  D7FE               	bra	u5537
  9238  003822  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  9239  003824  D7FC               	bra	u5537
  9240  003826  F000               	nop	
  9241                           
  9242                           ;lcd_i2c.c: 74:   Lcd_Cmd(0x03);
  9243  003828  0E03               	movlw	3
  9244  00382A  ECAF  F01E         	call	_Lcd_Cmd
  9245                           
  9246                           ;lcd_i2c.c: 76:   Lcd_Cmd(0x02);
  9247  00382E  0E02               	movlw	2
  9248  003830  ECAF  F01E         	call	_Lcd_Cmd
  9249                           
  9250                           ;lcd_i2c.c: 77:   Lcd_Cmd(0x02);
  9251  003834  0E02               	movlw	2
  9252  003836  ECAF  F01E         	call	_Lcd_Cmd
  9253                           
  9254                           ;lcd_i2c.c: 78:   Lcd_Cmd(0x08);
  9255  00383A  0E08               	movlw	8
  9256  00383C  ECAF  F01E         	call	_Lcd_Cmd
  9257                           
  9258                           ;lcd_i2c.c: 79:   Lcd_Cmd(0x00);
  9259  003840  0E00               	movlw	0
  9260  003842  ECAF  F01E         	call	_Lcd_Cmd
  9261                           
  9262                           ;lcd_i2c.c: 80:   Lcd_Cmd(0x0C);
  9263  003846  0E0C               	movlw	12
  9264  003848  ECAF  F01E         	call	_Lcd_Cmd
  9265                           
  9266                           ;lcd_i2c.c: 81:   Lcd_Cmd(0x00);
  9267  00384C  0E00               	movlw	0
  9268  00384E  ECAF  F01E         	call	_Lcd_Cmd
  9269                           
  9270                           ;lcd_i2c.c: 82:   Lcd_Cmd(0x06);
  9271  003852  0E06               	movlw	6
  9272  003854  ECAF  F01E         	call	_Lcd_Cmd
  9273  003858  0012               	return		;funcret
  9274  00385A                     __end_of_Lcd_Init:
  9275                           	opt callstack 0
  9276                           
  9277 ;; *************** function _Lcd_Clear *****************
  9278 ;; Defined at:
  9279 ;;		line 39 in file "lcd_i2c.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      void 
  9286 ;; Registers used:
  9287 ;;		wreg, status,2, status,0, cstack
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9297 ;;Total ram usage:        0 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:    4
  9300 ;; This function calls:
  9301 ;;		_Lcd_Cmd
  9302 ;; This function is called by:
  9303 ;;		_init_io_display
  9304 ;;		_main
  9305 ;;		_read_Iout
  9306 ;;		_read_Uout
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text47
  9311  003FE6                     __ptext47:
  9312                           	opt callstack 0
  9313  003FE6                     _Lcd_Clear:
  9314                           	opt callstack 25
  9315                           
  9316                           ;lcd_i2c.c: 41:  Lcd_Cmd(0);
  9317                           
  9318                           ;incstack = 0
  9319  003FE6  0E00               	movlw	0
  9320  003FE8  ECAF  F01E         	call	_Lcd_Cmd
  9321                           
  9322                           ;lcd_i2c.c: 42:  Lcd_Cmd(1);
  9323  003FEC  0E01               	movlw	1
  9324  003FEE  ECAF  F01E         	call	_Lcd_Cmd
  9325  003FF2  0012               	return		;funcret
  9326  003FF4                     __end_of_Lcd_Clear:
  9327                           	opt callstack 0
  9328                           
  9329 ;; *************** function _I2C_Master_Init *****************
  9330 ;; Defined at:
  9331 ;;		line 160 in file "lcd_i2c.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  c               4   13[COMRAM] const unsigned long 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;Total ram usage:        8 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:    1
  9352 ;; This function calls:
  9353 ;;		___lldiv
  9354 ;; This function is called by:
  9355 ;;		_init_io_display
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text48
  9360  003A6C                     __ptext48:
  9361                           	opt callstack 0
  9362  003A6C                     _I2C_Master_Init:
  9363                           	opt callstack 28
  9364                           
  9365                           ;lcd_i2c.c: 160: void I2C_Master_Init(const unsigned long c);lcd_i2c.c: 161: {;lcd_i2c.c
      +                          : 162:     SSP1CON1 = 0b00101000;
  9366                           
  9367                           ;incstack = 0
  9368  003A6C  0E28               	movlw	40
  9369  003A6E  6EC6               	movwf	4038,c	;volatile
  9370                           
  9371                           ;lcd_i2c.c: 163:     SSP1CON2 = 0x00;
  9372  003A70  0E00               	movlw	0
  9373  003A72  6EC5               	movwf	4037,c	;volatile
  9374                           
  9375                           ;lcd_i2c.c: 164:     SSP1ADD = (64000000/(4*c))-1;
  9376  003A74  0E00               	movlw	0
  9377  003A76  6E01               	movwf	___lldiv@dividend,c
  9378  003A78  0E90               	movlw	144
  9379  003A7A  6E02               	movwf	___lldiv@dividend+1,c
  9380  003A7C  0ED0               	movlw	208
  9381  003A7E  6E03               	movwf	___lldiv@dividend+2,c
  9382  003A80  0E03               	movlw	3
  9383  003A82  6E04               	movwf	___lldiv@dividend+3,c
  9384  003A84  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  9385  003A88  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  9386  003A8C  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  9387  003A90  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  9388  003A94  0E02               	movlw	2
  9389  003A96                     u4975:
  9390  003A96  90D8               	bcf	status,0,c
  9391  003A98  3612               	rlcf	??_I2C_Master_Init,f,c
  9392  003A9A  3613               	rlcf	??_I2C_Master_Init+1,f,c
  9393  003A9C  3614               	rlcf	??_I2C_Master_Init+2,f,c
  9394  003A9E  3615               	rlcf	??_I2C_Master_Init+3,f,c
  9395  003AA0  2EE8               	decfsz	wreg,f,c
  9396  003AA2  D7F9               	goto	u4975
  9397  003AA4  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  9398  003AA8  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  9399  003AAC  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  9400  003AB0  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  9401  003AB4  EC6F  F01B         	call	___lldiv	;wreg free
  9402  003AB8  0401               	decf	?___lldiv,w,c
  9403  003ABA  6EC8               	movwf	4040,c	;volatile
  9404                           
  9405                           ;lcd_i2c.c: 165:     SSP1STAT = 0x00;
  9406  003ABC  0E00               	movlw	0
  9407  003ABE  6EC7               	movwf	4039,c	;volatile
  9408                           
  9409                           ;lcd_i2c.c: 166:     TRISCbits.TRISC3=1;
  9410  003AC0  8694               	bsf	3988,3,c	;volatile
  9411                           
  9412                           ;lcd_i2c.c: 167:     TRISCbits.TRISC4=1;
  9413  003AC2  8894               	bsf	3988,4,c	;volatile
  9414  003AC4  0012               	return		;funcret
  9415  003AC6                     __end_of_I2C_Master_Init:
  9416                           	opt callstack 0
  9417                           
  9418 ;; *************** function ___lldiv *****************
  9419 ;; Defined at:
  9420 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  dividend        4    0[COMRAM] unsigned long 
  9423 ;;  divisor         4    4[COMRAM] unsigned long 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;  quotient        4    8[COMRAM] unsigned long 
  9426 ;;  counter         1   12[COMRAM] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  4    0[COMRAM] unsigned long 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2, status,0
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9436 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;Total ram usage:       13 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_I2C_Master_Init
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           	psect	text49
  9450  0036DE                     __ptext49:
  9451                           	opt callstack 0
  9452  0036DE                     ___lldiv:
  9453                           	opt callstack 28
  9454                           
  9455                           ;incstack = 0
  9456  0036DE  0E00               	movlw	0
  9457  0036E0  6E09               	movwf	___lldiv@quotient,c
  9458  0036E2  0E00               	movlw	0
  9459  0036E4  6E0A               	movwf	___lldiv@quotient+1,c
  9460  0036E6  0E00               	movlw	0
  9461  0036E8  6E0B               	movwf	___lldiv@quotient+2,c
  9462  0036EA  0E00               	movlw	0
  9463  0036EC  6E0C               	movwf	___lldiv@quotient+3,c
  9464  0036EE  5005               	movf	___lldiv@divisor,w,c
  9465  0036F0  1006               	iorwf	___lldiv@divisor+1,w,c
  9466  0036F2  1007               	iorwf	___lldiv@divisor+2,w,c
  9467  0036F4  1008               	iorwf	___lldiv@divisor+3,w,c
  9468  0036F6  B4D8               	btfsc	status,2,c
  9469  0036F8  D02A               	goto	l552
  9470  0036FA  0E01               	movlw	1
  9471  0036FC  6E0D               	movwf	___lldiv@counter,c
  9472  0036FE  D006               	goto	l4441
  9473  003700                     l4439:
  9474  003700  90D8               	bcf	status,0,c
  9475  003702  3605               	rlcf	___lldiv@divisor,f,c
  9476  003704  3606               	rlcf	___lldiv@divisor+1,f,c
  9477  003706  3607               	rlcf	___lldiv@divisor+2,f,c
  9478  003708  3608               	rlcf	___lldiv@divisor+3,f,c
  9479  00370A  2A0D               	incf	___lldiv@counter,f,c
  9480  00370C                     l4441:
  9481  00370C  AE08               	btfss	___lldiv@divisor+3,7,c
  9482  00370E  D7F8               	goto	l4439
  9483  003710                     u4950:
  9484  003710  90D8               	bcf	status,0,c
  9485  003712  3609               	rlcf	___lldiv@quotient,f,c
  9486  003714  360A               	rlcf	___lldiv@quotient+1,f,c
  9487  003716  360B               	rlcf	___lldiv@quotient+2,f,c
  9488  003718  360C               	rlcf	___lldiv@quotient+3,f,c
  9489  00371A  5005               	movf	___lldiv@divisor,w,c
  9490  00371C  5C01               	subwf	___lldiv@dividend,w,c
  9491  00371E  5006               	movf	___lldiv@divisor+1,w,c
  9492  003720  5802               	subwfb	___lldiv@dividend+1,w,c
  9493  003722  5007               	movf	___lldiv@divisor+2,w,c
  9494  003724  5803               	subwfb	___lldiv@dividend+2,w,c
  9495  003726  5008               	movf	___lldiv@divisor+3,w,c
  9496  003728  5804               	subwfb	___lldiv@dividend+3,w,c
  9497  00372A  A0D8               	btfss	status,0,c
  9498  00372C  D009               	goto	l4451
  9499  00372E  5005               	movf	___lldiv@divisor,w,c
  9500  003730  5E01               	subwf	___lldiv@dividend,f,c
  9501  003732  5006               	movf	___lldiv@divisor+1,w,c
  9502  003734  5A02               	subwfb	___lldiv@dividend+1,f,c
  9503  003736  5007               	movf	___lldiv@divisor+2,w,c
  9504  003738  5A03               	subwfb	___lldiv@dividend+2,f,c
  9505  00373A  5008               	movf	___lldiv@divisor+3,w,c
  9506  00373C  5A04               	subwfb	___lldiv@dividend+3,f,c
  9507  00373E  8009               	bsf	___lldiv@quotient,0,c
  9508  003740                     l4451:
  9509  003740  90D8               	bcf	status,0,c
  9510  003742  3208               	rrcf	___lldiv@divisor+3,f,c
  9511  003744  3207               	rrcf	___lldiv@divisor+2,f,c
  9512  003746  3206               	rrcf	___lldiv@divisor+1,f,c
  9513  003748  3205               	rrcf	___lldiv@divisor,f,c
  9514  00374A  2E0D               	decfsz	___lldiv@counter,f,c
  9515  00374C  D7E1               	goto	u4950
  9516  00374E                     l552:
  9517  00374E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9518  003752  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9519  003756  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9520  00375A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9521  00375E  0012               	return		;funcret
  9522  003760                     __end_of___lldiv:
  9523                           	opt callstack 0
  9524                           
  9525 ;; *************** function _Cursor_Off *****************
  9526 ;; Defined at:
  9527 ;;		line 134 in file "lcd_i2c.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;		None
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;		None
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  1    wreg      void 
  9534 ;; Registers used:
  9535 ;;		wreg, status,2, status,0, cstack
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;Total ram usage:        0 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:    4
  9548 ;; This function calls:
  9549 ;;		_Lcd_Cmd
  9550 ;; This function is called by:
  9551 ;;		_init_io_display
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text50
  9556  003FF4                     __ptext50:
  9557                           	opt callstack 0
  9558  003FF4                     _Cursor_Off:
  9559                           	opt callstack 25
  9560                           
  9561                           ;lcd_i2c.c: 136: Lcd_Cmd(0x00);
  9562                           
  9563                           ;incstack = 0
  9564  003FF4  0E00               	movlw	0
  9565  003FF6  ECAF  F01E         	call	_Lcd_Cmd
  9566                           
  9567                           ;lcd_i2c.c: 137: Lcd_Cmd(0x0C);
  9568  003FFA  0E0C               	movlw	12
  9569  003FFC  ECAF  F01E         	call	_Lcd_Cmd
  9570  004000  0012               	return		;funcret
  9571  004002                     __end_of_Cursor_Off:
  9572                           	opt callstack 0
  9573                           
  9574 ;; *************** function _Lcd_Cmd *****************
  9575 ;; Defined at:
  9576 ;;		line 20 in file "lcd_i2c.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;  a               1    wreg     unsigned char 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  a               1    9[COMRAM] unsigned char 
  9581 ;;  buff            2    7[COMRAM] int 
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      void 
  9584 ;; Registers used:
  9585 ;;		wreg, status,2, status,0, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;Total ram usage:        6 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; Hardware stack levels required when called:    3
  9598 ;; This function calls:
  9599 ;;		_Lcd_Port
  9600 ;; This function is called by:
  9601 ;;		_Lcd_Clear
  9602 ;;		_Lcd_Set_Cursor
  9603 ;;		_Lcd_Init
  9604 ;;		_Cursor_Off
  9605 ;;		_Lcd_Shift_Right
  9606 ;;		_Lcd_Shift_Left
  9607 ;;		_Cursor_On
  9608 ;;		_Cursor_Left
  9609 ;;		_Cursor_Right
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text51
  9614  003D5E                     __ptext51:
  9615                           	opt callstack 0
  9616  003D5E                     _Lcd_Cmd:
  9617                           	opt callstack 25
  9618                           
  9619                           ;incstack = 0
  9620                           ;Lcd_Cmd@a stored from wreg
  9621  003D5E  6E0A               	movwf	Lcd_Cmd@a,c
  9622                           
  9623                           ;lcd_i2c.c: 20: void Lcd_Cmd(char a);lcd_i2c.c: 21: {;lcd_i2c.c: 22:     int buff;;lcd_i
      +                          2c.c: 23:     a=a<<4;
  9624  003D60  380A               	swapf	Lcd_Cmd@a,w,c
  9625  003D62  0BF0               	andlw	240
  9626  003D64  6E0A               	movwf	Lcd_Cmd@a,c
  9627  003D66  0E00               	movlw	0
  9628  003D68  ECCD  F01F         	call	_Lcd_Port
  9629                           
  9630                           ;lcd_i2c.c: 28:  Lcd_Port(a);
  9631  003D6C  500A               	movf	Lcd_Cmd@a,w,c
  9632  003D6E  ECCD  F01F         	call	_Lcd_Port
  9633                           
  9634                           ;lcd_i2c.c: 31:     buff=a | 0x00 | 0x04 | 0x00;
  9635  003D72  0E04               	movlw	4
  9636  003D74  C00A  F005         	movff	Lcd_Cmd@a,??_Lcd_Cmd
  9637  003D78  6A06               	clrf	(??_Lcd_Cmd+1)& (0+255),c
  9638  003D7A  1005               	iorwf	??_Lcd_Cmd,w,c
  9639  003D7C  6E08               	movwf	Lcd_Cmd@buff,c
  9640  003D7E  5006               	movf	??_Lcd_Cmd+1,w,c
  9641  003D80  6E09               	movwf	Lcd_Cmd@buff+1,c
  9642                           
  9643                           ;lcd_i2c.c: 32:     Lcd_Port(buff);
  9644  003D82  5008               	movf	Lcd_Cmd@buff,w,c
  9645  003D84  ECCD  F01F         	call	_Lcd_Port
  9646                           
  9647                           ;lcd_i2c.c: 33:         _delay((unsigned long)((4)*(64000000/4000.0)));
  9648  003D88  0E54               	movlw	84
  9649  003D8A  6E05               	movwf	??_Lcd_Cmd& (0+255),c
  9650  003D8C  0E1C               	movlw	28
  9651  003D8E                     u5547:
  9652  003D8E  2EE8               	decfsz	wreg,f,c
  9653  003D90  D7FE               	bra	u5547
  9654  003D92  2E05               	decfsz	??_Lcd_Cmd& (0+255),f,c
  9655  003D94  D7FC               	bra	u5547
  9656  003D96  D000               	nop2	
  9657                           
  9658                           ;lcd_i2c.c: 35:     buff=a | 0x00 | 0x00 | 0x00;
  9659  003D98  C00A  F008         	movff	Lcd_Cmd@a,Lcd_Cmd@buff
  9660  003D9C  6A09               	clrf	Lcd_Cmd@buff+1,c
  9661                           
  9662                           ;lcd_i2c.c: 36:     Lcd_Port(buff);
  9663  003D9E  5008               	movf	Lcd_Cmd@buff,w,c
  9664  003DA0  ECCD  F01F         	call	_Lcd_Port
  9665  003DA4  0012               	return		;funcret
  9666  003DA6                     __end_of_Lcd_Cmd:
  9667                           	opt callstack 0
  9668                           
  9669 ;; *************** function _Lcd_Port *****************
  9670 ;; Defined at:
  9671 ;;		line 14 in file "lcd_i2c.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  data            1    wreg     unsigned char 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  data            1    3[COMRAM] unsigned char 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      void 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;Total ram usage:        1 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    2
  9692 ;; This function calls:
  9693 ;;		_I2C_Master_Start
  9694 ;;		_I2C_Master_Stop
  9695 ;;		_I2C_Write_Display
  9696 ;; This function is called by:
  9697 ;;		_Lcd_Cmd
  9698 ;;		_Lcd_Init
  9699 ;;		_Lcd_Write_Char
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           	psect	text52
  9704  003F9A                     __ptext52:
  9705                           	opt callstack 0
  9706  003F9A                     _Lcd_Port:
  9707                           	opt callstack 25
  9708                           
  9709                           ;incstack = 0
  9710                           ;Lcd_Port@data stored from wreg
  9711  003F9A  6E04               	movwf	Lcd_Port@data,c
  9712                           
  9713                           ;lcd_i2c.c: 14: void Lcd_Port(char data);lcd_i2c.c: 15: { I2C_Master_Start();
  9714  003F9C  EC10  F020         	call	_I2C_Master_Start	;wreg free
  9715                           
  9716                           ;lcd_i2c.c: 16:     I2C_Write_Display(0x70);
  9717  003FA0  0E00               	movlw	0
  9718  003FA2  6E03               	movwf	I2C_Write_Display@d+1,c
  9719  003FA4  0E70               	movlw	112
  9720  003FA6  6E02               	movwf	I2C_Write_Display@d,c
  9721  003FA8  EC07  F020         	call	_I2C_Write_Display	;wreg free
  9722                           
  9723                           ;lcd_i2c.c: 17:  I2C_Write_Display(data);
  9724  003FAC  C004  F002         	movff	Lcd_Port@data,I2C_Write_Display@d
  9725  003FB0  6A03               	clrf	I2C_Write_Display@d+1,c
  9726  003FB2  EC07  F020         	call	_I2C_Write_Display	;wreg free
  9727                           
  9728                           ;lcd_i2c.c: 18:     I2C_Master_Stop();
  9729  003FB6  EC0C  F020         	call	_I2C_Master_Stop	;wreg free
  9730  003FBA  0012               	return		;funcret
  9731  003FBC                     __end_of_Lcd_Port:
  9732                           	opt callstack 0
  9733                           
  9734 ;; *************** function _I2C_Write_Display *****************
  9735 ;; Defined at:
  9736 ;;		line 201 in file "lcd_i2c.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  d               2    1[COMRAM] unsigned int 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;Total ram usage:        2 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:    1
  9757 ;; This function calls:
  9758 ;;		_I2C_Master_Wait
  9759 ;; This function is called by:
  9760 ;;		_Lcd_Port
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text53
  9765  00400E                     __ptext53:
  9766                           	opt callstack 0
  9767  00400E                     _I2C_Write_Display:
  9768                           	opt callstack 25
  9769                           
  9770                           ;lcd_i2c.c: 201: void I2C_Write_Display(unsigned d);lcd_i2c.c: 202: {;lcd_i2c.c: 203:   
      +                            I2C_Master_Wait();
  9771                           
  9772                           ;incstack = 0
  9773  00400E  ECEA  F01F         	call	_I2C_Master_Wait	;wreg free
  9774                           
  9775                           ;lcd_i2c.c: 204:     SSP1BUF = d;
  9776  004012  C002  FFC9         	movff	I2C_Write_Display@d,4041	;volatile
  9777  004016  0012               	return		;funcret
  9778  004018                     __end_of_I2C_Write_Display:
  9779                           	opt callstack 0
  9780                           
  9781 ;; *************** function _I2C_Master_Stop *****************
  9782 ;; Defined at:
  9783 ;;		line 189 in file "lcd_i2c.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, status,2, status,0, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:    1
  9804 ;; This function calls:
  9805 ;;		_I2C_Master_Wait
  9806 ;; This function is called by:
  9807 ;;		_Lcd_Port
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text54
  9812  004018                     __ptext54:
  9813                           	opt callstack 0
  9814  004018                     _I2C_Master_Stop:
  9815                           	opt callstack 25
  9816                           
  9817                           ;lcd_i2c.c: 191:     I2C_Master_Wait();
  9818                           
  9819                           ;incstack = 0
  9820  004018  ECEA  F01F         	call	_I2C_Master_Wait	;wreg free
  9821                           
  9822                           ;lcd_i2c.c: 192:     SSP1CON2bits.PEN = 1;
  9823  00401C  84C5               	bsf	4037,2,c	;volatile
  9824  00401E  0012               	return		;funcret
  9825  004020                     __end_of_I2C_Master_Stop:
  9826                           	opt callstack 0
  9827                           
  9828 ;; *************** function _I2C_Master_Start *****************
  9829 ;; Defined at:
  9830 ;;		line 177 in file "lcd_i2c.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:    1
  9851 ;; This function calls:
  9852 ;;		_I2C_Master_Wait
  9853 ;; This function is called by:
  9854 ;;		_Lcd_Port
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text55
  9859  004020                     __ptext55:
  9860                           	opt callstack 0
  9861  004020                     _I2C_Master_Start:
  9862                           	opt callstack 25
  9863                           
  9864                           ;lcd_i2c.c: 179:     I2C_Master_Wait();
  9865                           
  9866                           ;incstack = 0
  9867  004020  ECEA  F01F         	call	_I2C_Master_Wait	;wreg free
  9868                           
  9869                           ;lcd_i2c.c: 180:     SSP1CON2bits.SEN = 1;
  9870  004024  80C5               	bsf	4037,0,c	;volatile
  9871  004026  0012               	return		;funcret
  9872  004028                     __end_of_I2C_Master_Start:
  9873                           	opt callstack 0
  9874                           
  9875 ;; *************** function _I2C_Master_Wait *****************
  9876 ;; Defined at:
  9877 ;;		line 170 in file "lcd_i2c.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;		None
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      void 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2, status,0
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;Total ram usage:        1 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_I2C_Master_Start
  9901 ;;		_I2C_Master_Stop
  9902 ;;		_I2C_Write_Display
  9903 ;;		_I2C_Master_RepeatedStart
  9904 ;;		_I2C_Master_Write
  9905 ;;		_I2C_Master_Read
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           	psect	text56
  9910  003FD4                     __ptext56:
  9911                           	opt callstack 0
  9912  003FD4                     _I2C_Master_Wait:
  9913                           	opt callstack 25
  9914                           
  9915                           ;lcd_i2c.c: 172:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  9916                           
  9917                           ;incstack = 0
  9918  003FD4  B4C7               	btfsc	4039,2,c	;volatile
  9919  003FD6  D7FE               	goto	_I2C_Master_Wait
  9920  003FD8  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  9921  003FDC  0E1F               	movlw	31
  9922  003FDE  1601               	andwf	??_I2C_Master_Wait,f,c
  9923  003FE0  B4D8               	btfsc	status,2,c
  9924  003FE2  0012               	return	
  9925  003FE4  D7F7               	goto	_I2C_Master_Wait
  9926  003FE6                     __end_of_I2C_Master_Wait:
  9927                           	opt callstack 0
  9928                           
  9929 ;; *************** function _config *****************
  9930 ;; Defined at:
  9931 ;;		line 14 in file "config.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_main
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text57
  9959  003C1C                     __ptext57:
  9960                           	opt callstack 0
  9961  003C1C                     _config:
  9962                           	opt callstack 30
  9963                           
  9964                           ;config.c: 16:     TRISA=0Xff;
  9965                           
  9966                           ;incstack = 0
  9967  003C1C  6892               	setf	3986,c	;volatile
  9968                           
  9969                           ;config.c: 17:     TRISB=0X00;
  9970  003C1E  0E00               	movlw	0
  9971  003C20  6E93               	movwf	3987,c	;volatile
  9972                           
  9973                           ;config.c: 18:     TRISC=0X00;
  9974  003C22  0E00               	movlw	0
  9975  003C24  6E94               	movwf	3988,c	;volatile
  9976                           
  9977                           ;config.c: 19:     TRISD=0X00;
  9978  003C26  0E00               	movlw	0
  9979  003C28  6E95               	movwf	3989,c	;volatile
  9980                           
  9981                           ;config.c: 20:     TRISE=0Xff;
  9982  003C2A  6896               	setf	3990,c	;volatile
  9983                           
  9984                           ;config.c: 22:     PORTA=0X00;
  9985  003C2C  0E00               	movlw	0
  9986  003C2E  6E80               	movwf	3968,c	;volatile
  9987                           
  9988                           ;config.c: 23:     PORTB=0X00;
  9989  003C30  0E00               	movlw	0
  9990  003C32  6E81               	movwf	3969,c	;volatile
  9991                           
  9992                           ;config.c: 24:     PORTC=0X00;
  9993  003C34  0E00               	movlw	0
  9994  003C36  6E82               	movwf	3970,c	;volatile
  9995                           
  9996                           ;config.c: 25:     PORTD=0X00;
  9997  003C38  0E00               	movlw	0
  9998  003C3A  6E83               	movwf	3971,c	;volatile
  9999                           
 10000                           ;config.c: 26:     PORTE=0X00;
 10001  003C3C  0E00               	movlw	0
 10002  003C3E  6E84               	movwf	3972,c	;volatile
 10003                           
 10004                           ;config.c: 28:     LATA=0X00;
 10005  003C40  0E00               	movlw	0
 10006  003C42  6E89               	movwf	3977,c	;volatile
 10007                           
 10008                           ;config.c: 29:     LATB=0X00;
 10009  003C44  0E00               	movlw	0
 10010  003C46  6E8A               	movwf	3978,c	;volatile
 10011                           
 10012                           ;config.c: 30:     LATC=0X00;
 10013  003C48  0E00               	movlw	0
 10014  003C4A  6E8B               	movwf	3979,c	;volatile
 10015                           
 10016                           ;config.c: 31:     LATD=0X00;
 10017  003C4C  0E00               	movlw	0
 10018  003C4E  6E8C               	movwf	3980,c	;volatile
 10019                           
 10020                           ;config.c: 32:     LATE=0X00;
 10021  003C50  0E00               	movlw	0
 10022  003C52  6E8D               	movwf	3981,c	;volatile
 10023                           
 10024                           ;config.c: 34:     ANSELA=0Xff;
 10025  003C54  010F               	movlb	15	; () banked
 10026  003C56  6938               	setf	56,b	;volatile
 10027                           
 10028                           ;config.c: 35:     ANSELB=0X00;
 10029  003C58  0E00               	movlw	0
 10030  003C5A  6F39               	movwf	57,b	;volatile
 10031                           
 10032                           ;config.c: 36:     ANSELC=0X00;
 10033  003C5C  0E00               	movlw	0
 10034  003C5E  6F3A               	movwf	58,b	;volatile
 10035                           
 10036                           ;config.c: 37:     ANSELD=0X00;
 10037  003C60  0E00               	movlw	0
 10038  003C62  6F3B               	movwf	59,b	;volatile
 10039                           
 10040                           ;config.c: 38:     ANSELE=0X00;
 10041  003C64  0E00               	movlw	0
 10042  003C66  6F3C               	movwf	60,b	;volatile
 10043                           
 10044                           ;config.c: 40:     OSCCON=0b01110100;
 10045  003C68  0E74               	movlw	116
 10046  003C6A  6ED3               	movwf	4051,c	;volatile
 10047                           
 10048                           ; BSR set to: 15
 10049                           ;config.c: 41:     OSCTUNEbits.PLLEN=1;
 10050  003C6C  8C9B               	bsf	3995,6,c	;volatile
 10051                           
 10052                           ; BSR set to: 15
 10053  003C6E  0012               	return		;funcret
 10054  003C70                     __end_of_config:
 10055                           	opt callstack 0
 10056                           
 10057 ;; *************** function _adc_config *****************
 10058 ;; Defined at:
 10059 ;;		line 54 in file "config.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;		None
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;		None
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1    wreg      void 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;Total ram usage:        0 bytes
 10078 ;; Hardware stack levels used:    1
 10079 ;; This function calls:
 10080 ;;		Nothing
 10081 ;; This function is called by:
 10082 ;;		_main
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text58
 10087  004002                     __ptext58:
 10088                           	opt callstack 0
 10089  004002                     _adc_config:
 10090                           	opt callstack 30
 10091                           
 10092                           ;config.c: 56:     ADCON1=0b10000000;
 10093                           
 10094                           ; BSR set to: 15
 10095                           ;incstack = 0
 10096  004002  0E80               	movlw	128
 10097  004004  6EC1               	movwf	4033,c	;volatile
 10098                           
 10099                           ;config.c: 57:     ADCON2=0b00111110;
 10100  004006  0E3E               	movlw	62
 10101  004008  6EC0               	movwf	4032,c	;volatile
 10102                           
 10103                           ;config.c: 58:     ADCON2bits.ADFM=0;
 10104  00400A  9EC0               	bcf	4032,7,c	;volatile
 10105  00400C  0012               	return		;funcret
 10106  00400E                     __end_of_adc_config:
 10107                           	opt callstack 0
 10108                           
 10109                           	psect	rparam
 10110  0000                     tosu	equ	0xFFF
 10111                           tosh	equ	0xFFE
 10112                           tosl	equ	0xFFD
 10113                           stkptr	equ	0xFFC
 10114                           pclatu	equ	0xFFB
 10115                           pclath	equ	0xFFA
 10116                           pcl	equ	0xFF9
 10117                           tblptru	equ	0xFF8
 10118                           tblptrh	equ	0xFF7
 10119                           tblptrl	equ	0xFF6
 10120                           tablat	equ	0xFF5
 10121                           prodh	equ	0xFF4
 10122                           prodl	equ	0xFF3
 10123                           indf0	equ	0xFEF
 10124                           postinc0	equ	0xFEE
 10125                           postdec0	equ	0xFED
 10126                           preinc0	equ	0xFEC
 10127                           plusw0	equ	0xFEB
 10128                           fsr0h	equ	0xFEA
 10129                           fsr0l	equ	0xFE9
 10130                           wreg	equ	0xFE8
 10131                           indf1	equ	0xFE7
 10132                           postinc1	equ	0xFE6
 10133                           postdec1	equ	0xFE5
 10134                           preinc1	equ	0xFE4
 10135                           plusw1	equ	0xFE3
 10136                           fsr1h	equ	0xFE2
 10137                           fsr1l	equ	0xFE1
 10138                           bsr	equ	0xFE0
 10139                           indf2	equ	0xFDF
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           preinc2	equ	0xFDC
 10143                           plusw2	equ	0xFDB
 10144                           fsr2h	equ	0xFDA
 10145                           fsr2l	equ	0xFD9
 10146                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     90     156
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1324_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 13
		 -> STR_13(CODE[3]), str_P(BANK1[8]), STR_11(CODE[3]), STR_9(CODE[4]), 
		 -> str_V(BANK0[8]), STR_7(CODE[3]), STR_6(CODE[13]), STR_5(CODE[3]), 
		 -> str_A(BANK1[8]), STR_3(CODE[3]), STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    _atoi->_isspace
    _set_buck->___fltol
    _set_boost->___fltol
    ___fltol->___flmul
    _read_Uout->___flge
    _read_Uin->___flmul
    _read_Iout->___flge
    ___flmul->___xxtofl
    _pwm_init->___flge
    ___flge->___flmul
    _init_io_display->_I2C_Master_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display
    _I2C_Write_Display->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _write_Uout->_sprintf
    _write_Uin->_sprintf
    _write_Power->_sprintf
    _write_Iout->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  193378
                                             93 COMRAM     1     1      0
                                             74 BANK0     16    16      0
                          _Lcd_Clear
                             ___flge
                            ___flmul
                         _adc_config
                             _config
                    _init_io_display
                         _pwm_config
                           _pwm_init
                          _read_Iout
                           _read_Uin
                          _read_Uout
                          _set_boost
                           _set_buck
                         _write_Iout
                        _write_Power
                          _write_Uin
                         _write_Uout
 ---------------------------------------------------------------------------------
 (1) _write_Uout                                           0     0      0   34229
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _write_Uin                                            0     0      0   34229
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _write_Power                                          0     0      0   38101
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _write_Iout                                           0     0      0   34229
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   31369
                                             56 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30556
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   30184
                                             63 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   24885
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _set_buck                                             2     0      2    5251
                                             49 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _set_boost                                            2     0      2    5251
                                             49 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_Uout                                            2     2      0   12106
                                             51 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_Uin                                             2     2      0    6885
                                             39 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _read_Iout                                            2     2      0    9795
                                             51 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             4     0      4    2104
                                             51 COMRAM     4     0      4
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2006
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_io_display                                      2     2      0    4533
                                             21 COMRAM     2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1475
                                              7 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     397
                                              4 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1385
                                             10 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     551
                                             10 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              4 COMRAM     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     196
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   _adc_config
   _config
   _init_io_display
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
   _pwm_config
   _pwm_init
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
   _read_Iout
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _read_Uin
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _read_Uout
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     ___fldiv
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _set_boost
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _set_buck
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _write_Iout
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _write_Power
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     ___flmul
       ___xxtofl (ARG)
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _write_Uin
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _write_Uout
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5A      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      12        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 30 19:02:37 2019

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                           _c 00EA  
              ___fldiv@sign 0011                ___awdiv@sign 0006         ___wmul@multiplicand 0003  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000          I2C_Write_Display@d 0002                         l436 1388  
                       l462 166A                         l552 374E                         l395 3462  
                       l790 3078                __CFG_CPB$OFF 000000                         _PR2 000FBB  
              __CFG_CPD$OFF 000000                         _Uin 00DE                         _pad 3432  
                       _dty 00EC                ___awmod@sign 0006                         wreg 000FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                __CFG_LVP$OFF 000000  
              ___fltol@exp1 0031                        l1120 28DE                        l1121 28DA  
                      l1109 2870                        l1070 2606                        l1054 2534  
                      l1055 2512                        l1080 2668                        l1139 1DEC  
                      l1235 2C72                        l1156 208A                        l1148 2004  
                      l1180 2CBA                        l1149 2000                        l1079 266C  
                      l1247 2A9C                        l1327 3D54                        l3201 2466  
                      l4001 1214                        l1187 2D38                        l4011 1292  
                      l3213 248A                        l3205 246A                        l4013 12E0  
                      l3135 33AA                        l4007 1258                        l3401 312C  
                      l3145 3E34                        l3153 3F32                        l4105 1662  
                      l4033 1392                        l4017 131C                        l3307 262A  
                      l3323 264A                        l3243 24C6                        l3411 3176  
                      l3155 3F36                        l4131 1734                        l4107 1684  
                      l3317 2640                        l3181 2422                        l3405 3136  
                      l3149 3E4A                        l4221 198A                        l4205 192A  
                      l4029 1370                        l3511 27A2                        l3503 276E  
                      l3351 26D8                        l3343 26B2                        l3271 2558  
                      l3255 2520                        l4119 1706                        l4047 13E0  
                      l4039 1398                        l3281 257E                        l3257 2524  
                      l3177 241E                        l3417 3BD8                        l4065 1426  
                      l4049 13E4                        l4251 2BA8                        l4235 2B4E  
                      l3355 26E0                        l3435 29FE                        l4139 1754  
                      l4147 1778                        l4155 1810                        l4091 15CC  
                      l4075 1460                        l4083 1556                        l4059 1402  
                      l4315 1A88                        l4501 389A                        l3621 1DAC  
                      l3525 27D0                        l3517 27B8                        l4261 2C12  
                      l4253 2BB0                        l4245 2B98                        l4237 2B52  
                      l3357 26E2                        l3453 2B2A                        l3445 2ABE  
                      l3381 346C                        l4069 1436                        l4317 1AA6  
                      l3543 2848                        l3535 2820                        l4255 2BB6  
                      l3279 257A                        l3375 344C                        l4183 189E  
                      l4167 1852                        l4343 1BE2                        l4335 1B86  
                      l4319 1AB4                        l4431 3B58                        l4441 370C  
                      l3713 2048                        l3617 1D98                        l4521 2CCA  
                      l3561 28A4                        l4257 2BDE                        l3801 38FE  
                      l3289 2590                        l3449 2AFC                        l3385 3484  
                      l4185 18A8                        l4097 160A                        l4281 331A  
                      l4451 3740                        l3635 1DD8                        l3619 1D9C  
                      l4531 2CFA                        l3555 2886                        l3483 272E  
                      l3803 3906                        l3299 25F6                        l3379 345A  
                      l4195 18FE                        l4283 3328                        l4363 1CDA  
                      l4347 1C0C                        l3717 2066                        l3645 1E0A  
                      l3637 1DDC                        l4541 2D6A                        l4533 2D20  
                      l3581 2922                        l3549 286E                        l3901 320C  
                      l3813 3928                        l3389 34B2                        l4373 1D20  
                      l4429 3B32                        ?_pad 0011                        l4439 3700  
                      l4527 2CE8                        l3479 272A                        l3841 3018  
                      l3729 20A8                        l4529 2CEE                        l3585 2946  
                      l3761 3590                        l3817 3936                        l3809 391E  
                      l3833 3552                        l3825 3500                        l4369 1D16  
                      l4539 2D5E                        l3595 297C                        l3499 276A  
                      l4643 2EC8                        l3907 3228                        l4723 3674  
                      l3763 3598                        l3755 357A                        l4379 1D38  
                      l3845 304C                        l3693 1FCA                        l4557 2DAA  
                      l3597 297E                        l3589 2970                        l3781 35D0  
                      l3773 35B8                        l3749 356A                        l3829 3534  
                      l4805 2140                        l4487 3CEA                        l3855 30B0  
                      l3687 1FAC                        l4727 3680                        l4735 35F2  
                      l3919 3E22                        l3863 3F16                        l4497 3864  
                      l3849 3062                        l3873 319E                        l3777 35C2  
                      l3793 38E4                        l3945 1096                        l4833 21BA  
                      l4683 2FCA                        l4739 35FE                        l4819 217C  
                      l3893 31F8                        l3797 38F0                        l3957 10C4  
                      l3965 10DA                        l4853 2272                        l3975 1146  
                      l3983 118E                        l4791 2104                        l3889 31E8  
                      l3993 11FA                        l3977 115E                        l4881 238C  
                      l4865 22DE                        l3899 3200                        l3979 1168  
                      STR_1 1020                        STR_2 100E                        STR_3 103C  
                      STR_4 101B                        STR_5 1042                        STR_6 1001  
                      STR_7 103F                        STR_8 101B                        STR_9 1035  
                      u3010 264E                        _LATA 000F89                        u3030 2662  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        u4110 3212                        u3310 29CC  
                      u5000 3892                        u3240 316E                        u3320 29EC  
                      u4200 111C                        u5010 38C8                        u3410 3EF2  
                      u3090 26BE                        u3250 3170                        u4210 111E  
                      u3235 3150                        u3315 29C2                        u4060 318C  
                      u3420 3EF4                        u4140 3E1E                        u3260 3C12  
                      u4070 31BC                        u3190 30F2                        u5007 3888  
                      u3360 2A7C                        u2720 3EC2                        u3280 3D3A  
                      u4320 137E                        u4240 11D0                        u5017 38BE  
                      u3345 2A16                        u3346 2A1C                        u2730 3EC4  
                      u3290 3D3C                        u4250 11D2                        u4170 10B4  
                      u4075 31B2                        u3195 30E8                        u3347 2A2A  
                      u3267 3C08                        u3380 2ADC                        u3365 2A72  
                      u3630 2930                        u2830 24E8                        u2670 33A2  
                      u4350 13B0                        u3640 2954                        u5160 366C  
                      u2840 24F8                        u3385 2AD2                        u3730 1DF8  
                      u5090 2D74                        u2850 24FA                        u2690 33EA  
                      u4290 1344                        u3820 2056                        u3740 1F6E  
                      u5180 35EA                        u4700 2C42                        u4620 1914  
                      u5260 2260                        u5317 2126                        u3830 2074  
                      u3590 28D4                        u4710 2C44                        u4390 13FE  
                      u5407 2ED2                        u5327 2138                        u2880 253C  
                      u4640 1974                        u4560 1834                        u3745 1F64  
                      u5417 3244                        u5337 2162                        u4650 1976  
                      u5290 237A                        u5507 3B0E                        u5427 3258  
                      u5347 2174                        u3780 1FFA                        u3940 390A  
                      u4900 1C90                        u4820 1AEC                        u5517 37EE  
                      u5437 2EEC                        u5357 21A0                        u4830 1AEE  
                      u5527 3808                        u5447 2F00                        u5367 21B2  
                      u4680 2B94                        u3880 359C                        u4840 1AFA  
                      u5537 381E                        u5457 2FA0                        u5377 2DC6  
                      u5547 3D8E                        u5467 2FD4                        u5387 2DDA  
                      u4780 336E                        u5477 3962                        u5397 2E9E  
                      u4950 3710                        u3990 354E                        u5487 399C  
                      u5497 3AF0                        u4890 1C8E                        u4975 3A96  
                      _Iout 00D6                        _Uout 00DA                        _data 00F2  
         ?_Lcd_Write_String 0008                        _dbuf 0100                        _atoi 2B3C  
                      _main 20BE                        _prec 00E6                        _tens 00C6  
                      _nout 00E2                        pad@i 0018                        pad@p 0015  
                      fsr0h 000FEA                        fsr1h 000FE2                        indf0 000FEF  
                      fsr2h 000FDA                        fsr0l 000FE9                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 001A                        fsr2l 000FD9  
             __CFG_BORV$190 000000               ___fpclassifyf 30B4                        prodh 000FF4  
                      prodl 000FF3                        start 0000          ??_Lcd_Write_String 000A  
             __CFG_IESO$OFF 000000             ___fldiv@new_exp 0012             __end_of_Lcd_Cmd 3DA6  
              _tolower$1396 000D                ___param_bank 000000                       ??_pad 0017  
          ?_I2C_Master_Init 000E            ?_I2C_Master_Wait 0001            ?_I2C_Master_Stop 0001  
              main@buck_pwm 00AE               ___fltol@sign1 0030                       ?_atoi 0008  
           __end_of___fladd 26FE                       ?_main 0001             __end_of___fldiv 2986  
           __end_of___awdiv 35DA             __end_of___flneg 3F28                       STR_10 101B  
                     STR_11 1045                       STR_12 101B                       STR_13 1048  
                     STR_22 1039                       STR_14 1025                       STR_15 102D  
                     STR_24 1039                       STR_18 1029                       STR_19 1031  
           __end_of___awmod 3940             __end_of___flmul 20BE             __end_of___flsub 3DEC  
           __end_of___fltol 323A             __end_of___lldiv 3760             ___awdiv@divisor 0003  
                     _T2CON 000FBA             ___awdiv@counter 0005                vfpfcnvrt@fmt 0042  
                     _PORTA 000F80                       _PORTB 000F81                       _PORTC 000F82  
                     _PORTD 000F83                       _PORTE 000F84                 _write_Power 3760  
   __size_of_Lcd_Set_Cursor 0050                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
             __CFG_WRT0$OFF 000000               main@Power_new 00B6               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000                       _flags 00E8  
                     _fputc 3392                       _fputs 3E2A             __end_of_isdigit 3EFA  
        __CFG_MCLRE$EXTMCLR 000000                       atoi@n 0015                       pad@fp 0011  
                     atoi@s 0008                       _str_A 0158                       _width 00E4  
                     _str_P 0150                       _putch 4028                       _str_V 00F4  
           __end_of_isspace 3E2A              __CFG_BOREN$OFF 000000             __end_of_isupper 3ECA  
                     tablat 000FF5                       status 000FD8             __end_of_sprintf 3CC2  
            ?___fpclassifyf 0001             __end_of_tolower 3D5E              __CFG_HFOFST$ON 000000  
           __end_of_strncmp 3392              __CFG_PBADEN$ON 000000            __end_of_Lcd_Init 385A  
          __end_of_Lcd_Port 3FBC             __initialization 3F78                __end_of_atoi 2C7C  
              __end_of_main 23F2                  _Cursor_Off 3FF4                      ??_atoi 000A  
                    ??_main 005E          __size_of_Lcd_Clear 000E               __activetblptr 000002  
            __CFG_PLLCFG$ON 000000           ?_I2C_Master_Start 0001          ??_I2C_Master_Start 0002  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 000FC4  
                    _CCPR1L 000FBE                      _CCPR2L 000F67            ___awdiv@dividend 0001  
                    _ANSELA 000F38                      ?_putch 0001                      _ANSELB 000F39  
                    _ANSELC 000F3A                      _ANSELD 000F3B                      _ANSELE 000F3C  
            __CFG_WDTEN$OFF 000000                      _OSCCON 000FD3                   ??_Lcd_Cmd 0005  
   __size_of_Lcd_Write_Char 0058                      _SSPBUF 000FC9            __end_of___xxtofl 2DBC  
            __CFG_XINST$OFF 000000                vfprintf@cfmt 005C                      ___flge 2FE4  
                    ___fleq 34CC                   ??___fladd 0009                      ___wmul 3F52  
                 ??___fldiv 0009                   ??___awdiv 0005                   ??___flneg 0005  
                 ??___awmod 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 002C                   ??___lldiv 0009                      _efgtoa 104C  
                    _config 3C1C                      _floorf 2986            __end_of_read_Uin 32F0  
                    clear_0 3F7E                      clear_1 3F8A            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      _tens_A 00CE             ___awmod@counter 0005  
                    pad@buf 0013             _init_io_display 3940                      _strcpy 3BC8  
                    _strlen 3F28                      fputc@c 0001            __end_of_set_buck 365C  
                    fputs@c 000E                      fputs@i 000F                      fputs@s 000A  
                 ??_isdigit 0003             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                   ??_isspace 0003  
                    tblptrh 000FF7                   ??_isupper 0003                      tblptrl 000FF6  
                    tblptru 000FF8            __end_of_pwm_init 3E9A                      putch@c 0001  
          __end_of_vfprintf 3B74                   ??_sprintf 005E                   ??_tolower 0009  
                 ??_strncmp 0007             Lcd_Set_Cursor@a 000C             Lcd_Set_Cursor@b 000B  
           Lcd_Set_Cursor@y 000E             Lcd_Set_Cursor@z 000D                  ___flge@ff1 0028  
                ___flge@ff2 002C             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 3F90  
                ___flneg@f1 0001           __end_of_Lcd_Clear 3FF4               ___rparam_used 000001  
                ___fltol@f1 0028              __pcstackCOMRAM 0001                  _adc_config 4002  
             __end_of_fputc 3432               __end_of_fputs 3E62                 ?_Cursor_Off 0001  
             __end_of_putch 402A              _Lcd_Set_Cursor 3CC2                   ?_Lcd_Init 0001  
                 ?_Lcd_Port 0001                     ??_fputc 0005                     ??_fputs 000E  
                   ??_putch 0001                  __pbssBANK0 00BA                  __pbssBANK1 0100  
        __size_of_read_Iout 0102          __size_of_read_Uout 0126                  _efgtoa$780 0066  
                _efgtoa$790 006C                  _efgtoa$791 006E                  _efgtoa$785 0068  
                _efgtoa$779 0064                  _efgtoa$789 006A          __CFG_CCP2MX$PORTC1 000000  
   __end_of_init_io_display 39AC                     ?___flge 0028                     ?___fleq 0001  
                   ?___wmul 0001          __CFG_CCP3MX$PORTB5 000000                     ?_efgtoa 0034  
                   ?_config 0001                     _CCP1CON 000FBD           _I2C_Write_Display 400E  
                   _CCP2CON 000F66                     ?_floorf 001A   __size_of_Lcd_Write_String 0076  
    __end_of_Lcd_Set_Cursor 3D12          __size_of_set_boost 0082          ?_I2C_Write_Display 0002  
                   ?_strcpy 0001                     ?_strlen 0001                ?_write_Power 0001  
                 ?___xxtofl 0001          __size_of_vfpfcnvrt 03A4           __CFG_PRICLKEN$OFF 000000  
       ??_I2C_Write_Display 0004                  ??_Lcd_Init 000B                     _SSP1ADD 000FC8  
                   _SSP1BUF 000FC9                  ??_Lcd_Port 0004              _Lcd_Write_Char 3AC6  
                   _Lcd_Cmd 3D5E         __size_of_Cursor_Off 000E                   ?_read_Uin 0001  
        __size_of_write_Uin 0060             __CFG_PWRTEN$OFF 000000                     __Hparam 0000  
                   __Lparam 0000                   ?_set_buck 0032                     _Power_a 00C2  
 __end_of_I2C_Write_Display 4018                 ?_adc_config 0001             __size_of___flge 00D0  
           __size_of___fleq 008A                     ___fladd 23F2                     ___fldiv 26FE  
                   ___awdiv 3556                     ___flneg 3EFA                     ___awmod 38D0  
                   ___flmul 1D6C                     ___flsub 3DA6                     ___fltol 3180  
                   ___lldiv 36DE             __size_of___wmul 0026                   ?_pwm_init 0034  
                 ?_vfprintf 0056                __psmallconst 1000             __size_of_efgtoa 097C  
           __size_of_config 0054             __CFG_STVREN$OFF 000000             __size_of_floorf 01B6  
                   __pcinit 3F78                     __ramtop 1000             ?_Lcd_Set_Cursor 000B  
                   __ptext0 20BE                     __ptext1 3B74                     __ptext2 39AC  
                   __ptext3 3760                     __ptext4 3A0C                     __ptext5 3C70  
                   __ptext6 3B1E                     __ptext7 19C8                     __ptext8 32F0  
                   __ptext9 104C                 set_buck@dty 0032             __size_of_strcpy 0054  
           __size_of_strlen 002A           __end_of_read_Iout 2FE4                __size_of_pad 009A  
                   _isdigit 3ECA           __end_of_read_Uout 2EE2                  ??___xxtofl 0005  
          ___awmod@dividend 0001                     _isspace 3DEC                     _isupper 3E9A  
  __size_of_I2C_Master_Init 005A                     efgtoa@c 003A                     efgtoa@d 0078  
                   efgtoa@e 0090                     efgtoa@f 0036                     efgtoa@g 008C  
                   efgtoa@h 0082                     efgtoa@i 008A                     efgtoa@l 0086  
                   efgtoa@m 0074                     efgtoa@n 0092                     efgtoa@p 007C  
                   efgtoa@t 0070                     efgtoa@u 0094                     efgtoa@w 007F  
  __size_of_I2C_Master_Wait 0012    __size_of_I2C_Master_Stop 0008                     atoi@neg 000E  
                   main@Uin 00AA                     _sprintf 3C70                     _tolower 3D12  
    __end_of_Lcd_Write_Char 3B1E                     _strncmp 32F0        end_of_initialization 3F90  
                   floorf@e 0028                     floorf@m 0024                     floorf@u 002A  
                   floorf@x 001A                     fputc@fp 0003                  ??_read_Uin 0028  
             __Lmediumconst 0000                     fputs@fp 000C           __end_of_set_boost 36DE  
 __size_of_I2C_Master_Start 0008             ___lldiv@divisor 0005             ___lldiv@counter 000D  
                ??_set_buck 0034           __end_of_vfpfcnvrt 1D6C                  efgtoa@mode 0081  
                efgtoa@sign 007A            I2C_Master_Init@c 000E            ?_init_io_display 0001  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  ??_pwm_init 0038                  ??_vfprintf 005C  
                   strcpy@d 0009                     strlen@a 0003                     strcpy@s 0007  
                   strlen@s 0001                 ___fladd@grs 0010           __end_of_write_Uin 3A0C  
             ___xxtofl@sign 0009                   _TRISCbits 000F94                  _pwm_config 3FBC  
               ___fldiv@grs 0014                 ___fldiv@rem 000D             ?_Lcd_Write_Char 0001  
       __size_of_adc_config 000C           Lcd_Write_String@a 0008           Lcd_Write_String@i 000C  
               ___flmul@grs 001C                   _Lcd_Clear 3FE6  __size_of_I2C_Write_Display 000A  
            __end_of___flge 30B4              __end_of___fleq 3556                ??_Cursor_Off 000B  
                _write_Iout 3A0C                 vfpfcnvrt@ap 0044                 vfpfcnvrt@ct 0052  
               vfpfcnvrt@fp 0040              __end_of___wmul 3F78                  _write_Uout 3B74  
          _Lcd_Write_String 385A              __end_of_efgtoa 19C8              __end_of_config 3C70  
            __end_of_floorf 2B3C                  floorf@F524 00BA              __end_of_strcpy 3C1C  
            __end_of_strlen 3F52         start_initialization 3F78        __size_of_write_Power 007E  
               __end_of_pad 34CC                 pwm_init@Uin 0034           __size_of_Lcd_Init 007C  
         __size_of_Lcd_Port 0022           ??_I2C_Master_Init 0012           ??_I2C_Master_Wait 0001  
         ??_I2C_Master_Stop 0002       __end_of___fpclassifyf 3180          __end_of_Cursor_Off 4002  
               vfprintf@fmt 0058                  ?_Lcd_Clear 0001                    ??___flge 0030  
                  ??___fleq 0009                    ??___wmul 0005                    ??_efgtoa 003B  
                  ??_config 0001                    ??_floorf 001E             Lcd_Write_Char@a 0005  
           Lcd_Write_Char@y 0006                    ??_strcpy 0005                    ??_strlen 0003  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 0005  
                 ___fldiv@b 0001                   ___flmul@a 0013                   ___flmul@b 000F  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 0060  
               ?_pwm_config 0001           __size_of___xxtofl 0140                    ?_Lcd_Cmd 0001  
                 _atoi$1280 0010                   _atoi$1281 0014                   _atoi$1282 0012  
          _I2C_Master_Start 4020           __size_of_read_Uin 00B6            ??_Lcd_Set_Cursor 000C  
              ??_adc_config 0001                    ?___fladd 0001                    ?___fldiv 0001  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 000F                    ?___flsub 0028                    ?___fltol 0028  
                  ?___lldiv 0001           __size_of_set_buck 0082                 ?_write_Iout 0001  
               ?_write_Uout 0001           __size_of_pwm_init 0038           __size_of_vfprintf 0056  
                 _boost_pwm 00EE                 __smallconst 1000                    ?_isdigit 0001  
                  ?_isspace 0001                    ?_isupper 0001                    _CCPTMRS0 000F49  
                 _read_Iout 2EE2                   _read_Uout 2DBC                    ?_sprintf 0098  
                  ?_tolower 0007              __size_of_fputc 00A0              __size_of_fputs 0038  
                  ?_strncmp 0001              __size_of_putch 0002          __end_of_adc_config 400E  
            ___wmul@product 0005                    _PIE1bits 000F9D                   _rez_adc_A 00D2  
                 _rez_adc_U 00CA                    Lcd_Cmd@a 000A                   _set_boost 365C  
               ??_Lcd_Clear 000B            __CFG_WDTPS$32768 000000         __size_of_pwm_config 0018  
                  _SSP1CON1 000FC6                    _SSP1CON2 000FC5                    _SSP1STAT 000FC7  
                 _vfpfcnvrt 19C8                  _ADCON0bits 000FC2                  _ADCON2bits 000FC0  
         ___wmul@multiplier 0001                   main@Power 00B2            ??_Lcd_Write_Char 0005  
              _isspace$1311 0007                    _Lcd_Init 37DE                    _Lcd_Port 3F9A  
                ?_read_Iout 0001                  vfpfcnvrt@c 0055                  vfpfcnvrt@f 004E  
                 _write_Uin 39AC                  ?_read_Uout 0001    __end_of_Lcd_Write_String 38D0  
       __size_of_write_Iout 0060         __size_of_write_Uout 0054            __size_of_Lcd_Cmd 0048  
              Lcd_Port@data 0004                    __Hrparam 0000                  ?_set_boost 0032  
                vfprintf@ap 005A                    __Lrparam 0000                  vfprintf@fp 0056  
         __CFG_P2BMX$PORTD2 000000            __size_of___fladd 030C            __size_of___fldiv 0288  
          __size_of___awdiv 0084            __size_of___flneg 002E            __size_of___awmod 0070  
          __size_of___flmul 0352            __size_of___flsub 0046            __size_of___fltol 00BA  
          __size_of___lldiv 0082                  ?_vfpfcnvrt 0040          ___fpclassifyf@F463 00BE  
  __size_of_init_io_display 006C                  sprintf@fmt 009A             _I2C_Master_Init 3A6C  
                  ___xxtofl 2C7C             _I2C_Master_Wait 3FD4             _I2C_Master_Stop 4018  
          __size_of_isdigit 0030            __size_of_isspace 003E                    __ptext10 3D12  
                  __ptext11 3E9A                    __ptext20 3DA6                    __ptext12 3BC8  
                  __ptext21 23F2                    __ptext13 3432                    __ptext30 35DA  
                  __ptext22 3EFA                    __ptext14 3F28                    __ptext31 365C  
                  __ptext23 34CC                    __ptext15 3E2A                    __ptext40 2FE4  
                  __ptext32 3180                    __ptext24 38D0                    __ptext16 3392  
                  __ptext41 3FBC                    __ptext33 2DBC                    __ptext25 3556  
                  __ptext17 4028                    __ptext50 3FF4                    __ptext42 3940  
                  __ptext34 323A                    __ptext26 2B3C                    __ptext18 2986  
                  __ptext51 3D5E                    __ptext43 385A                    __ptext35 26FE  
                  __ptext27 3DEC                    __ptext19 30B4                    __ptext52 3F9A  
                  __ptext44 3AC6                    __ptext36 2EE2                    __ptext28 3ECA  
                  __ptext53 400E                    __ptext45 3CC2                    __ptext37 2C7C  
                  __ptext29 3F52                    __ptext54 4018                    __ptext46 37DE  
                  __ptext38 1D6C                    __ptext55 4020                    __ptext47 3FE6  
                  __ptext39 3E62                    __ptext56 3FD4                    __ptext48 3A6C  
                  __ptext57 3C1C                    __ptext49 36DE                    __ptext58 4002  
          __size_of_isupper 0030                _SSP1CON2bits 000FC5                  ?_write_Uin 0001  
                  _buck_pwm 00F0            __size_of_sprintf 0052            __size_of_tolower 004C  
                strcpy@dest 0001            __size_of_strncmp 00A2                 Lcd_Cmd@buff 0008  
                  _read_Uin 323A               __size_of_atoi 0140               __size_of_main 0334  
              set_boost@dty 0032                    _set_buck 35DA                    efgtoa@fp 0034  
                  efgtoa@ne 0076                    efgtoa@pp 0072                    efgtoa@ou 0060  
                  _pwm_init 3E62                    _vfprintf 3B1E                    main@port 00B0  
             ??_write_Power 005E    __end_of_I2C_Master_Start 4028                 _OSCTUNEbits 000F9B  
                _INTCONbits 000FF2                ??_pwm_config 0001                    isdigit@c 0001  
               ??_read_Iout 0034                 ??_read_Uout 0034          Lcd_Write_Char@temp 0007  
                 sprintf@ap 00A2                    isspace@c 0001            ___lldiv@dividend 0001  
                 strcpy@src 0003                    isupper@c 0001                   strncmp@_l 0001  
                 strncmp@_r 0003                 ??_set_boost 0034                 efgtoa@nmode 007E  
        __end_of_pwm_config 3FD4                ??_write_Iout 005E     __end_of_I2C_Master_Init 3AC6  
              ??_write_Uout 005E     __end_of_I2C_Master_Wait 3FE6     __end_of_I2C_Master_Stop 4020  
               ??_vfpfcnvrt 0046               _vfpfcnvrt$805 004A               _vfpfcnvrt$809 004C  
        Lcd_Set_Cursor@temp 000F                    sprintf@f 00A4                    tolower@c 0007  
                  sprintf@s 0098      __size_of___fpclassifyf 00CC            ___lldiv@quotient 0009  
                  strncmp@l 0008                    strncmp@n 0005                    strncmp@r 000A  
         __CFG_T3CMX$PORTC0 000000                 ??_write_Uin 005E               ___fladd@signs 000D  
       __end_of_write_Power 37DE           ??_init_io_display 0016                ___fladd@aexp 000E  
              ___fladd@bexp 000F          __end_of_write_Iout 3A6C           __CFG_FOSC$INTIO67 000000  
        __end_of_write_Uout 3BC8  
