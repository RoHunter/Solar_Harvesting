

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 30 18:56:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F46K22 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     _CCPTMRS0	set	3913
   107  0000                     _ANSELE	set	3900
   108  0000                     _ANSELD	set	3899
   109  0000                     _ANSELC	set	3898
   110  0000                     _ANSELB	set	3897
   111  0000                     _ANSELA	set	3896
   112  0000                     _ADCON0bits	set	4034
   113  0000                     _ADCON0	set	4034
   114  0000                     _ADRESH	set	4036
   115  0000                     _CCPR1L	set	4030
   116  0000                     _CCPR2L	set	3943
   117  0000                     _SSPBUF	set	4041
   118  0000                     _SSP1BUF	set	4041
   119  0000                     _SSP1CON2bits	set	4037
   120  0000                     _SSP1STAT	set	4039
   121  0000                     _SSP1ADD	set	4040
   122  0000                     _SSP1CON2	set	4037
   123  0000                     _SSP1CON1	set	4038
   124  0000                     _PIE1bits	set	3997
   125  0000                     _INTCONbits	set	4082
   126  0000                     _TRISCbits	set	3988
   127  0000                     _ADCON2bits	set	4032
   128  0000                     _ADCON2	set	4032
   129  0000                     _ADCON1	set	4033
   130  0000                     _PR2	set	4027
   131  0000                     _T2CON	set	4026
   132  0000                     _CCP1CON	set	4029
   133  0000                     _CCP2CON	set	3942
   134  0000                     _OSCTUNEbits	set	3995
   135  0000                     _OSCCON	set	4051
   136  0000                     _LATE	set	3981
   137  0000                     _LATD	set	3980
   138  0000                     _LATC	set	3979
   139  0000                     _LATB	set	3978
   140  0000                     _LATA	set	3977
   141  0000                     _PORTE	set	3972
   142  0000                     _PORTD	set	3971
   143  0000                     _PORTC	set	3970
   144  0000                     _PORTB	set	3969
   145  0000                     _PORTA	set	3968
   146  0000                     _TRISE	set	3990
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISB	set	3987
   150  0000                     _TRISA	set	3986
   151                           
   152                           	psect	smallconst
   153  001000                     __psmallconst:
   154                           	opt callstack 0
   155  001000  00                 	db	0
   156  001001                     STR_6:
   157  001001  4F                 	db	79	;'O'
   158  001002  76                 	db	118	;'v'
   159  001003  65                 	db	101	;'e'
   160  001004  72                 	db	114	;'r'
   161  001005  20                 	db	32
   162  001006  56                 	db	86	;'V'
   163  001007  6F                 	db	111	;'o'
   164  001008  6C                 	db	108	;'l'
   165  001009  74                 	db	116	;'t'
   166  00100A  61                 	db	97	;'a'
   167  00100B  67                 	db	103	;'g'
   168  00100C  65                 	db	101	;'e'
   169  00100D  00                 	db	0
   170  00100E                     STR_2:
   171  00100E  4F                 	db	79	;'O'
   172  00100F  76                 	db	118	;'v'
   173  001010  65                 	db	101	;'e'
   174  001011  72                 	db	114	;'r'
   175  001012  20                 	db	32
   176  001013  43                 	db	67	;'C'
   177  001014  75                 	db	117	;'u'
   178  001015  72                 	db	114	;'r'
   179  001016  72                 	db	114	;'r'
   180  001017  65                 	db	101	;'e'
   181  001018  6E                 	db	110	;'n'
   182  001019  74                 	db	116	;'t'
   183  00101A  00                 	db	0
   184  00101B                     STR_4:
   185  00101B  25                 	db	37
   186  00101C  2E                 	db	46
   187  00101D  32                 	db	50	;'2'
   188  00101E  66                 	db	102	;'f'
   189  00101F  00                 	db	0
   190  001020                     STR_1:
   191  001020  54                 	db	84	;'T'
   192  001021  65                 	db	101	;'e'
   193  001022  73                 	db	115	;'s'
   194  001023  74                 	db	116	;'t'
   195  001024  00                 	db	0
   196  001025                     STR_14:
   197  001025  49                 	db	73	;'I'
   198  001026  4E                 	db	78	;'N'
   199  001027  46                 	db	70	;'F'
   200  001028  00                 	db	0
   201  001029                     STR_18:
   202  001029  4E                 	db	78	;'N'
   203  00102A  41                 	db	65	;'A'
   204  00102B  4E                 	db	78	;'N'
   205  00102C  00                 	db	0
   206  00102D                     STR_15:
   207  00102D  69                 	db	105	;'i'
   208  00102E  6E                 	db	110	;'n'
   209  00102F  66                 	db	102	;'f'
   210  001030  00                 	db	0
   211  001031                     STR_19:
   212  001031  6E                 	db	110	;'n'
   213  001032  61                 	db	97	;'a'
   214  001033  6E                 	db	110	;'n'
   215  001034  00                 	db	0
   216  001035                     STR_9:
   217  001035  55                 	db	85	;'U'
   218  001036  69                 	db	105	;'i'
   219  001037  3D                 	db	61	;'='
   220  001038  00                 	db	0
   221  001039                     STR_22:
   222  001039  6C                 	db	108	;'l'
   223  00103A  66                 	db	102	;'f'
   224  00103B  00                 	db	0
   225  00103C                     STR_3:
   226  00103C  49                 	db	73	;'I'
   227  00103D  3D                 	db	61	;'='
   228  00103E  00                 	db	0
   229  00103F                     STR_7:
   230  00103F  55                 	db	85	;'U'
   231  001040  3D                 	db	61	;'='
   232  001041  00                 	db	0
   233  001042                     STR_5:
   234  001042  20                 	db	32
   235  001043  41                 	db	65	;'A'
   236  001044  00                 	db	0
   237  001045                     STR_11:
   238  001045  20                 	db	32
   239  001046  56                 	db	86	;'V'
   240  001047  00                 	db	0
   241  001048  20                 	db	32
   242  001049  57                 	db	87	;'W'
   243  00104A  00                 	db	0
   244  0000                     
   245                           ; #config settings
   246  00104B  00                 	db	0	; dummy byte at the end
   247  0000                     
   248                           	psect	cinit
   249  003EF6                     __pcinit:
   250                           	opt callstack 0
   251  003EF6                     start_initialization:
   252                           	opt callstack 0
   253  003EF6                     __initialization:
   254                           	opt callstack 0
   255                           
   256                           ; Clear objects allocated to BANK1 (96 bytes)
   257  003EF6  EE01  F000         	lfsr	0,__pbssBANK1
   258  003EFA  0E60               	movlw	96
   259  003EFC                     clear_0:
   260  003EFC  6AEE               	clrf	postinc0,c
   261  003EFE  06E8               	decf	wreg,f,c
   262  003F00  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (66 bytes)
   265  003F02  EE00  F0BA         	lfsr	0,__pbssBANK0
   266  003F06  0E42               	movlw	66
   267  003F08                     clear_1:
   268  003F08  6AEE               	clrf	postinc0,c
   269  003F0A  06E8               	decf	wreg,f,c
   270  003F0C  E1FD               	bnz	clear_1
   271  003F0E                     end_of_initialization:
   272                           	opt callstack 0
   273  003F0E                     __end_of__initialization:
   274                           	opt callstack 0
   275  003F0E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  003F10  6EF8               	movwf	tblptru,c
   277  003F12  0100               	movlb	0
   278  003F14  EF5F  F010         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssBANK0
   281  0000BA                     __pbssBANK0:
   282                           	opt callstack 0
   283  0000BA                     floorf@F524:
   284                           	opt callstack 0
   285  0000BA                     	ds	4
   286  0000BE                     ___fpclassifyf@F463:
   287                           	opt callstack 0
   288  0000BE                     	ds	4
   289  0000C2                     _Power:
   290                           	opt callstack 0
   291  0000C2                     	ds	4
   292  0000C6                     _tens:
   293                           	opt callstack 0
   294  0000C6                     	ds	4
   295  0000CA                     _rez_adc_U:
   296                           	opt callstack 0
   297  0000CA                     	ds	4
   298  0000CE                     _tens_A:
   299                           	opt callstack 0
   300  0000CE                     	ds	4
   301  0000D2                     _rez_adc_A:
   302                           	opt callstack 0
   303  0000D2                     	ds	4
   304  0000D6                     _Iout:
   305                           	opt callstack 0
   306  0000D6                     	ds	4
   307  0000DA                     _Uout:
   308                           	opt callstack 0
   309  0000DA                     	ds	4
   310  0000DE                     _Uin:
   311                           	opt callstack 0
   312  0000DE                     	ds	4
   313  0000E2                     _nout:
   314                           	opt callstack 0
   315  0000E2                     	ds	2
   316  0000E4                     _width:
   317                           	opt callstack 0
   318  0000E4                     	ds	2
   319  0000E6                     _prec:
   320                           	opt callstack 0
   321  0000E6                     	ds	2
   322  0000E8                     _flags:
   323                           	opt callstack 0
   324  0000E8                     	ds	2
   325  0000EA                     _c:
   326                           	opt callstack 0
   327  0000EA                     	ds	2
   328  0000EC                     _dty:
   329                           	opt callstack 0
   330  0000EC                     	ds	2
   331  0000EE                     _boost_pwm:
   332                           	opt callstack 0
   333  0000EE                     	ds	2
   334  0000F0                     _buck_pwm:
   335                           	opt callstack 0
   336  0000F0                     	ds	2
   337  0000F2                     _data:
   338                           	opt callstack 0
   339  0000F2                     	ds	2
   340  0000F4                     _str_V:
   341                           	opt callstack 0
   342  0000F4                     	ds	8
   343                           
   344                           	psect	bssBANK1
   345  000100                     __pbssBANK1:
   346                           	opt callstack 0
   347  000100                     _dbuf:
   348                           	opt callstack 0
   349  000100                     	ds	80
   350  000150                     _str_P:
   351                           	opt callstack 0
   352  000150                     	ds	8
   353  000158                     _str_A:
   354                           	opt callstack 0
   355  000158                     	ds	8
   356                           
   357                           	psect	cstackBANK0
   358  000060                     __pcstackBANK0:
   359                           	opt callstack 0
   360  000060                     efgtoa@ou:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x0
   364  000060                     	ds	4
   365  000064                     _efgtoa$775:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x4
   369  000064                     	ds	2
   370  000066                     _efgtoa$776:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x6
   374  000066                     	ds	2
   375  000068                     _efgtoa$781:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x8
   379  000068                     	ds	2
   380  00006A                     _efgtoa$785:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0xA
   384  00006A                     	ds	2
   385  00006C                     _efgtoa$786:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0xC
   389  00006C                     	ds	2
   390  00006E                     _efgtoa$787:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0xE
   394  00006E                     	ds	2
   395  000070                     efgtoa@t:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x10
   399  000070                     	ds	2
   400  000072                     efgtoa@pp:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x12
   404  000072                     	ds	2
   405  000074                     efgtoa@m:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x14
   409  000074                     	ds	2
   410  000076                     efgtoa@ne:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x16
   414  000076                     	ds	2
   415  000078                     efgtoa@d:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0x18
   419  000078                     	ds	2
   420  00007A                     efgtoa@sign:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x1A
   424  00007A                     	ds	2
   425  00007C                     efgtoa@p:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x1C
   429  00007C                     	ds	2
   430  00007E                     efgtoa@nmode:
   431                           	opt callstack 0
   432                           
   433                           ; 1 bytes @ 0x1E
   434  00007E                     	ds	1
   435  00007F                     efgtoa@w:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x1F
   439  00007F                     	ds	2
   440  000081                     efgtoa@mode:
   441                           	opt callstack 0
   442                           
   443                           ; 1 bytes @ 0x21
   444  000081                     	ds	1
   445  000082                     efgtoa@h:
   446                           	opt callstack 0
   447                           
   448                           ; 4 bytes @ 0x22
   449  000082                     	ds	4
   450  000086                     efgtoa@l:
   451                           	opt callstack 0
   452                           
   453                           ; 4 bytes @ 0x26
   454  000086                     	ds	4
   455  00008A                     efgtoa@i:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x2A
   459  00008A                     	ds	2
   460  00008C                     efgtoa@g:
   461                           	opt callstack 0
   462                           
   463                           ; 4 bytes @ 0x2C
   464  00008C                     	ds	4
   465  000090                     efgtoa@e:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x30
   469  000090                     	ds	2
   470  000092                     efgtoa@n:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x32
   474  000092                     	ds	2
   475  000094                     efgtoa@u:
   476                           	opt callstack 0
   477                           
   478                           ; 4 bytes @ 0x34
   479  000094                     	ds	4
   480  000098                     ?_sprintf:
   481                           	opt callstack 0
   482  000098                     sprintf@s:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x38
   486  000098                     	ds	2
   487  00009A                     sprintf@fmt:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x3A
   491  00009A                     	ds	8
   492  0000A2                     sprintf@ap:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x42
   496  0000A2                     	ds	2
   497  0000A4                     sprintf@f:
   498                           	opt callstack 0
   499                           
   500                           ; 6 bytes @ 0x44
   501  0000A4                     	ds	6
   502  0000AA                     main@Uin:
   503                           	opt callstack 0
   504                           
   505                           ; 4 bytes @ 0x4A
   506  0000AA                     	ds	4
   507  0000AE                     main@buck_pwm:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x4E
   511  0000AE                     	ds	2
   512  0000B0                     main@port:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x50
   516  0000B0                     	ds	2
   517  0000B2                     main@Power:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x52
   521  0000B2                     	ds	4
   522  0000B6                     main@Power_new:
   523                           	opt callstack 0
   524                           
   525                           ; 4 bytes @ 0x56
   526  0000B6                     	ds	4
   527                           
   528                           	psect	cstackCOMRAM
   529  000001                     __pcstackCOMRAM:
   530                           	opt callstack 0
   531  000001                     ??_I2C_Master_Wait:
   532  000001                     ?_strlen:
   533                           	opt callstack 0
   534  000001                     ?___fpclassifyf:
   535                           	opt callstack 0
   536  000001                     ?_isupper:
   537                           	opt callstack 0
   538  000001                     ?_isdigit:
   539                           	opt callstack 0
   540  000001                     ?_strncmp:
   541                           	opt callstack 0
   542  000001                     ?_isspace:
   543                           	opt callstack 0
   544  000001                     ?___wmul:
   545                           	opt callstack 0
   546  000001                     ?___awdiv:
   547                           	opt callstack 0
   548  000001                     ?___awmod:
   549                           	opt callstack 0
   550  000001                     ?___fladd:
   551                           	opt callstack 0
   552  000001                     ?___fldiv:
   553                           	opt callstack 0
   554  000001                     ?___lldiv:
   555                           	opt callstack 0
   556  000001                     ?___flneg:
   557                           	opt callstack 0
   558  000001                     ?___xxtofl:
   559                           	opt callstack 0
   560  000001                     ___wmul@multiplier:
   561                           	opt callstack 0
   562  000001                     ___awdiv@dividend:
   563                           	opt callstack 0
   564  000001                     ___awmod@dividend:
   565                           	opt callstack 0
   566  000001                     isdigit@c:
   567                           	opt callstack 0
   568  000001                     isspace@c:
   569                           	opt callstack 0
   570  000001                     isupper@c:
   571                           	opt callstack 0
   572  000001                     fputc@c:
   573                           	opt callstack 0
   574  000001                     strcpy@dest:
   575                           	opt callstack 0
   576  000001                     strlen@s:
   577                           	opt callstack 0
   578  000001                     strncmp@_l:
   579                           	opt callstack 0
   580  000001                     ___lldiv@dividend:
   581                           	opt callstack 0
   582  000001                     ___fleq@ff1:
   583                           	opt callstack 0
   584  000001                     ___flneg@f1:
   585                           	opt callstack 0
   586  000001                     ___fladd@b:
   587                           	opt callstack 0
   588  000001                     ___fldiv@b:
   589                           	opt callstack 0
   590  000001                     ___xxtofl@val:
   591                           	opt callstack 0
   592  000001                     ___fpclassifyf@x:
   593                           	opt callstack 0
   594                           
   595                           ; 4 bytes @ 0x0
   596  000001                     	ds	1
   597  000002                     I2C_Write_Display@d:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x1
   601  000002                     	ds	1
   602  000003                     ??_isupper:
   603  000003                     ??_isdigit:
   604  000003                     ??_isspace:
   605  000003                     ___wmul@multiplicand:
   606                           	opt callstack 0
   607  000003                     ___awdiv@divisor:
   608                           	opt callstack 0
   609  000003                     ___awmod@divisor:
   610                           	opt callstack 0
   611  000003                     fputc@fp:
   612                           	opt callstack 0
   613  000003                     strcpy@src:
   614                           	opt callstack 0
   615  000003                     strlen@a:
   616                           	opt callstack 0
   617  000003                     strncmp@_r:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x2
   621  000003                     	ds	1
   622  000004                     Lcd_Port@data:
   623                           	opt callstack 0
   624                           
   625                           ; 1 bytes @ 0x3
   626  000004                     	ds	1
   627  000005                     ??_fputc:
   628  000005                     ??___fpclassifyf:
   629  000005                     ??_strcpy:
   630  000005                     ??_Lcd_Cmd:
   631  000005                     ??___xxtofl:
   632  000005                     Lcd_Write_Char@a:
   633                           	opt callstack 0
   634  000005                     ___awdiv@counter:
   635                           	opt callstack 0
   636  000005                     ___awmod@counter:
   637                           	opt callstack 0
   638  000005                     ___wmul@product:
   639                           	opt callstack 0
   640  000005                     strncmp@n:
   641                           	opt callstack 0
   642  000005                     ___lldiv@divisor:
   643                           	opt callstack 0
   644  000005                     ___fleq@ff2:
   645                           	opt callstack 0
   646  000005                     ___fladd@a:
   647                           	opt callstack 0
   648  000005                     ___fldiv@a:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x4
   652  000005                     	ds	1
   653  000006                     Lcd_Write_Char@y:
   654                           	opt callstack 0
   655  000006                     ___awdiv@sign:
   656                           	opt callstack 0
   657  000006                     ___awmod@sign:
   658                           	opt callstack 0
   659                           
   660                           ; 1 bytes @ 0x5
   661  000006                     	ds	1
   662  000007                     ??_strncmp:
   663  000007                     ?_tolower:
   664                           	opt callstack 0
   665  000007                     Lcd_Write_Char@temp:
   666                           	opt callstack 0
   667  000007                     _isspace$1307:
   668                           	opt callstack 0
   669  000007                     ___awdiv@quotient:
   670                           	opt callstack 0
   671  000007                     strcpy@s:
   672                           	opt callstack 0
   673  000007                     tolower@c:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x6
   677  000007                     	ds	1
   678  000008                     ?_atoi:
   679                           	opt callstack 0
   680  000008                     Lcd_Cmd@buff:
   681                           	opt callstack 0
   682  000008                     Lcd_Write_String@a:
   683                           	opt callstack 0
   684  000008                     atoi@s:
   685                           	opt callstack 0
   686  000008                     strncmp@l:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x7
   690  000008                     	ds	1
   691  000009                     ??_tolower:
   692  000009                     ??___fladd:
   693  000009                     ??___fldiv:
   694  000009                     ??___fleq:
   695  000009                     ___xxtofl@sign:
   696                           	opt callstack 0
   697  000009                     ___fpclassifyf@e:
   698                           	opt callstack 0
   699  000009                     strcpy@d:
   700                           	opt callstack 0
   701  000009                     ___lldiv@quotient:
   702                           	opt callstack 0
   703                           
   704                           ; 4 bytes @ 0x8
   705  000009                     	ds	1
   706  00000A                     ??_Lcd_Write_String:
   707  00000A                     ??_atoi:
   708  00000A                     Lcd_Cmd@a:
   709                           	opt callstack 0
   710  00000A                     ___xxtofl@exp:
   711                           	opt callstack 0
   712  00000A                     fputs@s:
   713                           	opt callstack 0
   714  00000A                     strncmp@r:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x9
   718  00000A                     	ds	1
   719  00000B                     ??_Lcd_Init:
   720  00000B                     Lcd_Set_Cursor@b:
   721                           	opt callstack 0
   722  00000B                     ___xxtofl@arg:
   723                           	opt callstack 0
   724  00000B                     ___fpclassifyf@u:
   725                           	opt callstack 0
   726                           
   727                           ; 4 bytes @ 0xA
   728  00000B                     	ds	1
   729  00000C                     Lcd_Set_Cursor@a:
   730                           	opt callstack 0
   731  00000C                     Lcd_Write_String@i:
   732                           	opt callstack 0
   733  00000C                     fputs@fp:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0xB
   737  00000C                     	ds	1
   738  00000D                     Lcd_Set_Cursor@z:
   739                           	opt callstack 0
   740  00000D                     ___lldiv@counter:
   741                           	opt callstack 0
   742  00000D                     ___fladd@signs:
   743                           	opt callstack 0
   744  00000D                     _tolower$1392:
   745                           	opt callstack 0
   746  00000D                     ___fldiv@rem:
   747                           	opt callstack 0
   748                           
   749                           ; 4 bytes @ 0xC
   750  00000D                     	ds	1
   751  00000E                     Lcd_Set_Cursor@y:
   752                           	opt callstack 0
   753  00000E                     ___fladd@aexp:
   754                           	opt callstack 0
   755  00000E                     fputs@c:
   756                           	opt callstack 0
   757  00000E                     atoi@neg:
   758                           	opt callstack 0
   759  00000E                     I2C_Master_Init@c:
   760                           	opt callstack 0
   761                           
   762                           ; 4 bytes @ 0xD
   763  00000E                     	ds	1
   764  00000F                     ?___flmul:
   765                           	opt callstack 0
   766  00000F                     Lcd_Set_Cursor@temp:
   767                           	opt callstack 0
   768  00000F                     ___fladd@bexp:
   769                           	opt callstack 0
   770  00000F                     fputs@i:
   771                           	opt callstack 0
   772  00000F                     ___flmul@b:
   773                           	opt callstack 0
   774                           
   775                           ; 4 bytes @ 0xE
   776  00000F                     	ds	1
   777  000010                     ___fladd@grs:
   778                           	opt callstack 0
   779  000010                     _atoi$1276:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0xF
   783  000010                     	ds	1
   784  000011                     ?_pad:
   785                           	opt callstack 0
   786  000011                     ___fldiv@sign:
   787                           	opt callstack 0
   788  000011                     pad@fp:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x10
   792  000011                     	ds	1
   793  000012                     ??_I2C_Master_Init:
   794  000012                     ___fldiv@new_exp:
   795                           	opt callstack 0
   796  000012                     _atoi$1278:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x11
   800  000012                     	ds	1
   801  000013                     pad@buf:
   802                           	opt callstack 0
   803  000013                     ___flmul@a:
   804                           	opt callstack 0
   805                           
   806                           ; 4 bytes @ 0x12
   807  000013                     	ds	1
   808  000014                     _atoi$1277:
   809                           	opt callstack 0
   810  000014                     ___fldiv@grs:
   811                           	opt callstack 0
   812                           
   813                           ; 4 bytes @ 0x13
   814  000014                     	ds	1
   815  000015                     pad@p:
   816                           	opt callstack 0
   817  000015                     atoi@n:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x14
   821  000015                     	ds	1
   822  000016                     ??_init_io_display:
   823                           
   824                           ; 1 bytes @ 0x15
   825  000016                     	ds	1
   826  000017                     ??___flmul:
   827  000017                     ??_pad:
   828                           
   829                           ; 1 bytes @ 0x16
   830  000017                     	ds	1
   831  000018                     ___fldiv@bexp:
   832                           	opt callstack 0
   833  000018                     pad@i:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x17
   837  000018                     	ds	1
   838  000019                     ___fldiv@aexp:
   839                           	opt callstack 0
   840                           
   841                           ; 1 bytes @ 0x18
   842  000019                     	ds	1
   843  00001A                     ?_floorf:
   844                           	opt callstack 0
   845  00001A                     pad@w:
   846                           	opt callstack 0
   847  00001A                     floorf@x:
   848                           	opt callstack 0
   849                           
   850                           ; 4 bytes @ 0x19
   851  00001A                     	ds	1
   852  00001B                     ___flmul@sign:
   853                           	opt callstack 0
   854                           
   855                           ; 1 bytes @ 0x1A
   856  00001B                     	ds	1
   857  00001C                     ___flmul@grs:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x1B
   861  00001C                     	ds	2
   862  00001E                     ??_floorf:
   863                           
   864                           ; 1 bytes @ 0x1D
   865  00001E                     	ds	2
   866  000020                     ___flmul@aexp:
   867                           	opt callstack 0
   868                           
   869                           ; 1 bytes @ 0x1F
   870  000020                     	ds	1
   871  000021                     ___flmul@bexp:
   872                           	opt callstack 0
   873                           
   874                           ; 1 bytes @ 0x20
   875  000021                     	ds	1
   876  000022                     ___flmul@prod:
   877                           	opt callstack 0
   878                           
   879                           ; 4 bytes @ 0x21
   880  000022                     	ds	2
   881  000024                     floorf@m:
   882                           	opt callstack 0
   883                           
   884                           ; 4 bytes @ 0x23
   885  000024                     	ds	2
   886  000026                     ___flmul@temp:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x25
   890  000026                     	ds	2
   891  000028                     ??_read_Uin:
   892  000028                     ?___flsub:
   893                           	opt callstack 0
   894  000028                     ?___fltol:
   895                           	opt callstack 0
   896  000028                     floorf@e:
   897                           	opt callstack 0
   898  000028                     ___flge@ff1:
   899                           	opt callstack 0
   900  000028                     ___fltol@f1:
   901                           	opt callstack 0
   902  000028                     ___flsub@b:
   903                           	opt callstack 0
   904                           
   905                           ; 4 bytes @ 0x27
   906  000028                     	ds	2
   907  00002A                     floorf@u:
   908                           	opt callstack 0
   909                           
   910                           ; 4 bytes @ 0x29
   911  00002A                     	ds	2
   912  00002C                     ??___fltol:
   913  00002C                     ___flge@ff2:
   914                           	opt callstack 0
   915  00002C                     ___flsub@a:
   916                           	opt callstack 0
   917                           
   918                           ; 4 bytes @ 0x2B
   919  00002C                     	ds	4
   920  000030                     ??___flge:
   921  000030                     ___fltol@sign1:
   922                           	opt callstack 0
   923                           
   924                           ; 1 bytes @ 0x2F
   925  000030                     	ds	1
   926  000031                     ___fltol@exp1:
   927                           	opt callstack 0
   928                           
   929                           ; 1 bytes @ 0x30
   930  000031                     	ds	1
   931  000032                     set_boost@dty:
   932                           	opt callstack 0
   933  000032                     set_buck@dty:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x31
   937  000032                     	ds	2
   938  000034                     ??_read_Uout:
   939  000034                     ??_read_Iout:
   940  000034                     ?_efgtoa:
   941                           	opt callstack 0
   942  000034                     efgtoa@fp:
   943                           	opt callstack 0
   944  000034                     pwm_init@Uin:
   945                           	opt callstack 0
   946                           
   947                           ; 4 bytes @ 0x33
   948  000034                     	ds	2
   949  000036                     efgtoa@f:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x35
   953  000036                     	ds	2
   954  000038                     
   955                           ; 1 bytes @ 0x37
   956  000038                     	ds	2
   957  00003A                     efgtoa@c:
   958                           	opt callstack 0
   959                           
   960                           ; 1 bytes @ 0x39
   961  00003A                     	ds	1
   962  00003B                     ??_efgtoa:
   963                           
   964                           ; 1 bytes @ 0x3A
   965  00003B                     	ds	5
   966  000040                     ?_vfpfcnvrt:
   967                           	opt callstack 0
   968  000040                     vfpfcnvrt@fp:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x3F
   972  000040                     	ds	2
   973  000042                     vfpfcnvrt@fmt:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x41
   977  000042                     	ds	2
   978  000044                     vfpfcnvrt@ap:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x43
   982  000044                     	ds	2
   983  000046                     ??_vfpfcnvrt:
   984                           
   985                           ; 1 bytes @ 0x45
   986  000046                     	ds	4
   987  00004A                     _vfpfcnvrt$801:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x49
   991  00004A                     	ds	2
   992  00004C                     _vfpfcnvrt$805:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x4B
   996  00004C                     	ds	2
   997  00004E                     vfpfcnvrt@f:
   998                           	opt callstack 0
   999                           
  1000                           ; 4 bytes @ 0x4D
  1001  00004E                     	ds	4
  1002  000052                     vfpfcnvrt@ct:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 3 bytes @ 0x51
  1006  000052                     	ds	3
  1007  000055                     vfpfcnvrt@c:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x54
  1011  000055                     	ds	1
  1012  000056                     ?_vfprintf:
  1013                           	opt callstack 0
  1014  000056                     vfprintf@fp:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x55
  1018  000056                     	ds	2
  1019  000058                     vfprintf@fmt:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x57
  1023  000058                     	ds	2
  1024  00005A                     vfprintf@ap:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x59
  1028  00005A                     	ds	2
  1029  00005C                     vfprintf@cfmt:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x5B
  1033  00005C                     	ds	2
  1034  00005E                     ??_main:
  1035                           
  1036                           ; 1 bytes @ 0x5D
  1037  00005E                     	ds	1
  1038                           
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 7 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  Power_new       4   86[BANK0 ] float 
  1049 ;;  Power           4   82[BANK0 ] float 
  1050 ;;  Uin             4   74[BANK0 ] float 
  1051 ;;  port            2   80[BANK0 ] int 
  1052 ;;  buck_pwm        2   78[BANK0 ] int 
  1053 ;;  g               2    0        int 
  1054 ;;  f               2    0        int 
  1055 ;;  boost_pwm       2    0        int 
  1056 ;;  d               2    0        int 
  1057 ;;  c               2    0        int 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:       17 bytes
  1072 ;; Hardware stack levels required when called:    9
  1073 ;; This function calls:
  1074 ;;		_Lcd_Clear
  1075 ;;		___flge
  1076 ;;		___flmul
  1077 ;;		_adc_config
  1078 ;;		_config
  1079 ;;		_init_io_display
  1080 ;;		_pwm_config
  1081 ;;		_pwm_init
  1082 ;;		_read_Iout
  1083 ;;		_read_Uin
  1084 ;;		_read_Uout
  1085 ;;		_set_boost
  1086 ;;		_set_buck
  1087 ;;		_write_Iout
  1088 ;;		_write_Uin
  1089 ;;		_write_Uout
  1090 ;; This function is called by:
  1091 ;;		Startup code after reset
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text0
  1096  0020BE                     __ptext0:
  1097                           	opt callstack 0
  1098  0020BE                     _main:
  1099                           	opt callstack 22
  1100                           
  1101                           ;main.c: 10:     config();
  1102                           
  1103                           ;incstack = 0
  1104  0020BE  ECCD  F01D         	call	_config	;wreg free
  1105                           
  1106                           ;main.c: 11:     pwm_config();
  1107  0020C2  EC9D  F01F         	call	_pwm_config	;wreg free
  1108                           
  1109                           ;main.c: 12:     adc_config();
  1110  0020C6  ECC0  F01F         	call	_adc_config	;wreg free
  1111                           
  1112                           ;main.c: 13:     init_io_display();
  1113  0020CA  EC5F  F01C         	call	_init_io_display	;wreg free
  1114                           
  1115                           ;main.c: 14:     Lcd_Clear();
  1116  0020CE  ECB2  F01F         	call	_Lcd_Clear	;wreg free
  1117                           
  1118                           ;main.c: 15:     read_Uin();
  1119  0020D2  EC1B  F019         	call	_read_Uin	;wreg free
  1120                           
  1121                           ;main.c: 16:     pwm_init(Uin);
  1122  0020D6  C0DE  F034         	movff	_Uin,pwm_init@Uin
  1123  0020DA  C0DF  F035         	movff	_Uin+1,pwm_init@Uin+1
  1124  0020DE  C0E0  F036         	movff	_Uin+2,pwm_init@Uin+2
  1125  0020E2  C0E1  F037         	movff	_Uin+3,pwm_init@Uin+3
  1126  0020E6  ECF0  F01E         	call	_pwm_init	;wreg free
  1127                           
  1128                           ;main.c: 17:     float Uin,Power,Power_new;;main.c: 18:     int port,c,d,buck_pwm,boost_
      +                          pwm,f,g;;main.c: 19:     buck_pwm=50;
  1129  0020EA  0E00               	movlw	0
  1130  0020EC  0100               	movlb	0	; () banked
  1131  0020EE  6FAF               	movwf	(main@buck_pwm+1)& (0+255),b
  1132  0020F0  0E32               	movlw	50
  1133  0020F2  6FAE               	movwf	main@buck_pwm& (0+255),b
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;main.c: 20:     CCPR2L=0;
  1137  0020F4  0E00               	movlw	0
  1138  0020F6  6E67               	movwf	3943,c	;volatile
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;main.c: 21:     CCPR1L=0;
  1142  0020F8  0E00               	movlw	0
  1143  0020FA  6EBE               	movwf	4030,c	;volatile
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;main.c: 22:     port=0;
  1147  0020FC  0E00               	movlw	0
  1148  0020FE  6FB1               	movwf	(main@port+1)& (0+255),b
  1149  002100  0E00               	movlw	0
  1150  002102  6FB0               	movwf	main@port& (0+255),b
  1151  002104                     l4777:
  1152                           
  1153                           ;main.c: 25:     {;main.c: 27:         if(port==0)
  1154  002104  0100               	movlb	0	; () banked
  1155  002106  51B0               	movf	main@port& (0+255),w,b
  1156  002108  11B1               	iorwf	(main@port+1)& (0+255),w,b
  1157  00210A  A4D8               	btfss	status,2,c
  1158  00210C  D019               	goto	l4791
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 28:         {;main.c: 29:             read_Uout();
  1162  00210E  ECDC  F016         	call	_read_Uout	;wreg free
  1163                           
  1164                           ;main.c: 30:             write_Uout();
  1165  002112  EC79  F01D         	call	_write_Uout	;wreg free
  1166                           
  1167                           ;main.c: 31:             port=1;
  1168  002116  0E00               	movlw	0
  1169  002118  0100               	movlb	0	; () banked
  1170  00211A  6FB1               	movwf	(main@port+1)& (0+255),b
  1171  00211C  0E01               	movlw	1
  1172  00211E  6FB0               	movwf	main@port& (0+255),b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 32:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1176  002120  0ED0               	movlw	208
  1177  002122  6E5E               	movwf	??_main& (0+255),c
  1178  002124  0ECA               	movlw	202
  1179  002126                     u5317:
  1180  002126  2EE8               	decfsz	wreg,f,c
  1181  002128  D7FE               	bra	u5317
  1182  00212A  2E5E               	decfsz	??_main& (0+255),f,c
  1183  00212C  D7FC               	bra	u5317
  1184                           
  1185                           ;main.c: 33:             ADRESH=0X00;
  1186  00212E  0E00               	movlw	0
  1187  002130  6EC4               	movwf	4036,c	;volatile
  1188                           
  1189                           ;main.c: 34:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1190  002132  0ED0               	movlw	208
  1191  002134  6E5E               	movwf	??_main& (0+255),c
  1192  002136  0ECA               	movlw	202
  1193  002138                     u5327:
  1194  002138  2EE8               	decfsz	wreg,f,c
  1195  00213A  D7FE               	bra	u5327
  1196  00213C  2E5E               	decfsz	??_main& (0+255),f,c
  1197  00213E  D7FC               	bra	u5327
  1198  002140                     l4791:
  1199                           
  1200                           ;main.c: 37:         if(port==1)
  1201  002140  0100               	movlb	0	; () banked
  1202  002142  05B0               	decf	main@port& (0+255),w,b
  1203  002144  11B1               	iorwf	(main@port+1)& (0+255),w,b
  1204  002146  A4D8               	btfss	status,2,c
  1205  002148  D019               	goto	l4805
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 38:         {;main.c: 39:             read_Iout();
  1209  00214A  EC6F  F017         	call	_read_Iout	;wreg free
  1210                           
  1211                           ;main.c: 40:             write_Iout();
  1212  00214E  ECC5  F01C         	call	_write_Iout	;wreg free
  1213                           
  1214                           ;main.c: 41:             port=2;
  1215  002152  0E00               	movlw	0
  1216  002154  0100               	movlb	0	; () banked
  1217  002156  6FB1               	movwf	(main@port+1)& (0+255),b
  1218  002158  0E02               	movlw	2
  1219  00215A  6FB0               	movwf	main@port& (0+255),b
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;main.c: 42:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1223  00215C  0ED0               	movlw	208
  1224  00215E  6E5E               	movwf	??_main& (0+255),c
  1225  002160  0ECA               	movlw	202
  1226  002162                     u5337:
  1227  002162  2EE8               	decfsz	wreg,f,c
  1228  002164  D7FE               	bra	u5337
  1229  002166  2E5E               	decfsz	??_main& (0+255),f,c
  1230  002168  D7FC               	bra	u5337
  1231                           
  1232                           ;main.c: 43:             ADRESH=0X00;
  1233  00216A  0E00               	movlw	0
  1234  00216C  6EC4               	movwf	4036,c	;volatile
  1235                           
  1236                           ;main.c: 44:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1237  00216E  0ED0               	movlw	208
  1238  002170  6E5E               	movwf	??_main& (0+255),c
  1239  002172  0ECA               	movlw	202
  1240  002174                     u5347:
  1241  002174  2EE8               	decfsz	wreg,f,c
  1242  002176  D7FE               	bra	u5347
  1243  002178  2E5E               	decfsz	??_main& (0+255),f,c
  1244  00217A  D7FC               	bra	u5347
  1245  00217C                     l4805:
  1246                           
  1247                           ;main.c: 47:         if(port==2)
  1248  00217C  0E02               	movlw	2
  1249  00217E  0100               	movlb	0	; () banked
  1250  002180  19B0               	xorwf	main@port& (0+255),w,b
  1251  002182  11B1               	iorwf	(main@port+1)& (0+255),w,b
  1252  002184  A4D8               	btfss	status,2,c
  1253  002186  D019               	goto	l4819
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;main.c: 48:         {;main.c: 49:             read_Uin();
  1257  002188  EC1B  F019         	call	_read_Uin	;wreg free
  1258                           
  1259                           ;main.c: 50:             write_Uin();
  1260  00218C  EC95  F01C         	call	_write_Uin	;wreg free
  1261                           
  1262                           ;main.c: 51:             port=0;
  1263  002190  0E00               	movlw	0
  1264  002192  0100               	movlb	0	; () banked
  1265  002194  6FB1               	movwf	(main@port+1)& (0+255),b
  1266  002196  0E00               	movlw	0
  1267  002198  6FB0               	movwf	main@port& (0+255),b
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;main.c: 52:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1271  00219A  0ED0               	movlw	208
  1272  00219C  6E5E               	movwf	??_main& (0+255),c
  1273  00219E  0ECA               	movlw	202
  1274  0021A0                     u5357:
  1275  0021A0  2EE8               	decfsz	wreg,f,c
  1276  0021A2  D7FE               	bra	u5357
  1277  0021A4  2E5E               	decfsz	??_main& (0+255),f,c
  1278  0021A6  D7FC               	bra	u5357
  1279                           
  1280                           ;main.c: 53:             ADRESH=0X00;
  1281  0021A8  0E00               	movlw	0
  1282  0021AA  6EC4               	movwf	4036,c	;volatile
  1283                           
  1284                           ;main.c: 54:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1285  0021AC  0ED0               	movlw	208
  1286  0021AE  6E5E               	movwf	??_main& (0+255),c
  1287  0021B0  0ECA               	movlw	202
  1288  0021B2                     u5367:
  1289  0021B2  2EE8               	decfsz	wreg,f,c
  1290  0021B4  D7FE               	bra	u5367
  1291  0021B6  2E5E               	decfsz	??_main& (0+255),f,c
  1292  0021B8  D7FC               	bra	u5367
  1293  0021BA                     l4819:
  1294                           
  1295                           ;main.c: 59:         if(Uin>12)
  1296  0021BA  0E00               	movlw	0
  1297  0021BC  6E28               	movwf	___flge@ff1,c
  1298  0021BE  0E00               	movlw	0
  1299  0021C0  6E29               	movwf	___flge@ff1+1,c
  1300  0021C2  0E40               	movlw	64
  1301  0021C4  6E2A               	movwf	___flge@ff1+2,c
  1302  0021C6  0E41               	movlw	65
  1303  0021C8  6E2B               	movwf	___flge@ff1+3,c
  1304  0021CA  C0AA  F02C         	movff	main@Uin,___flge@ff2
  1305  0021CE  C0AB  F02D         	movff	main@Uin+1,___flge@ff2+1
  1306  0021D2  C0AC  F02E         	movff	main@Uin+2,___flge@ff2+2
  1307  0021D6  C0AD  F02F         	movff	main@Uin+3,___flge@ff2+3
  1308  0021DA  ECF0  F017         	call	___flge	;wreg free
  1309  0021DE  B0D8               	btfsc	status,0,c
  1310  0021E0  D07C               	goto	l4849
  1311                           
  1312                           ;main.c: 60:         {;main.c: 61:             set_boost(0);
  1313  0021E2  0E00               	movlw	0
  1314  0021E4  6E33               	movwf	set_boost@dty+1,c
  1315  0021E6  0E00               	movlw	0
  1316  0021E8  6E32               	movwf	set_boost@dty,c
  1317  0021EA  EC2C  F01B         	call	_set_boost	;wreg free
  1318                           
  1319                           ;main.c: 62:             CCPR2L=buck_pwm++;
  1320  0021EE  C0AE  FF67         	movff	main@buck_pwm,3943	;volatile
  1321  0021F2  0100               	movlb	0	; () banked
  1322  0021F4  4BAE               	infsnz	main@buck_pwm& (0+255),f,b
  1323  0021F6  2BAF               	incf	(main@buck_pwm+1)& (0+255),f,b
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 63:             read_Iout();
  1327  0021F8  EC6F  F017         	call	_read_Iout	;wreg free
  1328                           
  1329                           ;main.c: 64:             read_Uout();
  1330  0021FC  ECDC  F016         	call	_read_Uout	;wreg free
  1331                           
  1332                           ;main.c: 65:             Power_new=Uout*Iout;
  1333  002200  C0DA  F00F         	movff	_Uout,___flmul@b
  1334  002204  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1335  002208  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1336  00220C  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1337  002210  C0D6  F013         	movff	_Iout,___flmul@a
  1338  002214  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1339  002218  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1340  00221C  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1341  002220  ECB6  F00E         	call	___flmul	;wreg free
  1342  002224  C00F  F0B6         	movff	?___flmul,main@Power_new
  1343  002228  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1344  00222C  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1345  002230  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1346                           
  1347                           ;main.c: 66:             if(Power_new>Power)
  1348  002234  C0B2  F028         	movff	main@Power,___flge@ff1
  1349  002238  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1350  00223C  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1351  002240  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1352  002244  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1353  002248  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1354  00224C  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1355  002250  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1356  002254  ECF0  F017         	call	___flge	;wreg free
  1357  002258  B0D8               	btfsc	status,0,c
  1358  00225A  D009               	goto	l4837
  1359  00225C                     u5260:
  1360                           
  1361                           ;main.c: 67:             {;main.c: 68:                  Power=Power_new;
  1362  00225C  C0B6  F0B2         	movff	main@Power_new,main@Power
  1363  002260  C0B7  F0B3         	movff	main@Power_new+1,main@Power+1
  1364  002264  C0B8  F0B4         	movff	main@Power_new+2,main@Power+2
  1365  002268  C0B9  F0B5         	movff	main@Power_new+3,main@Power+3
  1366                           
  1367                           ;main.c: 69:             }
  1368  00226C  D036               	goto	l4849
  1369  00226E                     l4837:
  1370                           
  1371                           ;main.c: 71:             {;main.c: 72:                 CCPR2L=buck_pwm-2;
  1372  00226E  0100               	movlb	0	; () banked
  1373  002270  51AE               	movf	main@buck_pwm& (0+255),w,b
  1374  002272  0FFE               	addlw	254
  1375  002274  6E67               	movwf	3943,c	;volatile
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;main.c: 73:                 read_Iout();
  1379  002276  EC6F  F017         	call	_read_Iout	;wreg free
  1380                           
  1381                           ;main.c: 74:                 read_Uout();
  1382  00227A  ECDC  F016         	call	_read_Uout	;wreg free
  1383                           
  1384                           ;main.c: 75:                 Power_new=Uout*Iout;
  1385  00227E  C0DA  F00F         	movff	_Uout,___flmul@b
  1386  002282  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1387  002286  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1388  00228A  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1389  00228E  C0D6  F013         	movff	_Iout,___flmul@a
  1390  002292  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1391  002296  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1392  00229A  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1393  00229E  ECB6  F00E         	call	___flmul	;wreg free
  1394  0022A2  C00F  F0B6         	movff	?___flmul,main@Power_new
  1395  0022A6  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1396  0022AA  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1397  0022AE  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1398                           
  1399                           ;main.c: 76:                 if(Power_new>Power)
  1400  0022B2  C0B2  F028         	movff	main@Power,___flge@ff1
  1401  0022B6  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1402  0022BA  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1403  0022BE  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1404  0022C2  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1405  0022C6  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1406  0022CA  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1407  0022CE  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1408  0022D2  ECF0  F017         	call	___flge	;wreg free
  1409  0022D6  A0D8               	btfss	status,0,c
  1410  0022D8  D7C1               	goto	u5260
  1411  0022DA                     l4849:
  1412                           
  1413                           ;main.c: 83:         if(Uin<=12)
  1414  0022DA  0E00               	movlw	0
  1415  0022DC  6E28               	movwf	___flge@ff1,c
  1416  0022DE  0E00               	movlw	0
  1417  0022E0  6E29               	movwf	___flge@ff1+1,c
  1418  0022E2  0E40               	movlw	64
  1419  0022E4  6E2A               	movwf	___flge@ff1+2,c
  1420  0022E6  0E41               	movlw	65
  1421  0022E8  6E2B               	movwf	___flge@ff1+3,c
  1422  0022EA  C0AA  F02C         	movff	main@Uin,___flge@ff2
  1423  0022EE  C0AB  F02D         	movff	main@Uin+1,___flge@ff2+1
  1424  0022F2  C0AC  F02E         	movff	main@Uin+2,___flge@ff2+2
  1425  0022F6  C0AD  F02F         	movff	main@Uin+3,___flge@ff2+3
  1426  0022FA  ECF0  F017         	call	___flge	;wreg free
  1427  0022FE  A0D8               	btfss	status,0,c
  1428  002300  D701               	goto	l4777
  1429                           
  1430                           ;main.c: 84:         {;main.c: 85:             set_buck(90);
  1431  002302  0E00               	movlw	0
  1432  002304  6E33               	movwf	set_buck@dty+1,c
  1433  002306  0E5A               	movlw	90
  1434  002308  6E32               	movwf	set_buck@dty,c
  1435  00230A  ECEB  F01A         	call	_set_buck	;wreg free
  1436                           
  1437                           ;main.c: 86:             CCPR1L=0;
  1438  00230E  0E00               	movlw	0
  1439  002310  6EBE               	movwf	4030,c	;volatile
  1440                           
  1441                           ;main.c: 87:             read_Iout();
  1442  002312  EC6F  F017         	call	_read_Iout	;wreg free
  1443                           
  1444                           ;main.c: 88:             read_Uout();
  1445  002316  ECDC  F016         	call	_read_Uout	;wreg free
  1446                           
  1447                           ;main.c: 89:             Power_new=Uout*Iout;
  1448  00231A  C0DA  F00F         	movff	_Uout,___flmul@b
  1449  00231E  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1450  002322  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1451  002326  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1452  00232A  C0D6  F013         	movff	_Iout,___flmul@a
  1453  00232E  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1454  002332  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1455  002336  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1456  00233A  ECB6  F00E         	call	___flmul	;wreg free
  1457  00233E  C00F  F0B6         	movff	?___flmul,main@Power_new
  1458  002342  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1459  002346  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1460  00234A  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1461                           
  1462                           ;main.c: 90:             if(Power_new>Power)
  1463  00234E  C0B2  F028         	movff	main@Power,___flge@ff1
  1464  002352  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1465  002356  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1466  00235A  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1467  00235E  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1468  002362  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1469  002366  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1470  00236A  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1471  00236E  ECF0  F017         	call	___flge	;wreg free
  1472  002372  B0D8               	btfsc	status,0,c
  1473  002374  D009               	goto	l4865
  1474  002376                     u5290:
  1475                           
  1476                           ;main.c: 91:             {;main.c: 92:                  Power=Power_new;
  1477  002376  C0B6  F0B2         	movff	main@Power_new,main@Power
  1478  00237A  C0B7  F0B3         	movff	main@Power_new+1,main@Power+1
  1479  00237E  C0B8  F0B4         	movff	main@Power_new+2,main@Power+2
  1480  002382  C0B9  F0B5         	movff	main@Power_new+3,main@Power+3
  1481                           
  1482                           ;main.c: 93:             }
  1483  002386  D6BE               	goto	l4777
  1484  002388                     l4865:
  1485                           
  1486                           ;main.c: 95:             {;main.c: 97:                 read_Iout();
  1487  002388  EC6F  F017         	call	_read_Iout	;wreg free
  1488                           
  1489                           ;main.c: 98:                 read_Uout();
  1490  00238C  ECDC  F016         	call	_read_Uout	;wreg free
  1491                           
  1492                           ;main.c: 99:                 Power_new=Uout*Iout;
  1493  002390  C0DA  F00F         	movff	_Uout,___flmul@b
  1494  002394  C0DB  F010         	movff	_Uout+1,___flmul@b+1
  1495  002398  C0DC  F011         	movff	_Uout+2,___flmul@b+2
  1496  00239C  C0DD  F012         	movff	_Uout+3,___flmul@b+3
  1497  0023A0  C0D6  F013         	movff	_Iout,___flmul@a
  1498  0023A4  C0D7  F014         	movff	_Iout+1,___flmul@a+1
  1499  0023A8  C0D8  F015         	movff	_Iout+2,___flmul@a+2
  1500  0023AC  C0D9  F016         	movff	_Iout+3,___flmul@a+3
  1501  0023B0  ECB6  F00E         	call	___flmul	;wreg free
  1502  0023B4  C00F  F0B6         	movff	?___flmul,main@Power_new
  1503  0023B8  C010  F0B7         	movff	?___flmul+1,main@Power_new+1
  1504  0023BC  C011  F0B8         	movff	?___flmul+2,main@Power_new+2
  1505  0023C0  C012  F0B9         	movff	?___flmul+3,main@Power_new+3
  1506                           
  1507                           ;main.c: 100:                 if(Power_new>Power)
  1508  0023C4  C0B2  F028         	movff	main@Power,___flge@ff1
  1509  0023C8  C0B3  F029         	movff	main@Power+1,___flge@ff1+1
  1510  0023CC  C0B4  F02A         	movff	main@Power+2,___flge@ff1+2
  1511  0023D0  C0B5  F02B         	movff	main@Power+3,___flge@ff1+3
  1512  0023D4  C0B6  F02C         	movff	main@Power_new,___flge@ff2
  1513  0023D8  C0B7  F02D         	movff	main@Power_new+1,___flge@ff2+1
  1514  0023DC  C0B8  F02E         	movff	main@Power_new+2,___flge@ff2+2
  1515  0023E0  C0B9  F02F         	movff	main@Power_new+3,___flge@ff2+3
  1516  0023E4  ECF0  F017         	call	___flge	;wreg free
  1517  0023E8  A0D8               	btfss	status,0,c
  1518  0023EA  D7C5               	goto	u5290
  1519  0023EC  D68B               	goto	l4777
  1520  0023EE                     __end_of_main:
  1521                           	opt callstack 0
  1522                           
  1523 ;; *************** function _write_Uout *****************
  1524 ;; Defined at:
  1525 ;;		line 85 in file "mppt.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    8
  1546 ;; This function calls:
  1547 ;;		_Lcd_Set_Cursor
  1548 ;;		_Lcd_Write_String
  1549 ;;		_sprintf
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556  003AF2                     __ptext1:
  1557                           	opt callstack 0
  1558  003AF2                     _write_Uout:
  1559                           	opt callstack 22
  1560                           
  1561                           ;mppt.c: 87:     Lcd_Set_Cursor(1,1);
  1562                           
  1563                           ;incstack = 0
  1564  003AF2  0E01               	movlw	1
  1565  003AF4  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1566  003AF6  0E01               	movlw	1
  1567  003AF8  EC20  F01E         	call	_Lcd_Set_Cursor
  1568                           
  1569                           ;mppt.c: 88:     Lcd_Write_String("U=");
  1570  003AFC  0E3F               	movlw	low STR_7
  1571  003AFE  6E08               	movwf	Lcd_Write_String@a,c
  1572  003B00  0E10               	movlw	high STR_7
  1573  003B02  6E09               	movwf	Lcd_Write_String@a+1,c
  1574  003B04  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1575                           
  1576                           ;mppt.c: 89:     sprintf(str_V, "%.2f", Uout);
  1577  003B08  0EF4               	movlw	low _str_V
  1578  003B0A  0100               	movlb	0	; () banked
  1579  003B0C  6F98               	movwf	sprintf@s& (0+255),b
  1580  003B0E  0E00               	movlw	high _str_V
  1581  003B10  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1582  003B12  0E1B               	movlw	low STR_4
  1583  003B14  6F9A               	movwf	sprintf@fmt& (0+255),b
  1584  003B16  0E10               	movlw	high STR_4
  1585  003B18  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1586  003B1A  C0DA  F09C         	movff	_Uout,?_sprintf+4
  1587  003B1E  C0DB  F09D         	movff	_Uout+1,?_sprintf+5
  1588  003B22  C0DC  F09E         	movff	_Uout+2,?_sprintf+6
  1589  003B26  C0DD  F09F         	movff	_Uout+3,?_sprintf+7
  1590  003B2A  ECF7  F01D         	call	_sprintf	;wreg free
  1591                           
  1592                           ;mppt.c: 90:     Lcd_Set_Cursor(1,3);
  1593  003B2E  0E03               	movlw	3
  1594  003B30  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1595  003B32  0E01               	movlw	1
  1596  003B34  EC20  F01E         	call	_Lcd_Set_Cursor
  1597                           
  1598                           ;mppt.c: 91:     Lcd_Write_String(str_V);
  1599  003B38  0EF4               	movlw	low _str_V
  1600  003B3A  6E08               	movwf	Lcd_Write_String@a,c
  1601  003B3C  0E00               	movlw	high _str_V
  1602  003B3E  6E09               	movwf	Lcd_Write_String@a+1,c
  1603  003B40  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1604  003B44  0012               	return		;funcret
  1605  003B46                     __end_of_write_Uout:
  1606                           	opt callstack 0
  1607                           
  1608 ;; *************** function _write_Uin *****************
  1609 ;; Defined at:
  1610 ;;		line 106 in file "mppt.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    8
  1631 ;; This function calls:
  1632 ;;		_Lcd_Set_Cursor
  1633 ;;		_Lcd_Write_String
  1634 ;;		_sprintf
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text2
  1641  00392A                     __ptext2:
  1642                           	opt callstack 0
  1643  00392A                     _write_Uin:
  1644                           	opt callstack 22
  1645                           
  1646                           ;mppt.c: 108:     Lcd_Set_Cursor(1,9);
  1647                           
  1648                           ;incstack = 0
  1649  00392A  0E09               	movlw	9
  1650  00392C  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1651  00392E  0E01               	movlw	1
  1652  003930  EC20  F01E         	call	_Lcd_Set_Cursor
  1653                           
  1654                           ;mppt.c: 109:     Lcd_Write_String("Ui=");
  1655  003934  0E35               	movlw	low STR_9
  1656  003936  6E08               	movwf	Lcd_Write_String@a,c
  1657  003938  0E10               	movlw	high STR_9
  1658  00393A  6E09               	movwf	Lcd_Write_String@a+1,c
  1659  00393C  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1660                           
  1661                           ;mppt.c: 110:     sprintf(str_V, "%.2f", Uin);
  1662  003940  0EF4               	movlw	low _str_V
  1663  003942  0100               	movlb	0	; () banked
  1664  003944  6F98               	movwf	sprintf@s& (0+255),b
  1665  003946  0E00               	movlw	high _str_V
  1666  003948  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1667  00394A  0E1B               	movlw	low STR_4
  1668  00394C  6F9A               	movwf	sprintf@fmt& (0+255),b
  1669  00394E  0E10               	movlw	high STR_4
  1670  003950  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1671  003952  C0DE  F09C         	movff	_Uin,?_sprintf+4
  1672  003956  C0DF  F09D         	movff	_Uin+1,?_sprintf+5
  1673  00395A  C0E0  F09E         	movff	_Uin+2,?_sprintf+6
  1674  00395E  C0E1  F09F         	movff	_Uin+3,?_sprintf+7
  1675  003962  ECF7  F01D         	call	_sprintf	;wreg free
  1676                           
  1677                           ;mppt.c: 111:     Lcd_Set_Cursor(1,12);
  1678  003966  0E0C               	movlw	12
  1679  003968  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1680  00396A  0E01               	movlw	1
  1681  00396C  EC20  F01E         	call	_Lcd_Set_Cursor
  1682                           
  1683                           ;mppt.c: 112:     Lcd_Write_String(str_V);
  1684  003970  0EF4               	movlw	low _str_V
  1685  003972  6E08               	movwf	Lcd_Write_String@a,c
  1686  003974  0E00               	movlw	high _str_V
  1687  003976  6E09               	movwf	Lcd_Write_String@a+1,c
  1688  003978  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1689                           
  1690                           ;mppt.c: 113:     Lcd_Write_String(" V");
  1691  00397C  0E45               	movlw	low STR_11
  1692  00397E  6E08               	movwf	Lcd_Write_String@a,c
  1693  003980  0E10               	movlw	high STR_11
  1694  003982  6E09               	movwf	Lcd_Write_String@a+1,c
  1695  003984  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1696  003988  0012               	return		;funcret
  1697  00398A                     __end_of_write_Uin:
  1698                           	opt callstack 0
  1699                           
  1700 ;; *************** function _write_Iout *****************
  1701 ;; Defined at:
  1702 ;;		line 48 in file "mppt.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    8
  1723 ;; This function calls:
  1724 ;;		_Lcd_Set_Cursor
  1725 ;;		_Lcd_Write_String
  1726 ;;		_sprintf
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text3
  1733  00398A                     __ptext3:
  1734                           	opt callstack 0
  1735  00398A                     _write_Iout:
  1736                           	opt callstack 22
  1737                           
  1738                           ;mppt.c: 50:     Lcd_Set_Cursor(2,1);
  1739                           
  1740                           ;incstack = 0
  1741  00398A  0E01               	movlw	1
  1742  00398C  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1743  00398E  0E02               	movlw	2
  1744  003990  EC20  F01E         	call	_Lcd_Set_Cursor
  1745                           
  1746                           ;mppt.c: 51:     Lcd_Write_String("I=");
  1747  003994  0E3C               	movlw	low STR_3
  1748  003996  6E08               	movwf	Lcd_Write_String@a,c
  1749  003998  0E10               	movlw	high STR_3
  1750  00399A  6E09               	movwf	Lcd_Write_String@a+1,c
  1751  00399C  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1752                           
  1753                           ;mppt.c: 52:     sprintf(str_A, "%.2f", Iout);
  1754  0039A0  0E58               	movlw	low _str_A
  1755  0039A2  0100               	movlb	0	; () banked
  1756  0039A4  6F98               	movwf	sprintf@s& (0+255),b
  1757  0039A6  0E01               	movlw	high _str_A
  1758  0039A8  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1759  0039AA  0E1B               	movlw	low STR_4
  1760  0039AC  6F9A               	movwf	sprintf@fmt& (0+255),b
  1761  0039AE  0E10               	movlw	high STR_4
  1762  0039B0  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1763  0039B2  C0D6  F09C         	movff	_Iout,?_sprintf+4
  1764  0039B6  C0D7  F09D         	movff	_Iout+1,?_sprintf+5
  1765  0039BA  C0D8  F09E         	movff	_Iout+2,?_sprintf+6
  1766  0039BE  C0D9  F09F         	movff	_Iout+3,?_sprintf+7
  1767  0039C2  ECF7  F01D         	call	_sprintf	;wreg free
  1768                           
  1769                           ;mppt.c: 53:     Lcd_Set_Cursor(2,3);
  1770  0039C6  0E03               	movlw	3
  1771  0039C8  6E0B               	movwf	Lcd_Set_Cursor@b,c
  1772  0039CA  0E02               	movlw	2
  1773  0039CC  EC20  F01E         	call	_Lcd_Set_Cursor
  1774                           
  1775                           ;mppt.c: 54:     Lcd_Write_String(str_A);
  1776  0039D0  0E58               	movlw	low _str_A
  1777  0039D2  6E08               	movwf	Lcd_Write_String@a,c
  1778  0039D4  0E01               	movlw	high _str_A
  1779  0039D6  6E09               	movwf	Lcd_Write_String@a+1,c
  1780  0039D8  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1781                           
  1782                           ;mppt.c: 55:     Lcd_Write_String(" A");
  1783  0039DC  0E42               	movlw	low STR_5
  1784  0039DE  6E08               	movwf	Lcd_Write_String@a,c
  1785  0039E0  0E10               	movlw	high STR_5
  1786  0039E2  6E09               	movwf	Lcd_Write_String@a+1,c
  1787  0039E4  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  1788  0039E8  0012               	return		;funcret
  1789  0039EA                     __end_of_write_Iout:
  1790                           	opt callstack 0
  1791                           
  1792 ;; *************** function _sprintf *****************
  1793 ;; Defined at:
  1794 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1797 ;;		 -> str_P(8), str_V(8), str_A(8), 
  1798 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1799 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  f               6   68[BANK0 ] struct _IO_FILE
  1802 ;;  ap              2   66[BANK0 ] PTR void [1]
  1803 ;;		 -> ?_sprintf(2), 
  1804 ;;  ret             2    0        int 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2   56[BANK0 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:       18 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    7
  1821 ;; This function calls:
  1822 ;;		_vfprintf
  1823 ;; This function is called by:
  1824 ;;		_write_Iout
  1825 ;;		_write_Uout
  1826 ;;		_write_Uin
  1827 ;;		_write_Power
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text4
  1832  003BEE                     __ptext4:
  1833                           	opt callstack 0
  1834  003BEE                     _sprintf:
  1835                           	opt callstack 22
  1836                           
  1837                           ;incstack = 0
  1838  003BEE  0E9C               	movlw	low (?_sprintf+4)
  1839  003BF0  0100               	movlb	0	; () banked
  1840  003BF2  6FA2               	movwf	sprintf@ap& (0+255),b
  1841  003BF4  0E00               	movlw	high (?_sprintf+4)
  1842  003BF6  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1843  003BF8  C098  F0A4         	movff	sprintf@s,sprintf@f
  1844  003BFC  C099  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1845                           
  1846                           ; BSR set to: 0
  1847  003C00  0E00               	movlw	0
  1848  003C02  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1849  003C04  0E00               	movlw	0
  1850  003C06  6FA6               	movwf	(sprintf@f+2)& (0+255),b
  1851                           
  1852                           ; BSR set to: 0
  1853  003C08  0E00               	movlw	0
  1854  003C0A  6FA9               	movwf	(sprintf@f+5)& (0+255),b
  1855  003C0C  0E00               	movlw	0
  1856  003C0E  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1857                           
  1858                           ; BSR set to: 0
  1859  003C10  0EA4               	movlw	low sprintf@f
  1860  003C12  6E56               	movwf	vfprintf@fp,c
  1861  003C14  0E00               	movlw	high sprintf@f
  1862  003C16  6E57               	movwf	vfprintf@fp+1,c
  1863  003C18  C09A  F058         	movff	sprintf@fmt,vfprintf@fmt
  1864  003C1C  C09B  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1865  003C20  0EA2               	movlw	low sprintf@ap
  1866  003C22  6E5A               	movwf	vfprintf@ap,c
  1867  003C24  0E00               	movlw	high sprintf@ap
  1868  003C26  6E5B               	movwf	vfprintf@ap+1,c
  1869  003C28  EC4E  F01D         	call	_vfprintf	;wreg free
  1870  003C2C  0100               	movlb	0	; () banked
  1871  003C2E  51A6               	movf	(sprintf@f+2)& (0+255),w,b
  1872  003C30  2598               	addwf	sprintf@s& (0+255),w,b
  1873  003C32  6ED9               	movwf	fsr2l,c
  1874  003C34  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1875  003C36  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1876  003C38  6EDA               	movwf	fsr2h,c
  1877  003C3A  0E00               	movlw	0
  1878  003C3C  6EDF               	movwf	indf2,c
  1879                           
  1880                           ; BSR set to: 0
  1881  003C3E  0012               	return		;funcret
  1882  003C40                     __end_of_sprintf:
  1883                           	opt callstack 0
  1884                           
  1885 ;; *************** function _vfprintf *****************
  1886 ;; Defined at:
  1887 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1890 ;;		 -> sprintf@f(6), 
  1891 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1892 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  1893 ;;  ap              2   89[COMRAM] PTR PTR void 
  1894 ;;		 -> sprintf@ap(2), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1897 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  2   85[COMRAM] int 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1907 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;Total ram usage:        8 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    6
  1914 ;; This function calls:
  1915 ;;		_vfpfcnvrt
  1916 ;; This function is called by:
  1917 ;;		_sprintf
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text5
  1922  003A9C                     __ptext5:
  1923                           	opt callstack 0
  1924  003A9C                     _vfprintf:
  1925                           	opt callstack 22
  1926                           
  1927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;incstack = 0
  1931  003A9C  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1932  003AA0  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1933                           
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1935  003AA4  0E00               	movlw	0
  1936  003AA6  0100               	movlb	0	; () banked
  1937  003AA8  6FE3               	movwf	(_nout+1)& (0+255),b
  1938  003AAA  0E00               	movlw	0
  1939  003AAC  6FE2               	movwf	_nout& (0+255),b
  1940                           
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1942  003AAE  D013               	goto	l4427
  1943  003AB0                     l4425:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1947  003AB0  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1948  003AB4  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1949  003AB8  0E5C               	movlw	low vfprintf@cfmt
  1950  003ABA  6E42               	movwf	vfpfcnvrt@fmt,c
  1951  003ABC  0E00               	movlw	high vfprintf@cfmt
  1952  003ABE  6E43               	movwf	vfpfcnvrt@fmt+1,c
  1953  003AC0  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1954  003AC4  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1955  003AC8  ECE4  F00C         	call	_vfpfcnvrt	;wreg free
  1956  003ACC  5040               	movf	?_vfpfcnvrt,w,c
  1957  003ACE  0100               	movlb	0	; () banked
  1958  003AD0  27E2               	addwf	_nout& (0+255),f,b
  1959  003AD2  5041               	movf	?_vfpfcnvrt+1,w,c
  1960  003AD4  23E3               	addwfc	(_nout+1)& (0+255),f,b
  1961  003AD6                     l4427:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1965  003AD6  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1966  003ADA  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1967  003ADE                     	if	0	;tblptru may be non-zero
  1968  003ADE                     	endif
  1969  003ADE                     	if	0	;tblptru may be non-zero
  1970  003ADE                     	endif
  1971  003ADE  0008               	tblrd		*
  1972  003AE0  50F5               	movf	tablat,w,c
  1973  003AE2  0900               	iorlw	0
  1974  003AE4  A4D8               	btfss	status,2,c
  1975  003AE6  D7E4               	goto	l4425
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1979  003AE8  C0E2  F056         	movff	_nout,?_vfprintf
  1980  003AEC  C0E3  F057         	movff	_nout+1,?_vfprintf+1
  1981                           
  1982                           ; BSR set to: 0
  1983  003AF0  0012               	return		;funcret
  1984  003AF2                     __end_of_vfprintf:
  1985                           	opt callstack 0
  1986                           
  1987 ;; *************** function _vfpfcnvrt *****************
  1988 ;; Defined at:
  1989 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1992 ;;		 -> sprintf@f(6), 
  1993 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1994 ;;		 -> vfprintf@cfmt(2), 
  1995 ;;  ap              2   67[COMRAM] PTR PTR void 
  1996 ;;		 -> sprintf@ap(2), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  llu             8    0        unsigned long long 
  1999 ;;  ll              8    0        long long 
  2000 ;;  f               4   77[COMRAM] long long 
  2001 ;;  ct              3   81[COMRAM] unsigned char [3]
  2002 ;;  vp              3    0        PTR void 
  2003 ;;  cp              3    0        PTR unsigned char 
  2004 ;;  i               2    0        int 
  2005 ;;  done            2    0        int 
  2006 ;;  c               1   84[COMRAM] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2   63[COMRAM] int 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:       22 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    5
  2023 ;; This function calls:
  2024 ;;		_atoi
  2025 ;;		_efgtoa
  2026 ;;		_fputc
  2027 ;;		_isdigit
  2028 ;;		_isupper
  2029 ;;		_strncmp
  2030 ;;		_tolower
  2031 ;; This function is called by:
  2032 ;;		_vfprintf
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text6
  2037  0019C8                     __ptext6:
  2038                           	opt callstack 0
  2039  0019C8                     _vfpfcnvrt:
  2040                           	opt callstack 22
  2041                           
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;incstack = 0
  2046  0019C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2047  0019CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2048  0019D0  CFDE FFF6          	movff	postinc2,tblptrl
  2049  0019D4  CFDD FFF7          	movff	postdec2,tblptrh
  2050  0019D8                     	if	0	;tblptru may be non-zero
  2051  0019D8                     	endif
  2052  0019D8                     	if	0	;tblptru may be non-zero
  2053  0019D8                     	endif
  2054  0019D8  0008               	tblrd		*
  2055  0019DA  50F5               	movf	tablat,w,c
  2056  0019DC  0A25               	xorlw	37
  2057  0019DE  A4D8               	btfss	status,2,c
  2058  0019E0  D1AB               	goto	l4375
  2059                           
  2060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2061  0019E2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2062  0019E6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2063  0019EA  2ADE               	incf	postinc2,f,c
  2064  0019EC  0E00               	movlw	0
  2065  0019EE  22DD               	addwfc	postdec2,f,c
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2068  0019F0  0E00               	movlw	0
  2069  0019F2  0100               	movlb	0	; () banked
  2070  0019F4  6FE5               	movwf	(_width+1)& (0+255),b
  2071  0019F6  0E00               	movlw	0
  2072  0019F8  6FE4               	movwf	_width& (0+255),b
  2073  0019FA  C0E4  F0E8         	movff	_width,_flags
  2074  0019FE  C0E5  F0E9         	movff	_width+1,_flags+1
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2078  001A02  69E6               	setf	_prec& (0+255),b
  2079  001A04  69E7               	setf	(_prec+1)& (0+255),b
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2083  001A06  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  001A0A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  001A0E  CFDE FFF6          	movff	postinc2,tblptrl
  2086  001A12  CFDD FFF7          	movff	postdec2,tblptrh
  2087  001A16                     	if	0	;tblptru may be non-zero
  2088  001A16                     	endif
  2089  001A16                     	if	0	;tblptru may be non-zero
  2090  001A16                     	endif
  2091  001A16  0008               	tblrd		*
  2092  001A18  50F5               	movf	tablat,w,c
  2093  001A1A  0A2E               	xorlw	46
  2094  001A1C  A4D8               	btfss	status,2,c
  2095  001A1E  D06D               	goto	u4840
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2099  001A20  0E00               	movlw	0
  2100  001A22  6FE7               	movwf	(_prec+1)& (0+255),b
  2101  001A24  0E00               	movlw	0
  2102  001A26  6FE6               	movwf	_prec& (0+255),b
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2106  001A28  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2107  001A2C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2108  001A30  2ADE               	incf	postinc2,f,c
  2109  001A32  0E00               	movlw	0
  2110  001A34  22DD               	addwfc	postdec2,f,c
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2114  001A36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2115  001A3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2116  001A3E  CFDE FFF6          	movff	postinc2,tblptrl
  2117  001A42  CFDD FFF7          	movff	postdec2,tblptrh
  2118  001A46                     	if	0	;tblptru may be non-zero
  2119  001A46                     	endif
  2120  001A46                     	if	0	;tblptru may be non-zero
  2121  001A46                     	endif
  2122  001A46  0008               	tblrd		*
  2123  001A48  50F5               	movf	tablat,w,c
  2124  001A4A  0A2A               	xorlw	42
  2125  001A4C  A4D8               	btfss	status,2,c
  2126  001A4E  D01C               	goto	l4311
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2130  001A50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2131  001A54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2132  001A58  2ADE               	incf	postinc2,f,c
  2133  001A5A  0E00               	movlw	0
  2134  001A5C  22DD               	addwfc	postdec2,f,c
  2135                           
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2137  001A5E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2138  001A62  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2139  001A66  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2140  001A6A  0E02               	movlw	2
  2141  001A6C  26DE               	addwf	postinc2,f,c
  2142  001A6E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2143  001A72  0E00               	movlw	0
  2144  001A74  22DD               	addwfc	postdec2,f,c
  2145  001A76  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2146  001A7A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2147  001A7E  CFDE F0E6          	movff	postinc2,_prec
  2148  001A82  CFDD F0E7          	movff	postdec2,_prec+1
  2149                           
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2151  001A86  D039               	goto	u4840
  2152  001A88                     l4311:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2156  001A88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2157  001A8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2158  001A90  CFDE F008          	movff	postinc2,atoi@s
  2159  001A94  CFDD F009          	movff	postdec2,atoi@s+1
  2160  001A98  EC9C  F015         	call	_atoi	;wreg free
  2161  001A9C  C008  F0E6         	movff	?_atoi,_prec
  2162  001AA0  C009  F0E7         	movff	?_atoi+1,_prec+1
  2163                           
  2164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2165  001AA4  D007               	goto	l4315
  2166  001AA6                     l4313:
  2167                           
  2168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2169  001AA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  001AAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  001AAE  2ADE               	incf	postinc2,f,c
  2172  001AB0  0E00               	movlw	0
  2173  001AB2  22DD               	addwfc	postdec2,f,c
  2174  001AB4                     l4315:
  2175  001AB4  0ED0               	movlw	208
  2176  001AB6  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2177  001AB8  0EFF               	movlw	255
  2178  001ABA  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2179  001ABC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  001AC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  001AC4  CFDE FFF6          	movff	postinc2,tblptrl
  2182  001AC8  CFDD FFF7          	movff	postdec2,tblptrh
  2183  001ACC                     	if	0	;tblptru may be non-zero
  2184  001ACC                     	endif
  2185  001ACC                     	if	0	;tblptru may be non-zero
  2186  001ACC                     	endif
  2187  001ACC  0008               	tblrd		*
  2188  001ACE  50F5               	movf	tablat,w,c
  2189  001AD0  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2190  001AD2  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2191  001AD4  5046               	movf	??_vfpfcnvrt,w,c
  2192  001AD6  2648               	addwf	??_vfpfcnvrt+2,f,c
  2193  001AD8  5047               	movf	??_vfpfcnvrt+1,w,c
  2194  001ADA  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2195  001ADC  5049               	movf	??_vfpfcnvrt+3,w,c
  2196  001ADE  E106               	bnz	u4820
  2197  001AE0  0E0A               	movlw	10
  2198  001AE2  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2199  001AE4  B0D8               	btfsc	status,0,c
  2200  001AE6  D002               	goto	u4820
  2201  001AE8  0E01               	movlw	1
  2202  001AEA  D001               	goto	u4830
  2203  001AEC                     u4820:
  2204  001AEC  0E00               	movlw	0
  2205  001AEE                     u4830:
  2206  001AEE  6E4A               	movwf	_vfpfcnvrt$801,c
  2207  001AF0  6A4B               	clrf	_vfpfcnvrt$801+1,c
  2208  001AF2  504A               	movf	_vfpfcnvrt$801,w,c
  2209  001AF4  104B               	iorwf	_vfpfcnvrt$801+1,w,c
  2210  001AF6  A4D8               	btfss	status,2,c
  2211  001AF8  D7D6               	goto	l4313
  2212  001AFA                     u4840:
  2213                           
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2215  001AFA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216  001AFE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  001B02  CFDE FFF6          	movff	postinc2,tblptrl
  2218  001B06  CFDD FFF7          	movff	postdec2,tblptrh
  2219  001B0A                     	if	0	;tblptru may be non-zero
  2220  001B0A                     	endif
  2221  001B0A                     	if	0	;tblptru may be non-zero
  2222  001B0A                     	endif
  2223  001B0A  0008               	tblrd		*
  2224  001B0C  50F5               	movf	tablat,w,c
  2225  001B0E  6E07               	movwf	tolower@c,c
  2226  001B10  6A08               	clrf	tolower@c+1,c
  2227  001B12  EC48  F01E         	call	_tolower	;wreg free
  2228  001B16  5007               	movf	?_tolower,w,c
  2229  001B18  6E52               	movwf	vfpfcnvrt@ct,c
  2230                           
  2231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2232  001B1A  5052               	movf	vfpfcnvrt@ct,w,c
  2233  001B1C  B4D8               	btfsc	status,2,c
  2234  001B1E  D033               	goto	l4331
  2235                           
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2237  001B20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238  001B24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  001B28  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2240  001B2C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2241  001B30  0E01               	movlw	1
  2242  001B32  2646               	addwf	??_vfpfcnvrt,f,c
  2243  001B34  0E00               	movlw	0
  2244  001B36  2247               	addwfc	??_vfpfcnvrt+1,f,c
  2245  001B38  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2246  001B3C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2247  001B40                     	if	0	;tblptru may be non-zero
  2248  001B40                     	endif
  2249  001B40                     	if	0	;tblptru may be non-zero
  2250  001B40                     	endif
  2251  001B40  0008               	tblrd		*
  2252  001B42  50F5               	movf	tablat,w,c
  2253  001B44  6E07               	movwf	tolower@c,c
  2254  001B46  6A08               	clrf	tolower@c+1,c
  2255  001B48  EC48  F01E         	call	_tolower	;wreg free
  2256  001B4C  5007               	movf	?_tolower,w,c
  2257  001B4E  6E53               	movwf	vfpfcnvrt@ct+1,c
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2260  001B50  5053               	movf	vfpfcnvrt@ct+1,w,c
  2261  001B52  B4D8               	btfsc	status,2,c
  2262  001B54  D018               	goto	l4331
  2263                           
  2264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2265  001B56  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2266  001B5A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2267  001B5E  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2268  001B62  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2269  001B66  0E02               	movlw	2
  2270  001B68  2646               	addwf	??_vfpfcnvrt,f,c
  2271  001B6A  0E00               	movlw	0
  2272  001B6C  2247               	addwfc	??_vfpfcnvrt+1,f,c
  2273  001B6E  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2274  001B72  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2275  001B76                     	if	0	;tblptru may be non-zero
  2276  001B76                     	endif
  2277  001B76                     	if	0	;tblptru may be non-zero
  2278  001B76                     	endif
  2279  001B76  0008               	tblrd		*
  2280  001B78  50F5               	movf	tablat,w,c
  2281  001B7A  6E07               	movwf	tolower@c,c
  2282  001B7C  6A08               	clrf	tolower@c+1,c
  2283  001B7E  EC48  F01E         	call	_tolower	;wreg free
  2284  001B82  5007               	movf	?_tolower,w,c
  2285  001B84  6E54               	movwf	vfpfcnvrt@ct+2,c
  2286  001B86                     l4331:
  2287                           
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2289  001B86  0E66               	movlw	102
  2290  001B88  1852               	xorwf	vfpfcnvrt@ct,w,c
  2291  001B8A  A4D8               	btfss	status,2,c
  2292  001B8C  D03F               	goto	l4343
  2293                           
  2294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2295  001B8E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2296  001B92  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2297  001B96  CFDE FFF6          	movff	postinc2,tblptrl
  2298  001B9A  CFDD FFF7          	movff	postdec2,tblptrh
  2299  001B9E                     	if	0	;tblptru may be non-zero
  2300  001B9E                     	endif
  2301  001B9E                     	if	0	;tblptru may be non-zero
  2302  001B9E                     	endif
  2303  001B9E  0008               	tblrd		*
  2304  001BA0  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2307  001BA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2308  001BA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2309  001BAC  2ADE               	incf	postinc2,f,c
  2310  001BAE  0E00               	movlw	0
  2311  001BB0  22DD               	addwfc	postdec2,f,c
  2312                           
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2314  001BB2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2315  001BB6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2316  001BBA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2317  001BBE  0E04               	movlw	4
  2318  001BC0  26DE               	addwf	postinc2,f,c
  2319  001BC2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2320  001BC6  0E00               	movlw	0
  2321  001BC8  22DD               	addwfc	postdec2,f,c
  2322  001BCA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2323  001BCE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2324  001BD2  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  2325  001BD6  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  2326  001BDA  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  2327  001BDE  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  2328  001BE2                     l4339:
  2329                           
  2330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2331  001BE2  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2332  001BE6  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2333  001BEA  C04E  F036         	movff	vfpfcnvrt@f,efgtoa@f
  2334  001BEE  C04F  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2335  001BF2  C050  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2336  001BF6  C051  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2337  001BFA  C055  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  2338  001BFE  EC26  F008         	call	_efgtoa	;wreg free
  2339  001C02  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  2340  001C06  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2341  001C0A  0012               	return	
  2342  001C0C                     l4343:
  2343                           
  2344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2345  001C0C  0E52               	movlw	low vfpfcnvrt@ct
  2346  001C0E  6E01               	movwf	strncmp@_l,c
  2347  001C10  0E00               	movlw	high vfpfcnvrt@ct
  2348  001C12  6E02               	movwf	strncmp@_l+1,c
  2349  001C14  0E39               	movlw	low STR_22
  2350  001C16  6E03               	movwf	strncmp@_r,c
  2351  001C18  0E10               	movlw	high STR_22
  2352  001C1A  6E04               	movwf	strncmp@_r+1,c
  2353  001C1C  0E00               	movlw	0
  2354  001C1E  6E06               	movwf	strncmp@n+1,c
  2355  001C20  0E02               	movlw	2
  2356  001C22  6E05               	movwf	strncmp@n,c
  2357  001C24  EC76  F019         	call	_strncmp	;wreg free
  2358  001C28  5001               	movf	?_strncmp,w,c
  2359  001C2A  1002               	iorwf	?_strncmp+1,w,c
  2360  001C2C  A4D8               	btfss	status,2,c
  2361  001C2E  D055               	goto	l4359
  2362                           
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2364  001C30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  001C34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  001C38  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2367  001C3C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2368  001C40  0E01               	movlw	1
  2369  001C42  2646               	addwf	??_vfpfcnvrt,f,c
  2370  001C44  0E00               	movlw	0
  2371  001C46  2247               	addwfc	??_vfpfcnvrt+1,f,c
  2372  001C48  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2373  001C4C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2374  001C50                     	if	0	;tblptru may be non-zero
  2375  001C50                     	endif
  2376  001C50                     	if	0	;tblptru may be non-zero
  2377  001C50                     	endif
  2378  001C50  0008               	tblrd		*
  2379  001C52  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  2380  001C56  0EBF               	movlw	191
  2381  001C58  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  2382  001C5A  0EFF               	movlw	255
  2383  001C5C  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2384  001C5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2385  001C62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2386  001C66  CFDE FFF6          	movff	postinc2,tblptrl
  2387  001C6A  CFDD FFF7          	movff	postdec2,tblptrh
  2388  001C6E                     	if	0	;tblptru may be non-zero
  2389  001C6E                     	endif
  2390  001C6E                     	if	0	;tblptru may be non-zero
  2391  001C6E                     	endif
  2392  001C6E  0008               	tblrd		*
  2393  001C70  50F5               	movf	tablat,w,c
  2394  001C72  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2395  001C74  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2396  001C76  5046               	movf	??_vfpfcnvrt,w,c
  2397  001C78  2648               	addwf	??_vfpfcnvrt+2,f,c
  2398  001C7A  5047               	movf	??_vfpfcnvrt+1,w,c
  2399  001C7C  2249               	addwfc	??_vfpfcnvrt+3,f,c
  2400  001C7E  5049               	movf	??_vfpfcnvrt+3,w,c
  2401  001C80  E106               	bnz	u4890
  2402  001C82  0E1A               	movlw	26
  2403  001C84  5C48               	subwf	??_vfpfcnvrt+2,w,c
  2404  001C86  B0D8               	btfsc	status,0,c
  2405  001C88  D002               	goto	u4890
  2406  001C8A  0E01               	movlw	1
  2407  001C8C  D001               	goto	u4900
  2408  001C8E                     u4890:
  2409  001C8E  0E00               	movlw	0
  2410  001C90                     u4900:
  2411  001C90  6E4C               	movwf	_vfpfcnvrt$805,c
  2412  001C92  6A4D               	clrf	_vfpfcnvrt$805+1,c
  2413  001C94  504C               	movf	_vfpfcnvrt$805,w,c
  2414  001C96  104D               	iorwf	_vfpfcnvrt$805+1,w,c
  2415                           
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2417                           
  2418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2419                           
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2421  001C98  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2422  001C9C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2423  001CA0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2424  001CA4  0E04               	movlw	4
  2425  001CA6  26DE               	addwf	postinc2,f,c
  2426  001CA8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2427  001CAC  0E00               	movlw	0
  2428  001CAE  22DD               	addwfc	postdec2,f,c
  2429  001CB0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2430  001CB4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2431  001CB8  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  2432  001CBC  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  2433  001CC0  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  2434  001CC4  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  2435                           
  2436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2437                           
  2438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2439  001CC8  0E02               	movlw	2
  2440  001CCA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2441  001CCE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2442  001CD2  26DE               	addwf	postinc2,f,c
  2443  001CD4  0E00               	movlw	0
  2444  001CD6  22DD               	addwfc	postdec2,f,c
  2445  001CD8  D784               	goto	l4339
  2446  001CDA                     l4359:
  2447                           
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2449  001CDA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  001CDE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  001CE2  CFDE FFF6          	movff	postinc2,tblptrl
  2452  001CE6  CFDD FFF7          	movff	postdec2,tblptrh
  2453  001CEA                     	if	0	;tblptru may be non-zero
  2454  001CEA                     	endif
  2455  001CEA                     	if	0	;tblptru may be non-zero
  2456  001CEA                     	endif
  2457  001CEA  0008               	tblrd		*
  2458  001CEC  50F5               	movf	tablat,w,c
  2459  001CEE  0A25               	xorlw	37
  2460  001CF0  A4D8               	btfss	status,2,c
  2461  001CF2  D016               	goto	l4369
  2462                           
  2463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2464  001CF4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2465  001CF8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2466  001CFC  2ADE               	incf	postinc2,f,c
  2467  001CFE  0E00               	movlw	0
  2468  001D00  22DD               	addwfc	postdec2,f,c
  2469                           
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2471  001D02  0E00               	movlw	0
  2472  001D04  6E02               	movwf	fputc@c+1,c
  2473  001D06  0E25               	movlw	37
  2474  001D08  6E01               	movwf	fputc@c,c
  2475  001D0A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2476  001D0E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2477  001D12  ECC7  F019         	call	_fputc	;wreg free
  2478  001D16                     l4365:
  2479                           
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2481  001D16  0E00               	movlw	0
  2482  001D18  6E41               	movwf	?_vfpfcnvrt+1,c
  2483  001D1A  0E01               	movlw	1
  2484  001D1C  6E40               	movwf	?_vfpfcnvrt,c
  2485  001D1E  0012               	return	
  2486  001D20                     l4369:
  2487                           
  2488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2489  001D20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490  001D24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491  001D28  2ADE               	incf	postinc2,f,c
  2492  001D2A  0E00               	movlw	0
  2493  001D2C  22DD               	addwfc	postdec2,f,c
  2494                           
  2495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2496  001D2E  0E00               	movlw	0
  2497  001D30  6E41               	movwf	?_vfpfcnvrt+1,c
  2498  001D32  0E00               	movlw	0
  2499  001D34  6E40               	movwf	?_vfpfcnvrt,c
  2500  001D36  0012               	return	
  2501  001D38                     l4375:
  2502                           
  2503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2504  001D38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2505  001D3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2506  001D40  CFDE FFF6          	movff	postinc2,tblptrl
  2507  001D44  CFDD FFF7          	movff	postdec2,tblptrh
  2508  001D48                     	if	0	;tblptru may be non-zero
  2509  001D48                     	endif
  2510  001D48                     	if	0	;tblptru may be non-zero
  2511  001D48                     	endif
  2512  001D48  0008               	tblrd		*
  2513  001D4A  50F5               	movf	tablat,w,c
  2514  001D4C  6E01               	movwf	fputc@c,c
  2515  001D4E  6A02               	clrf	fputc@c+1,c
  2516  001D50  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2517  001D54  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2518  001D58  ECC7  F019         	call	_fputc	;wreg free
  2519                           
  2520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2521  001D5C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2522  001D60  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2523  001D64  2ADE               	incf	postinc2,f,c
  2524  001D66  0E00               	movlw	0
  2525  001D68  22DD               	addwfc	postdec2,f,c
  2526  001D6A  D7D5               	goto	l4365
  2527  001D6C                     __end_of_vfpfcnvrt:
  2528                           	opt callstack 0
  2529                           
  2530 ;; *************** function _strncmp *****************
  2531 ;; Defined at:
  2532 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2535 ;;		 -> vfpfcnvrt@ct(3), 
  2536 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2537 ;;		 -> STR_24(3), 
  2538 ;;  n               2    4[COMRAM] unsigned int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2541 ;;		 -> STR_24(3), 
  2542 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2543 ;;		 -> vfpfcnvrt@ct(3), 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2    0[COMRAM] int 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:       11 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_vfpfcnvrt
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text7
  2567  0032EC                     __ptext7:
  2568                           	opt callstack 0
  2569  0032EC                     _strncmp:
  2570                           	opt callstack 26
  2571                           
  2572                           ;incstack = 0
  2573  0032EC  C001  F008         	movff	strncmp@_l,strncmp@l
  2574  0032F0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2575  0032F4  C003  F00A         	movff	strncmp@_r,strncmp@r
  2576  0032F8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2577  0032FC  0605               	decf	strncmp@n,f,c
  2578  0032FE  A0D8               	btfss	status,0,c
  2579  003300  0606               	decf	strncmp@n+1,f,c
  2580  003302  2805               	incf	strncmp@n,w,c
  2581  003304  E10F               	bnz	l4279
  2582  003306  2806               	incf	strncmp@n+1,w,c
  2583  003308  A4D8               	btfss	status,2,c
  2584  00330A  D00C               	goto	l4279
  2585  00330C  0E00               	movlw	0
  2586  00330E  6E02               	movwf	?_strncmp+1,c
  2587  003310  0E00               	movlw	0
  2588  003312  6E01               	movwf	?_strncmp,c
  2589  003314  0012               	return	
  2590  003316                     l4277:
  2591  003316  4A08               	infsnz	strncmp@l,f,c
  2592  003318  2A09               	incf	strncmp@l+1,f,c
  2593  00331A  4A0A               	infsnz	strncmp@r,f,c
  2594  00331C  2A0B               	incf	strncmp@r+1,f,c
  2595  00331E  0605               	decf	strncmp@n,f,c
  2596  003320  A0D8               	btfss	status,0,c
  2597  003322  0606               	decf	strncmp@n+1,f,c
  2598  003324                     l4279:
  2599  003324  C008  FFD9         	movff	strncmp@l,fsr2l
  2600  003328  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2601  00332C  50DF               	movf	indf2,w,c
  2602  00332E  B4D8               	btfsc	status,2,c
  2603  003330  D01C               	goto	u4780
  2604  003332  C00A  FFF6         	movff	strncmp@r,tblptrl
  2605  003336  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2606  00333A                     	if	0	;tblptru may be non-zero
  2607  00333A                     	endif
  2608  00333A                     	if	0	;tblptru may be non-zero
  2609  00333A                     	endif
  2610  00333A  0008               	tblrd		*
  2611  00333C  50F5               	movf	tablat,w,c
  2612  00333E  0900               	iorlw	0
  2613  003340  B4D8               	btfsc	status,2,c
  2614  003342  D013               	goto	u4780
  2615  003344  5005               	movf	strncmp@n,w,c
  2616  003346  1006               	iorwf	strncmp@n+1,w,c
  2617  003348  B4D8               	btfsc	status,2,c
  2618  00334A  D00F               	goto	u4780
  2619  00334C  C008  FFD9         	movff	strncmp@l,fsr2l
  2620  003350  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2621  003354  50DF               	movf	indf2,w,c
  2622  003356  6E07               	movwf	??_strncmp& (0+255),c
  2623  003358  C00A  FFF6         	movff	strncmp@r,tblptrl
  2624  00335C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2625  003360                     	if	0	;tblptru may be non-zero
  2626  003360                     	endif
  2627  003360                     	if	0	;tblptru may be non-zero
  2628  003360                     	endif
  2629  003360  0008               	tblrd		*
  2630  003362  50F5               	movf	tablat,w,c
  2631  003364  1807               	xorwf	??_strncmp,w,c
  2632  003366  B4D8               	btfsc	status,2,c
  2633  003368  D7D6               	goto	l4277
  2634  00336A                     u4780:
  2635  00336A  C008  FFD9         	movff	strncmp@l,fsr2l
  2636  00336E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2637  003372  50DF               	movf	indf2,w,c
  2638  003374  6E07               	movwf	??_strncmp& (0+255),c
  2639  003376  C00A  FFF6         	movff	strncmp@r,tblptrl
  2640  00337A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2641  00337E                     	if	0	;tblptru may be non-zero
  2642  00337E                     	endif
  2643  00337E                     	if	0	;tblptru may be non-zero
  2644  00337E                     	endif
  2645  00337E  0008               	tblrd		*
  2646  003380  50F5               	movf	tablat,w,c
  2647  003382  5C07               	subwf	??_strncmp,w,c
  2648  003384  6E01               	movwf	?_strncmp,c
  2649  003386  6A02               	clrf	?_strncmp+1,c
  2650  003388  A0D8               	btfss	status,0,c
  2651  00338A  0602               	decf	?_strncmp+1,f,c
  2652  00338C  0012               	return		;funcret
  2653  00338E                     __end_of_strncmp:
  2654                           	opt callstack 0
  2655                           
  2656 ;; *************** function _efgtoa *****************
  2657 ;; Defined at:
  2658 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2661 ;;		 -> sprintf@f(6), 
  2662 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2663 ;;  c               1   57[COMRAM] unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  u               4   52[BANK0 ] unsigned char 
  2666 ;;  g               4   44[BANK0 ] unsigned char 
  2667 ;;  l               4   38[BANK0 ] unsigned char 
  2668 ;;  h               4   34[BANK0 ] unsigned char 
  2669 ;;  ou              4    0[BANK0 ] unsigned char 
  2670 ;;  n               2   50[BANK0 ] int 
  2671 ;;  e               2   48[BANK0 ] int 
  2672 ;;  i               2   42[BANK0 ] int 
  2673 ;;  w               2   31[BANK0 ] int 
  2674 ;;  p               2   28[BANK0 ] int 
  2675 ;;  sign            2   26[BANK0 ] int 
  2676 ;;  d               2   24[BANK0 ] int 
  2677 ;;  ne              2   22[BANK0 ] int 
  2678 ;;  m               2   20[BANK0 ] int 
  2679 ;;  pp              2   18[BANK0 ] int 
  2680 ;;  t               2   16[BANK0 ] int 
  2681 ;;  mode            1   33[BANK0 ] unsigned char 
  2682 ;;  nmode           1   30[BANK0 ] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2   51[COMRAM] int 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:       68 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    4
  2699 ;; This function calls:
  2700 ;;		___awdiv
  2701 ;;		___awmod
  2702 ;;		___fladd
  2703 ;;		___fldiv
  2704 ;;		___fleq
  2705 ;;		___flge
  2706 ;;		___flmul
  2707 ;;		___flneg
  2708 ;;		___flsub
  2709 ;;		___fltol
  2710 ;;		___fpclassifyf
  2711 ;;		_floorf
  2712 ;;		_isupper
  2713 ;;		_pad
  2714 ;;		_strcpy
  2715 ;;		_tolower
  2716 ;; This function is called by:
  2717 ;;		_vfpfcnvrt
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text8
  2722  00104C                     __ptext8:
  2723                           	opt callstack 0
  2724  00104C                     _efgtoa:
  2725                           	opt callstack 22
  2726                           
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2728                           
  2729                           ;incstack = 0
  2730  00104C  0E00               	movlw	0
  2731  00104E  0100               	movlb	0	; () banked
  2732  001050  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2733  001052  0E00               	movlw	0
  2734  001054  6F7A               	movwf	efgtoa@sign& (0+255),b
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2738  001056  C036  F08C         	movff	efgtoa@f,efgtoa@g
  2739  00105A  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2740  00105E  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2741  001062  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2745  001066  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  2746  001068  D016               	goto	l3941
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2750  00106A  0E00               	movlw	0
  2751  00106C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2752  00106E  0E01               	movlw	1
  2753  001070  6F7A               	movwf	efgtoa@sign& (0+255),b
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2757  001072  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2758  001076  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2759  00107A  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2760  00107E  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2761  001082  EC3C  F01F         	call	___flneg	;wreg free
  2762  001086  C001  F08C         	movff	?___flneg,efgtoa@g
  2763  00108A  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2764  00108E  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2765  001092  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2766  001096                     l3941:
  2767                           
  2768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2769  001096  0E00               	movlw	0
  2770  001098  0100               	movlb	0	; () banked
  2771  00109A  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2772  00109C  0E00               	movlw	0
  2773  00109E  6F92               	movwf	efgtoa@n& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2777  0010A0  C0E4  F07F         	movff	_width,efgtoa@w
  2778  0010A4  C0E5  F080         	movff	_width+1,efgtoa@w+1
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2782  0010A8  517A               	movf	efgtoa@sign& (0+255),w,b
  2783  0010AA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2784  0010AC  A4D8               	btfss	status,2,c
  2785  0010AE  D002               	goto	u4170
  2786                           
  2787                           ; BSR set to: 0
  2788  0010B0  A5E8               	btfss	_flags& (0+255),2,b
  2789  0010B2  D013               	goto	l3961
  2790  0010B4                     u4170:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2794  0010B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2795  0010B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2796  0010B8  A4D8               	btfss	status,2,c
  2797  0010BA  D004               	goto	l3953
  2798                           
  2799                           ; BSR set to: 0
  2800  0010BC  0E00               	movlw	0
  2801  0010BE  6F65               	movwf	(_efgtoa$775+1)& (0+255),b
  2802  0010C0  0E2B               	movlw	43
  2803  0010C2  D003               	goto	L1
  2804  0010C4                     l3953:
  2805                           
  2806                           ; BSR set to: 0
  2807  0010C4  0E00               	movlw	0
  2808  0010C6  6F65               	movwf	(_efgtoa$775+1)& (0+255),b
  2809  0010C8  0E2D               	movlw	45
  2810  0010CA                     L1:
  2811  0010CA  6F64               	movwf	_efgtoa$775& (0+255),b
  2812                           
  2813                           ; BSR set to: 0
  2814  0010CC  C064  F100         	movff	_efgtoa$775,_dbuf
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2818  0010D0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2819  0010D2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2823  0010D4  077F               	decf	efgtoa@w& (0+255),f,b
  2824  0010D6  A0D8               	btfss	status,0,c
  2825  0010D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2826  0010DA                     l3961:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2830  0010DA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2831  0010DE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2832  0010E2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2833  0010E6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2834  0010EA  EC58  F018         	call	___fpclassifyf	;wreg free
  2835  0010EE  0401               	decf	?___fpclassifyf,w,c
  2836  0010F0  1002               	iorwf	?___fpclassifyf+1,w,c
  2837  0010F2  A4D8               	btfss	status,2,c
  2838  0010F4  D04C               	goto	l3979
  2839  0010F6  0EBF               	movlw	191
  2840  0010F8  6E3B               	movwf	??_efgtoa& (0+255),c
  2841  0010FA  0EFF               	movlw	255
  2842  0010FC  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  2843  0010FE  503A               	movf	efgtoa@c,w,c
  2844  001100  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  2845  001102  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  2846  001104  503B               	movf	??_efgtoa,w,c
  2847  001106  263D               	addwf	??_efgtoa+2,f,c
  2848  001108  503C               	movf	??_efgtoa+1,w,c
  2849  00110A  223E               	addwfc	??_efgtoa+3,f,c
  2850  00110C  503E               	movf	??_efgtoa+3,w,c
  2851  00110E  E106               	bnz	u4200
  2852  001110  0E1A               	movlw	26
  2853  001112  5C3D               	subwf	??_efgtoa+2,w,c
  2854  001114  B0D8               	btfsc	status,0,c
  2855  001116  D002               	goto	u4200
  2856  001118  0E01               	movlw	1
  2857  00111A  D001               	goto	u4210
  2858  00111C                     u4200:
  2859  00111C  0E00               	movlw	0
  2860  00111E                     u4210:
  2861  00111E  0100               	movlb	0	; () banked
  2862  001120  6F66               	movwf	_efgtoa$776& (0+255),b
  2863  001122  6B67               	clrf	(_efgtoa$776+1)& (0+255),b
  2864                           
  2865                           ; BSR set to: 0
  2866  001124  5166               	movf	_efgtoa$776& (0+255),w,b
  2867  001126  1167               	iorwf	(_efgtoa$776+1)& (0+255),w,b
  2868  001128  B4D8               	btfsc	status,2,c
  2869  00112A  D00D               	goto	l3971
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2873  00112C  0E00               	movlw	low _dbuf
  2874  00112E  2592               	addwf	efgtoa@n& (0+255),w,b
  2875  001130  6E01               	movwf	strcpy@dest,c
  2876  001132  0E01               	movlw	high _dbuf
  2877  001134  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2878  001136  6E02               	movwf	strcpy@dest+1,c
  2879  001138  0E25               	movlw	low STR_14
  2880  00113A  6E03               	movwf	strcpy@src,c
  2881  00113C  0E10               	movlw	high STR_14
  2882  00113E  6E04               	movwf	strcpy@src+1,c
  2883  001140  ECA3  F01D         	call	_strcpy	;wreg free
  2884                           
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2886  001144  D00C               	goto	l3973
  2887  001146                     l3971:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2891  001146  0E00               	movlw	low _dbuf
  2892  001148  2592               	addwf	efgtoa@n& (0+255),w,b
  2893  00114A  6E01               	movwf	strcpy@dest,c
  2894  00114C  0E01               	movlw	high _dbuf
  2895  00114E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2896  001150  6E02               	movwf	strcpy@dest+1,c
  2897  001152  0E2D               	movlw	low STR_15
  2898  001154  6E03               	movwf	strcpy@src,c
  2899  001156  0E10               	movlw	high STR_15
  2900  001158  6E04               	movwf	strcpy@src+1,c
  2901  00115A  ECA3  F01D         	call	_strcpy	;wreg free
  2902  00115E                     l3973:
  2903                           
  2904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2905  00115E  0100               	movlb	0	; () banked
  2906  001160  0EFD               	movlw	253
  2907  001162  277F               	addwf	efgtoa@w& (0+255),f,b
  2908  001164  0EFF               	movlw	255
  2909  001166  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2910  001168                     l3975:
  2911                           
  2912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2913  001168  C034  F011         	movff	efgtoa@fp,pad@fp
  2914  00116C  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2915  001170  0E00               	movlw	low _dbuf
  2916  001172  6E13               	movwf	pad@buf,c
  2917  001174  0E01               	movlw	high _dbuf
  2918  001176  6E14               	movwf	pad@buf+1,c
  2919  001178  C07F  F015         	movff	efgtoa@w,pad@p
  2920  00117C  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2921  001180  EC17  F01A         	call	_pad	;wreg free
  2922  001184  C011  F034         	movff	?_pad,?_efgtoa
  2923  001188  C012  F035         	movff	?_pad+1,?_efgtoa+1
  2924  00118C  0012               	return	
  2925  00118E                     l3979:
  2926                           
  2927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2928  00118E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2929  001192  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2930  001196  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2931  00119A  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2932  00119E  EC58  F018         	call	___fpclassifyf	;wreg free
  2933  0011A2  5001               	movf	?___fpclassifyf,w,c
  2934  0011A4  1002               	iorwf	?___fpclassifyf+1,w,c
  2935  0011A6  A4D8               	btfss	status,2,c
  2936  0011A8  D035               	goto	l3997
  2937  0011AA  0EBF               	movlw	191
  2938  0011AC  6E3B               	movwf	??_efgtoa& (0+255),c
  2939  0011AE  0EFF               	movlw	255
  2940  0011B0  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  2941  0011B2  503A               	movf	efgtoa@c,w,c
  2942  0011B4  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  2943  0011B6  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  2944  0011B8  503B               	movf	??_efgtoa,w,c
  2945  0011BA  263D               	addwf	??_efgtoa+2,f,c
  2946  0011BC  503C               	movf	??_efgtoa+1,w,c
  2947  0011BE  223E               	addwfc	??_efgtoa+3,f,c
  2948  0011C0  503E               	movf	??_efgtoa+3,w,c
  2949  0011C2  E106               	bnz	u4240
  2950  0011C4  0E1A               	movlw	26
  2951  0011C6  5C3D               	subwf	??_efgtoa+2,w,c
  2952  0011C8  B0D8               	btfsc	status,0,c
  2953  0011CA  D002               	goto	u4240
  2954  0011CC  0E01               	movlw	1
  2955  0011CE  D001               	goto	u4250
  2956  0011D0                     u4240:
  2957  0011D0  0E00               	movlw	0
  2958  0011D2                     u4250:
  2959  0011D2  0100               	movlb	0	; () banked
  2960  0011D4  6F68               	movwf	_efgtoa$781& (0+255),b
  2961  0011D6  6B69               	clrf	(_efgtoa$781+1)& (0+255),b
  2962                           
  2963                           ; BSR set to: 0
  2964  0011D8  5168               	movf	_efgtoa$781& (0+255),w,b
  2965  0011DA  1169               	iorwf	(_efgtoa$781+1)& (0+255),w,b
  2966  0011DC  B4D8               	btfsc	status,2,c
  2967  0011DE  D00D               	goto	l3989
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2971  0011E0  0E00               	movlw	low _dbuf
  2972  0011E2  2592               	addwf	efgtoa@n& (0+255),w,b
  2973  0011E4  6E01               	movwf	strcpy@dest,c
  2974  0011E6  0E01               	movlw	high _dbuf
  2975  0011E8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2976  0011EA  6E02               	movwf	strcpy@dest+1,c
  2977  0011EC  0E29               	movlw	low STR_18
  2978  0011EE  6E03               	movwf	strcpy@src,c
  2979  0011F0  0E10               	movlw	high STR_18
  2980  0011F2  6E04               	movwf	strcpy@src+1,c
  2981  0011F4  ECA3  F01D         	call	_strcpy	;wreg free
  2982                           
  2983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2984  0011F8  D7B2               	goto	l3973
  2985  0011FA                     l3989:
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2989  0011FA  0E00               	movlw	low _dbuf
  2990  0011FC  2592               	addwf	efgtoa@n& (0+255),w,b
  2991  0011FE  6E01               	movwf	strcpy@dest,c
  2992  001200  0E01               	movlw	high _dbuf
  2993  001202  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2994  001204  6E02               	movwf	strcpy@dest+1,c
  2995  001206  0E31               	movlw	low STR_19
  2996  001208  6E03               	movwf	strcpy@src,c
  2997  00120A  0E10               	movlw	high STR_19
  2998  00120C  6E04               	movwf	strcpy@src+1,c
  2999  00120E  ECA3  F01D         	call	_strcpy	;wreg free
  3000  001212  D7A5               	goto	l3973
  3001  001214                     l3997:
  3002                           
  3003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3004  001214  0E00               	movlw	0
  3005  001216  0100               	movlb	0	; () banked
  3006  001218  6F94               	movwf	efgtoa@u& (0+255),b
  3007  00121A  0E00               	movlw	0
  3008  00121C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3009  00121E  0E80               	movlw	128
  3010  001220  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3011  001222  0E3F               	movlw	63
  3012  001224  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3013                           
  3014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3015  001226  0E00               	movlw	0
  3016  001228  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3017  00122A  0E00               	movlw	0
  3018  00122C  6F90               	movwf	efgtoa@e& (0+255),b
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3022  00122E  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3023  001232  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3024  001236  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3025  00123A  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3026  00123E  0E00               	movlw	0
  3027  001240  6E05               	movwf	___fleq@ff2,c
  3028  001242  0E00               	movlw	0
  3029  001244  6E06               	movwf	___fleq@ff2+1,c
  3030  001246  0E00               	movlw	0
  3031  001248  6E07               	movwf	___fleq@ff2+2,c
  3032  00124A  0E00               	movlw	0
  3033  00124C  6E08               	movwf	___fleq@ff2+3,c
  3034  00124E  EC64  F01A         	call	___fleq	;wreg free
  3035  001252  A0D8               	btfss	status,0,c
  3036  001254  D01E               	goto	l4007
  3037  001256  D076               	goto	u4290
  3038  001258                     l4003:
  3039                           
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3041  001258  C094  F00F         	movff	efgtoa@u,___flmul@b
  3042  00125C  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3043  001260  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3044  001264  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3045  001268  0E00               	movlw	0
  3046  00126A  6E13               	movwf	___flmul@a,c
  3047  00126C  0E00               	movlw	0
  3048  00126E  6E14               	movwf	___flmul@a+1,c
  3049  001270  0E20               	movlw	32
  3050  001272  6E15               	movwf	___flmul@a+2,c
  3051  001274  0E41               	movlw	65
  3052  001276  6E16               	movwf	___flmul@a+3,c
  3053  001278  ECB6  F00E         	call	___flmul	;wreg free
  3054  00127C  C00F  F094         	movff	?___flmul,efgtoa@u
  3055  001280  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  3056  001284  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  3057  001288  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  3058                           
  3059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3060  00128C  0100               	movlb	0	; () banked
  3061  00128E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3062  001290  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3063  001292                     l4007:
  3064                           
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3066  001292  C08C  F028         	movff	efgtoa@g,___flge@ff1
  3067  001296  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3068  00129A  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3069  00129E  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3070  0012A2  0E00               	movlw	0
  3071  0012A4  6E13               	movwf	___flmul@a,c
  3072  0012A6  0E00               	movlw	0
  3073  0012A8  6E14               	movwf	___flmul@a+1,c
  3074  0012AA  0E20               	movlw	32
  3075  0012AC  6E15               	movwf	___flmul@a+2,c
  3076  0012AE  0E41               	movlw	65
  3077  0012B0  6E16               	movwf	___flmul@a+3,c
  3078  0012B2  C094  F00F         	movff	efgtoa@u,___flmul@b
  3079  0012B6  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3080  0012BA  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3081  0012BE  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3082  0012C2  ECB6  F00E         	call	___flmul	;wreg free
  3083  0012C6  C00F  F02C         	movff	?___flmul,___flge@ff2
  3084  0012CA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3085  0012CE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3086  0012D2  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3087  0012D6  ECF0  F017         	call	___flge	;wreg free
  3088  0012DA  A0D8               	btfss	status,0,c
  3089  0012DC  D01F               	goto	l4013
  3090  0012DE  D7BC               	goto	l4003
  3091  0012E0                     l4009:
  3092                           
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3094  0012E0  C094  F001         	movff	efgtoa@u,___fldiv@b
  3095  0012E4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3096  0012E8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3097  0012EC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3098  0012F0  0E00               	movlw	0
  3099  0012F2  6E05               	movwf	___fldiv@a,c
  3100  0012F4  0E00               	movlw	0
  3101  0012F6  6E06               	movwf	___fldiv@a+1,c
  3102  0012F8  0E20               	movlw	32
  3103  0012FA  6E07               	movwf	___fldiv@a+2,c
  3104  0012FC  0E41               	movlw	65
  3105  0012FE  6E08               	movwf	___fldiv@a+3,c
  3106  001300  EC7D  F013         	call	___fldiv	;wreg free
  3107  001304  C001  F094         	movff	?___fldiv,efgtoa@u
  3108  001308  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3109  00130C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3110  001310  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3111                           
  3112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3113  001314  0100               	movlb	0	; () banked
  3114  001316  0790               	decf	efgtoa@e& (0+255),f,b
  3115  001318  A0D8               	btfss	status,0,c
  3116  00131A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3117  00131C                     l4013:
  3118                           
  3119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3120  00131C  C08C  F028         	movff	efgtoa@g,___flge@ff1
  3121  001320  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3122  001324  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3123  001328  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3124  00132C  C094  F02C         	movff	efgtoa@u,___flge@ff2
  3125  001330  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3126  001334  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3127  001338  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3128  00133C  ECF0  F017         	call	___flge	;wreg free
  3129  001340  A0D8               	btfss	status,0,c
  3130  001342  D7CE               	goto	l4009
  3131  001344                     u4290:
  3132                           
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3134  001344  C03A  F007         	movff	efgtoa@c,tolower@c
  3135  001348  6A08               	clrf	tolower@c+1,c
  3136  00134A  EC48  F01E         	call	_tolower	;wreg free
  3137  00134E  5007               	movf	?_tolower,w,c
  3138  001350  0100               	movlb	0	; () banked
  3139  001352  6F81               	movwf	efgtoa@mode& (0+255),b
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3143  001354  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3147  001358  0E67               	movlw	103
  3148  00135A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3149  00135C  A4D8               	btfss	status,2,c
  3150  00135E  D019               	goto	l4029
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3154  001360  51E6               	movf	_prec& (0+255),w,b
  3155  001362  11E7               	iorwf	(_prec+1)& (0+255),w,b
  3156  001364  A4D8               	btfss	status,2,c
  3157  001366  D004               	goto	l4025
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3161  001368  0E00               	movlw	0
  3162  00136A  6FE7               	movwf	(_prec+1)& (0+255),b
  3163  00136C  0E01               	movlw	1
  3164  00136E  6FE6               	movwf	_prec& (0+255),b
  3165  001370                     l4025:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3169  001370  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  3170  001372  D005               	goto	u4320
  3171  001374  51E7               	movf	(_prec+1)& (0+255),w,b
  3172  001376  E108               	bnz	l434
  3173  001378  05E6               	decf	_prec& (0+255),w,b
  3174  00137A  B0D8               	btfsc	status,0,c
  3175  00137C  D005               	goto	l434
  3176  00137E                     u4320:
  3177                           
  3178                           ; BSR set to: 0
  3179  00137E  0E00               	movlw	0
  3180  001380  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3181  001382  0E06               	movlw	6
  3182  001384  6F7C               	movwf	efgtoa@p& (0+255),b
  3183  001386  D008               	goto	l4035
  3184  001388                     l434:
  3185                           
  3186                           ; BSR set to: 0
  3187  001388  C0E6  F07C         	movff	_prec,efgtoa@p
  3188  00138C  C0E7  F07D         	movff	_prec+1,efgtoa@p+1
  3189  001390  D003               	goto	l4035
  3190  001392                     l4029:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3194  001392  AFE7               	btfss	(_prec+1)& (0+255),7,b
  3195  001394  D7F9               	goto	l434
  3196  001396  D7F3               	goto	u4320
  3197  001398                     l4035:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3201  001398  0E67               	movlw	103
  3202  00139A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3203  00139C  A4D8               	btfss	status,2,c
  3204  00139E  D022               	goto	l4045
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3208  0013A0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3209  0013A2  D006               	goto	u4350
  3210  0013A4  0EFC               	movlw	252
  3211  0013A6  5D90               	subwf	efgtoa@e& (0+255),w,b
  3212  0013A8  0EFF               	movlw	255
  3213  0013AA  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3214  0013AC  A0D8               	btfss	status,0,c
  3215  0013AE  D018               	goto	l4043
  3216  0013B0                     u4350:
  3217                           
  3218                           ; BSR set to: 0
  3219  0013B0  0EFF               	movlw	255
  3220  0013B2  6E3B               	movwf	??_efgtoa& (0+255),c
  3221  0013B4  0EFF               	movlw	255
  3222  0013B6  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  3223  0013B8  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  3224  0013BC  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  3225  0013C0  503B               	movf	??_efgtoa,w,c
  3226  0013C2  263D               	addwf	??_efgtoa+2,f,c
  3227  0013C4  503C               	movf	??_efgtoa+1,w,c
  3228  0013C6  223E               	addwfc	??_efgtoa+3,f,c
  3229  0013C8  5190               	movf	efgtoa@e& (0+255),w,b
  3230  0013CA  5C3D               	subwf	??_efgtoa+2,w,c
  3231  0013CC  503E               	movf	??_efgtoa+3,w,c
  3232  0013CE  0A80               	xorlw	128
  3233  0013D0  6E3F               	movwf	(??_efgtoa+4)& (0+255),c
  3234  0013D2  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3235  0013D4  0A80               	xorlw	128
  3236  0013D6  583F               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3237  0013D8  A0D8               	btfss	status,0,c
  3238  0013DA  D002               	goto	l4043
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3242  0013DC  0E66               	movlw	102
  3243  0013DE  D001               	goto	L2
  3244  0013E0                     l4043:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3248  0013E0  0E65               	movlw	101
  3249  0013E2                     L2:
  3250  0013E2  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3251  0013E4                     l4045:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3255  0013E4  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3256  0013E8  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3260  0013EC  0E67               	movlw	103
  3261  0013EE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3262  0013F0  A4D8               	btfss	status,2,c
  3263  0013F2  D005               	goto	u4390
  3264                           
  3265                           ; BSR set to: 0
  3266  0013F4  0E66               	movlw	102
  3267  0013F6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3268  0013F8  B4D8               	btfsc	status,2,c
  3269                           
  3270                           ; BSR set to: 0
  3271  0013FA  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3272  0013FC  D002               	goto	l4055
  3273  0013FE                     u4390:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3277  0013FE  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3278  001400  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3279  001402                     l4055:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3283  001402  0E66               	movlw	102
  3284  001404  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3285  001406  A4D8               	btfss	status,2,c
  3286  001408  D016               	goto	l4065
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3290  00140A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3291  00140C  D00C               	goto	l4061
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3295  00140E  0E00               	movlw	0
  3296  001410  6F94               	movwf	efgtoa@u& (0+255),b
  3297  001412  0E00               	movlw	0
  3298  001414  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3299  001416  0E80               	movlw	128
  3300  001418  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3301  00141A  0E3F               	movlw	63
  3302  00141C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3303                           
  3304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3305  00141E  0E00               	movlw	0
  3306  001420  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3307  001422  0E00               	movlw	0
  3308  001424  6F90               	movwf	efgtoa@e& (0+255),b
  3309  001426                     l4061:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3313  001426  0E67               	movlw	103
  3314  001428  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3315  00142A  B4D8               	btfsc	status,2,c
  3316  00142C  D004               	goto	l4065
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3320  00142E  5190               	movf	efgtoa@e& (0+255),w,b
  3321  001430  2774               	addwf	efgtoa@m& (0+255),f,b
  3322  001432  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3323  001434  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3324  001436                     l4065:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3328  001436  0E00               	movlw	0
  3329  001438  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3330  00143A  0E00               	movlw	0
  3331  00143C  6F8A               	movwf	efgtoa@i& (0+255),b
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3335  00143E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3336  001442  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3337  001446  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3338  00144A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3342  00144E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3343  001452  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3344  001456  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3345  00145A  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3346                           
  3347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3348  00145E  D07B               	goto	l4079
  3349  001460                     l4071:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3353  001460  C082  F001         	movff	efgtoa@h,___fldiv@b
  3354  001464  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3355  001468  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3356  00146C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3357  001470  C094  F005         	movff	efgtoa@u,___fldiv@a
  3358  001474  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3359  001478  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3360  00147C  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3361  001480  EC7D  F013         	call	___fldiv	;wreg free
  3362  001484  C001  F01A         	movff	?___fldiv,floorf@x
  3363  001488  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3364  00148C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3365  001490  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3366  001494  ECC1  F014         	call	_floorf	;wreg free
  3367  001498  C01A  F086         	movff	?_floorf,efgtoa@l
  3368  00149C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3369  0014A0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3370  0014A4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3371                           
  3372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3373  0014A8  C086  F028         	movff	efgtoa@l,___fltol@f1
  3374  0014AC  C087  F029         	movff	efgtoa@l+1,___fltol@f1+1
  3375  0014B0  C088  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  3376  0014B4  C089  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  3377  0014B8  ECBE  F018         	call	___fltol	;wreg free
  3378  0014BC  C028  F078         	movff	?___fltol,efgtoa@d
  3379  0014C0  C029  F079         	movff	?___fltol+1,efgtoa@d+1
  3380                           
  3381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3382  0014C4  C082  F028         	movff	efgtoa@h,___flsub@b
  3383  0014C8  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  3384  0014CC  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3385  0014D0  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3386  0014D4  C094  F013         	movff	efgtoa@u,___flmul@a
  3387  0014D8  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  3388  0014DC  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  3389  0014E0  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  3390  0014E4  C086  F00F         	movff	efgtoa@l,___flmul@b
  3391  0014E8  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  3392  0014EC  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  3393  0014F0  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  3394  0014F4  ECB6  F00E         	call	___flmul	;wreg free
  3395  0014F8  C00F  F02C         	movff	?___flmul,___flsub@a
  3396  0014FC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3397  001500  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3398  001504  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3399  001508  EC92  F01E         	call	___flsub	;wreg free
  3400  00150C  C028  F082         	movff	?___flsub,efgtoa@h
  3401  001510  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  3402  001514  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  3403  001518  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3406  00151C  C094  F001         	movff	efgtoa@u,___fldiv@b
  3407  001520  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3408  001524  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3409  001528  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3410  00152C  0E00               	movlw	0
  3411  00152E  6E05               	movwf	___fldiv@a,c
  3412  001530  0E00               	movlw	0
  3413  001532  6E06               	movwf	___fldiv@a+1,c
  3414  001534  0E20               	movlw	32
  3415  001536  6E07               	movwf	___fldiv@a+2,c
  3416  001538  0E41               	movlw	65
  3417  00153A  6E08               	movwf	___fldiv@a+3,c
  3418  00153C  EC7D  F013         	call	___fldiv	;wreg free
  3419  001540  C001  F094         	movff	?___fldiv,efgtoa@u
  3420  001544  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3421  001548  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3422  00154C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3423                           
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3425  001550  0100               	movlb	0	; () banked
  3426  001552  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3427  001554  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3428  001556                     l4079:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3432  001556  5174               	movf	efgtoa@m& (0+255),w,b
  3433  001558  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3434  00155A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3435  00155C  0A80               	xorlw	128
  3436  00155E  6E3B               	movwf	??_efgtoa& (0+255),c
  3437  001560  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3438  001562  0A80               	xorlw	128
  3439  001564  583B               	subwfb	??_efgtoa& (0+255),w,c
  3440  001566  A0D8               	btfss	status,0,c
  3441  001568  D77B               	goto	l4071
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3445  00156A  C094  F00F         	movff	efgtoa@u,___flmul@b
  3446  00156E  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3447  001572  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3448  001576  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3449  00157A  0E00               	movlw	0
  3450  00157C  6E13               	movwf	___flmul@a,c
  3451  00157E  0E00               	movlw	0
  3452  001580  6E14               	movwf	___flmul@a+1,c
  3453  001582  0EA0               	movlw	160
  3454  001584  6E15               	movwf	___flmul@a+2,c
  3455  001586  0E40               	movlw	64
  3456  001588  6E16               	movwf	___flmul@a+3,c
  3457  00158A  ECB6  F00E         	call	___flmul	;wreg free
  3458  00158E  C00F  F086         	movff	?___flmul,efgtoa@l
  3459  001592  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  3460  001596  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  3461  00159A  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  3462                           
  3463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3464  00159E  C082  F028         	movff	efgtoa@h,___flge@ff1
  3465  0015A2  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3466  0015A6  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3467  0015AA  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3468  0015AE  C086  F02C         	movff	efgtoa@l,___flge@ff2
  3469  0015B2  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3470  0015B6  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3471  0015BA  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3472  0015BE  ECF0  F017         	call	___flge	;wreg free
  3473  0015C2  B0D8               	btfsc	status,0,c
  3474  0015C4  D003               	goto	l4087
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3477  0015C6  0E00               	movlw	0
  3478  0015C8  0100               	movlb	0	; () banked
  3479  0015CA  D018               	goto	L3
  3480  0015CC                     l4087:
  3481                           
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3483  0015CC  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3484  0015D0  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3485  0015D4  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3486  0015D8  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3487  0015DC  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3488  0015E0  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3489  0015E4  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3490  0015E8  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3491  0015EC  EC64  F01A         	call	___fleq	;wreg free
  3492  0015F0  A0D8               	btfss	status,0,c
  3493  0015F2  D00B               	goto	l4093
  3494  0015F4  0100               	movlb	0	; () banked
  3495  0015F6  B178               	btfsc	efgtoa@d& (0+255),0,b
  3496  0015F8  D008               	goto	l4093
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3500  0015FA  0E00               	movlw	0
  3501  0015FC                     L3:
  3502  0015FC  6F86               	movwf	efgtoa@l& (0+255),b
  3503  0015FE  0E00               	movlw	0
  3504  001600  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3505  001602  0E00               	movlw	0
  3506  001604  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3507  001606  0E00               	movlw	0
  3508  001608  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3509  00160A                     l4093:
  3510                           
  3511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3512  00160A  C08C  F001         	movff	efgtoa@g,___fladd@b
  3513  00160E  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3514  001612  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3515  001616  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3516  00161A  C086  F005         	movff	efgtoa@l,___fladd@a
  3517  00161E  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3518  001622  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3519  001626  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3520  00162A  ECF7  F011         	call	___fladd	;wreg free
  3521  00162E  C001  F082         	movff	?___fladd,efgtoa@h
  3522  001632  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3523  001636  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3524  00163A  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3525                           
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3527  00163E  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3528  001642  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3529  001646  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3530  00164A  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3531                           
  3532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3533  00164E  0E65               	movlw	101
  3534  001650  0100               	movlb	0	; () banked
  3535  001652  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3536  001654  B4D8               	btfsc	status,2,c
  3537  001656  D005               	goto	l4101
  3538                           
  3539                           ; BSR set to: 0
  3540  001658  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3541  00165C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3542  001660  D004               	goto	l460
  3543  001662                     l4101:
  3544                           
  3545                           ; BSR set to: 0
  3546  001662  0E00               	movlw	0
  3547  001664  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3548  001666  0E00               	movlw	0
  3549  001668  6F76               	movwf	efgtoa@ne& (0+255),b
  3550  00166A                     l460:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3554  00166A  0E00               	movlw	0
  3555  00166C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3556  00166E  0E00               	movlw	0
  3557  001670  6F72               	movwf	efgtoa@pp& (0+255),b
  3558                           
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3560  001672  0E00               	movlw	0
  3561  001674  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3562  001676  0E00               	movlw	0
  3563  001678  6F70               	movwf	efgtoa@t& (0+255),b
  3564                           
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3566  00167A  0E00               	movlw	0
  3567  00167C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3568  00167E  0E00               	movlw	0
  3569  001680  6F8A               	movwf	efgtoa@i& (0+255),b
  3570                           
  3571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3572  001682  D0C6               	goto	l4151
  3573  001684                     l4103:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3577  001684  C082  F001         	movff	efgtoa@h,___fldiv@b
  3578  001688  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3579  00168C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3580  001690  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3581  001694  C094  F005         	movff	efgtoa@u,___fldiv@a
  3582  001698  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3583  00169C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3584  0016A0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3585  0016A4  EC7D  F013         	call	___fldiv	;wreg free
  3586  0016A8  C001  F01A         	movff	?___fldiv,floorf@x
  3587  0016AC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3588  0016B0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3589  0016B4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3590  0016B8  ECC1  F014         	call	_floorf	;wreg free
  3591  0016BC  C01A  F086         	movff	?_floorf,efgtoa@l
  3592  0016C0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3593  0016C4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3594  0016C8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3595                           
  3596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3597  0016CC  C086  F028         	movff	efgtoa@l,___fltol@f1
  3598  0016D0  C087  F029         	movff	efgtoa@l+1,___fltol@f1+1
  3599  0016D4  C088  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  3600  0016D8  C089  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  3601  0016DC  ECBE  F018         	call	___fltol	;wreg free
  3602  0016E0  C028  F078         	movff	?___fltol,efgtoa@d
  3603  0016E4  C029  F079         	movff	?___fltol+1,efgtoa@d+1
  3604                           
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3606  0016E8  0100               	movlb	0	; () banked
  3607  0016EA  B9E8               	btfsc	_flags& (0+255),4,b
  3608  0016EC  D00C               	goto	l4115
  3609                           
  3610                           ; BSR set to: 0
  3611  0016EE  5178               	movf	efgtoa@d& (0+255),w,b
  3612  0016F0  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3613  0016F2  A4D8               	btfss	status,2,c
  3614  0016F4  D008               	goto	l4115
  3615                           
  3616                           ; BSR set to: 0
  3617  0016F6  0E67               	movlw	103
  3618  0016F8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3619  0016FA  B4D8               	btfsc	status,2,c
  3620                           
  3621                           ; BSR set to: 0
  3622  0016FC  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3623  0016FE  D003               	goto	l4115
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3627  001700  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3628  001702  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3629                           
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3631  001704  D039               	goto	l4143
  3632  001706                     l4115:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3636  001706  5172               	movf	efgtoa@pp& (0+255),w,b
  3637  001708  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3638  00170A  B4D8               	btfsc	status,2,c
  3639                           
  3640                           ; BSR set to: 0
  3641  00170C  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3642  00170E  D022               	goto	l4135
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3646  001710  0E00               	movlw	low _dbuf
  3647  001712  2592               	addwf	efgtoa@n& (0+255),w,b
  3648  001714  6ED9               	movwf	fsr2l,c
  3649  001716  0E01               	movlw	high _dbuf
  3650  001718  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3651  00171A  6EDA               	movwf	fsr2h,c
  3652  00171C  0E2E               	movlw	46
  3653  00171E  6EDF               	movwf	indf2,c
  3654                           
  3655                           ; BSR set to: 0
  3656  001720  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3657  001722  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3661  001724  077F               	decf	efgtoa@w& (0+255),f,b
  3662  001726  A0D8               	btfss	status,0,c
  3663  001728  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3667  00172A  0E00               	movlw	0
  3668  00172C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3669  00172E  0E01               	movlw	1
  3670  001730  6F72               	movwf	efgtoa@pp& (0+255),b
  3671  001732  D010               	goto	l4135
  3672  001734                     l4127:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3676  001734  0E00               	movlw	low _dbuf
  3677  001736  2592               	addwf	efgtoa@n& (0+255),w,b
  3678  001738  6ED9               	movwf	fsr2l,c
  3679  00173A  0E01               	movlw	high _dbuf
  3680  00173C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3681  00173E  6EDA               	movwf	fsr2h,c
  3682  001740  0E30               	movlw	48
  3683  001742  6EDF               	movwf	indf2,c
  3684                           
  3685                           ; BSR set to: 0
  3686  001744  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3687  001746  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3691  001748  077F               	decf	efgtoa@w& (0+255),f,b
  3692  00174A  A0D8               	btfss	status,0,c
  3693  00174C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3697  00174E  0770               	decf	efgtoa@t& (0+255),f,b
  3698  001750  A0D8               	btfss	status,0,c
  3699  001752  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3700  001754                     l4135:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3704  001754  5170               	movf	efgtoa@t& (0+255),w,b
  3705  001756  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3706  001758  A4D8               	btfss	status,2,c
  3707  00175A  D7EC               	goto	l4127
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3711  00175C  0E00               	movlw	low _dbuf
  3712  00175E  2592               	addwf	efgtoa@n& (0+255),w,b
  3713  001760  6ED9               	movwf	fsr2l,c
  3714  001762  0E01               	movlw	high _dbuf
  3715  001764  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3716  001766  6EDA               	movwf	fsr2h,c
  3717  001768  5178               	movf	efgtoa@d& (0+255),w,b
  3718  00176A  0F30               	addlw	48
  3719  00176C  6EDF               	movwf	indf2,c
  3720                           
  3721                           ; BSR set to: 0
  3722  00176E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3723  001770  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3727  001772  077F               	decf	efgtoa@w& (0+255),f,b
  3728  001774  A0D8               	btfss	status,0,c
  3729  001776  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3730  001778                     l4143:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3734  001778  C082  F028         	movff	efgtoa@h,___flsub@b
  3735  00177C  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  3736  001780  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3737  001784  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3738  001788  C094  F013         	movff	efgtoa@u,___flmul@a
  3739  00178C  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  3740  001790  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  3741  001794  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  3742  001798  C086  F00F         	movff	efgtoa@l,___flmul@b
  3743  00179C  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  3744  0017A0  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  3745  0017A4  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  3746  0017A8  ECB6  F00E         	call	___flmul	;wreg free
  3747  0017AC  C00F  F02C         	movff	?___flmul,___flsub@a
  3748  0017B0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3749  0017B4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3750  0017B8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3751  0017BC  EC92  F01E         	call	___flsub	;wreg free
  3752  0017C0  C028  F082         	movff	?___flsub,efgtoa@h
  3753  0017C4  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  3754  0017C8  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  3755  0017CC  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  3756                           
  3757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3758  0017D0  C094  F001         	movff	efgtoa@u,___fldiv@b
  3759  0017D4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3760  0017D8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3761  0017DC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3762  0017E0  0E00               	movlw	0
  3763  0017E2  6E05               	movwf	___fldiv@a,c
  3764  0017E4  0E00               	movlw	0
  3765  0017E6  6E06               	movwf	___fldiv@a+1,c
  3766  0017E8  0E20               	movlw	32
  3767  0017EA  6E07               	movwf	___fldiv@a+2,c
  3768  0017EC  0E41               	movlw	65
  3769  0017EE  6E08               	movwf	___fldiv@a+3,c
  3770  0017F0  EC7D  F013         	call	___fldiv	;wreg free
  3771  0017F4  C001  F094         	movff	?___fldiv,efgtoa@u
  3772  0017F8  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3773  0017FC  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3774  001800  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3775                           
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3777  001804  0100               	movlb	0	; () banked
  3778  001806  0776               	decf	efgtoa@ne& (0+255),f,b
  3779  001808  A0D8               	btfss	status,0,c
  3780  00180A  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3784  00180C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3785  00180E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3786  001810                     l4151:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3790  001810  5174               	movf	efgtoa@m& (0+255),w,b
  3791  001812  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3792  001814  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3793  001816  0A80               	xorlw	128
  3794  001818  6E3B               	movwf	??_efgtoa& (0+255),c
  3795  00181A  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3796  00181C  0A80               	xorlw	128
  3797  00181E  583B               	subwfb	??_efgtoa& (0+255),w,c
  3798  001820  B0D8               	btfsc	status,0,c
  3799  001822  D008               	goto	u4560
  3800                           
  3801                           ; BSR set to: 0
  3802  001824  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3803  001826  D72E               	goto	l4103
  3804  001828  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3805  00182A  E104               	bnz	u4560
  3806  00182C  0E4B               	movlw	75
  3807  00182E  5D92               	subwf	efgtoa@n& (0+255),w,b
  3808  001830  A0D8               	btfss	status,0,c
  3809  001832  D728               	goto	l4103
  3810  001834                     u4560:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3814  001834  5172               	movf	efgtoa@pp& (0+255),w,b
  3815  001836  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3816  001838  B4D8               	btfsc	status,2,c
  3817                           
  3818                           ; BSR set to: 0
  3819  00183A  A9E8               	btfss	_flags& (0+255),4,b
  3820  00183C  D00A               	goto	l4163
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3824  00183E  0E00               	movlw	low _dbuf
  3825  001840  2592               	addwf	efgtoa@n& (0+255),w,b
  3826  001842  6ED9               	movwf	fsr2l,c
  3827  001844  0E01               	movlw	high _dbuf
  3828  001846  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3829  001848  6EDA               	movwf	fsr2h,c
  3830  00184A  0E2E               	movlw	46
  3831  00184C  6EDF               	movwf	indf2,c
  3832                           
  3833                           ; BSR set to: 0
  3834  00184E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3835  001850  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3836  001852                     l4163:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3840  001852  0E00               	movlw	low _dbuf
  3841  001854  2592               	addwf	efgtoa@n& (0+255),w,b
  3842  001856  6ED9               	movwf	fsr2l,c
  3843  001858  0E01               	movlw	high _dbuf
  3844  00185A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3845  00185C  6EDA               	movwf	fsr2h,c
  3846  00185E  0E00               	movlw	0
  3847  001860  6EDF               	movwf	indf2,c
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3851  001862  0E65               	movlw	101
  3852  001864  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3853  001866  A4D8               	btfss	status,2,c
  3854  001868  D47F               	goto	l3975
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3858  00186A  0E00               	movlw	0
  3859  00186C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3860  00186E  0E4F               	movlw	79
  3861  001870  6F8A               	movwf	efgtoa@i& (0+255),b
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3865  001872  0E00               	movlw	low _dbuf
  3866  001874  258A               	addwf	efgtoa@i& (0+255),w,b
  3867  001876  6ED9               	movwf	fsr2l,c
  3868  001878  0E01               	movlw	high _dbuf
  3869  00187A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3870  00187C  6EDA               	movwf	fsr2h,c
  3871  00187E  0E00               	movlw	0
  3872  001880  6EDF               	movwf	indf2,c
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3876  001882  0E00               	movlw	0
  3877  001884  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3878  001886  0E00               	movlw	0
  3879  001888  6F7A               	movwf	efgtoa@sign& (0+255),b
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3883  00188A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3884  00188C  D008               	goto	l4179
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3888  00188E  0E00               	movlw	0
  3889  001890  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3890  001892  0E01               	movlw	1
  3891  001894  6F7A               	movwf	efgtoa@sign& (0+255),b
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3895  001896  6D90               	negf	efgtoa@e& (0+255),b
  3896  001898  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3897  00189A  B0D8               	btfsc	status,0,c
  3898  00189C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3899  00189E                     l4179:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3903  00189E  0E00               	movlw	0
  3904  0018A0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3905  0018A2  0E02               	movlw	2
  3906  0018A4  6F7C               	movwf	efgtoa@p& (0+255),b
  3907                           
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3909  0018A6  D02B               	goto	l4191
  3910  0018A8                     l4181:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3914  0018A8  078A               	decf	efgtoa@i& (0+255),f,b
  3915  0018AA  A0D8               	btfss	status,0,c
  3916  0018AC  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3920  0018AE  0E00               	movlw	low _dbuf
  3921  0018B0  258A               	addwf	efgtoa@i& (0+255),w,b
  3922  0018B2  6ED9               	movwf	fsr2l,c
  3923  0018B4  0E01               	movlw	high _dbuf
  3924  0018B6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3925  0018B8  6EDA               	movwf	fsr2h,c
  3926  0018BA  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3927  0018BE  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3928  0018C2  0E00               	movlw	0
  3929  0018C4  6E04               	movwf	___awmod@divisor+1,c
  3930  0018C6  0E0A               	movlw	10
  3931  0018C8  6E03               	movwf	___awmod@divisor,c
  3932  0018CA  EC27  F01C         	call	___awmod	;wreg free
  3933  0018CE  5001               	movf	?___awmod,w,c
  3934  0018D0  0F30               	addlw	48
  3935  0018D2  6EDF               	movwf	indf2,c
  3936                           
  3937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3938  0018D4  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3939  0018D8  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3940  0018DC  0E00               	movlw	0
  3941  0018DE  6E04               	movwf	___awdiv@divisor+1,c
  3942  0018E0  0E0A               	movlw	10
  3943  0018E2  6E03               	movwf	___awdiv@divisor,c
  3944  0018E4  ECA9  F01A         	call	___awdiv	;wreg free
  3945  0018E8  C001  F090         	movff	?___awdiv,efgtoa@e
  3946  0018EC  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3947                           
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3949  0018F0  0100               	movlb	0	; () banked
  3950  0018F2  077C               	decf	efgtoa@p& (0+255),f,b
  3951  0018F4  A0D8               	btfss	status,0,c
  3952  0018F6  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3956  0018F8  077F               	decf	efgtoa@w& (0+255),f,b
  3957  0018FA  A0D8               	btfss	status,0,c
  3958  0018FC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3959  0018FE                     l4191:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3963  0018FE  5190               	movf	efgtoa@e& (0+255),w,b
  3964  001900  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3965  001902  A4D8               	btfss	status,2,c
  3966  001904  D7D1               	goto	l4181
  3967                           
  3968                           ; BSR set to: 0
  3969  001906  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3970  001908  D005               	goto	u4620
  3971  00190A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3972  00190C  E1CD               	bnz	l4181
  3973  00190E  057C               	decf	efgtoa@p& (0+255),w,b
  3974  001910  B0D8               	btfsc	status,0,c
  3975  001912  D7CA               	goto	l4181
  3976  001914                     u4620:
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3980  001914  078A               	decf	efgtoa@i& (0+255),f,b
  3981  001916  A0D8               	btfss	status,0,c
  3982  001918  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3986  00191A  517A               	movf	efgtoa@sign& (0+255),w,b
  3987  00191C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3988  00191E  A4D8               	btfss	status,2,c
  3989  001920  D004               	goto	l4201
  3990                           
  3991                           ; BSR set to: 0
  3992  001922  0E00               	movlw	0
  3993  001924  6F6B               	movwf	(_efgtoa$785+1)& (0+255),b
  3994  001926  0E2B               	movlw	43
  3995  001928  D003               	goto	L4
  3996  00192A                     l4201:
  3997                           
  3998                           ; BSR set to: 0
  3999  00192A  0E00               	movlw	0
  4000  00192C  6F6B               	movwf	(_efgtoa$785+1)& (0+255),b
  4001  00192E  0E2D               	movlw	45
  4002  001930                     L4:
  4003  001930  6F6A               	movwf	_efgtoa$785& (0+255),b
  4004                           
  4005                           ; BSR set to: 0
  4006  001932  0E00               	movlw	low _dbuf
  4007  001934  258A               	addwf	efgtoa@i& (0+255),w,b
  4008  001936  6ED9               	movwf	fsr2l,c
  4009  001938  0E01               	movlw	high _dbuf
  4010  00193A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4011  00193C  6EDA               	movwf	fsr2h,c
  4012  00193E  C06A  FFDF         	movff	_efgtoa$785,indf2
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4016  001942  077F               	decf	efgtoa@w& (0+255),f,b
  4017  001944  A0D8               	btfss	status,0,c
  4018  001946  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4022  001948  078A               	decf	efgtoa@i& (0+255),f,b
  4023  00194A  A0D8               	btfss	status,0,c
  4024  00194C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4025                           
  4026                           ; BSR set to: 0
  4027  00194E  0EBF               	movlw	191
  4028  001950  6E3B               	movwf	??_efgtoa& (0+255),c
  4029  001952  0EFF               	movlw	255
  4030  001954  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  4031  001956  503A               	movf	efgtoa@c,w,c
  4032  001958  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  4033  00195A  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  4034  00195C  503B               	movf	??_efgtoa,w,c
  4035  00195E  263D               	addwf	??_efgtoa+2,f,c
  4036  001960  503C               	movf	??_efgtoa+1,w,c
  4037  001962  223E               	addwfc	??_efgtoa+3,f,c
  4038  001964  503E               	movf	??_efgtoa+3,w,c
  4039  001966  E106               	bnz	u4640
  4040  001968  0E1A               	movlw	26
  4041  00196A  5C3D               	subwf	??_efgtoa+2,w,c
  4042  00196C  B0D8               	btfsc	status,0,c
  4043  00196E  D002               	goto	u4640
  4044  001970  0E01               	movlw	1
  4045  001972  D001               	goto	u4650
  4046  001974                     u4640:
  4047  001974  0E00               	movlw	0
  4048  001976                     u4650:
  4049  001976  6F6E               	movwf	_efgtoa$787& (0+255),b
  4050  001978  6B6F               	clrf	(_efgtoa$787+1)& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053  00197A  516E               	movf	_efgtoa$787& (0+255),w,b
  4054  00197C  116F               	iorwf	(_efgtoa$787+1)& (0+255),w,b
  4055  00197E  A4D8               	btfss	status,2,c
  4056  001980  D004               	goto	l4217
  4057                           
  4058                           ; BSR set to: 0
  4059  001982  0E00               	movlw	0
  4060  001984  6F6D               	movwf	(_efgtoa$786+1)& (0+255),b
  4061  001986  0E65               	movlw	101
  4062  001988  D003               	goto	L5
  4063  00198A                     l4217:
  4064                           
  4065                           ; BSR set to: 0
  4066  00198A  0E00               	movlw	0
  4067  00198C  6F6D               	movwf	(_efgtoa$786+1)& (0+255),b
  4068  00198E  0E45               	movlw	69
  4069  001990                     L5:
  4070  001990  6F6C               	movwf	_efgtoa$786& (0+255),b
  4071                           
  4072                           ; BSR set to: 0
  4073  001992  0E00               	movlw	low _dbuf
  4074  001994  258A               	addwf	efgtoa@i& (0+255),w,b
  4075  001996  6ED9               	movwf	fsr2l,c
  4076  001998  0E01               	movlw	high _dbuf
  4077  00199A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4078  00199C  6EDA               	movwf	fsr2h,c
  4079  00199E  C06C  FFDF         	movff	_efgtoa$786,indf2
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4083  0019A2  077F               	decf	efgtoa@w& (0+255),f,b
  4084  0019A4  A0D8               	btfss	status,0,c
  4085  0019A6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4089  0019A8  0E00               	movlw	low _dbuf
  4090  0019AA  2592               	addwf	efgtoa@n& (0+255),w,b
  4091  0019AC  6E01               	movwf	strcpy@dest,c
  4092  0019AE  0E01               	movlw	high _dbuf
  4093  0019B0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4094  0019B2  6E02               	movwf	strcpy@dest+1,c
  4095  0019B4  0E00               	movlw	low _dbuf
  4096  0019B6  258A               	addwf	efgtoa@i& (0+255),w,b
  4097  0019B8  6E03               	movwf	strcpy@src,c
  4098  0019BA  0E01               	movlw	high _dbuf
  4099  0019BC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4100  0019BE  6E04               	movwf	strcpy@src+1,c
  4101  0019C0  ECA3  F01D         	call	_strcpy	;wreg free
  4102  0019C4  EFB4  F008         	goto	l3975
  4103  0019C8                     __end_of_efgtoa:
  4104                           	opt callstack 0
  4105                           
  4106 ;; *************** function _tolower *****************
  4107 ;; Defined at:
  4108 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  c               2    6[COMRAM] int 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  2    6[COMRAM] int 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;Total ram usage:        8 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    1
  4129 ;; This function calls:
  4130 ;;		_isupper
  4131 ;; This function is called by:
  4132 ;;		_efgtoa
  4133 ;;		_vfpfcnvrt
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text9
  4138  003C90                     __ptext9:
  4139                           	opt callstack 0
  4140  003C90                     _tolower:
  4141                           	opt callstack 25
  4142                           
  4143                           ;incstack = 0
  4144  003C90  0EBF               	movlw	191
  4145  003C92  6E09               	movwf	??_tolower& (0+255),c
  4146  003C94  0EFF               	movlw	255
  4147  003C96  6E0A               	movwf	(??_tolower+1)& (0+255),c
  4148  003C98  C007  F00B         	movff	tolower@c,??_tolower+2
  4149  003C9C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4150  003CA0  5009               	movf	??_tolower,w,c
  4151  003CA2  260B               	addwf	??_tolower+2,f,c
  4152  003CA4  500A               	movf	??_tolower+1,w,c
  4153  003CA6  220C               	addwfc	??_tolower+3,f,c
  4154  003CA8  500C               	movf	??_tolower+3,w,c
  4155  003CAA  E106               	bnz	u3280
  4156  003CAC  0E1A               	movlw	26
  4157  003CAE  5C0B               	subwf	??_tolower+2,w,c
  4158  003CB0  B0D8               	btfsc	status,0,c
  4159  003CB2  D002               	goto	u3280
  4160  003CB4  0E01               	movlw	1
  4161  003CB6  D001               	goto	u3290
  4162  003CB8                     u3280:
  4163  003CB8  0E00               	movlw	0
  4164  003CBA                     u3290:
  4165  003CBA  6E0D               	movwf	_tolower$1392,c
  4166  003CBC  6A0E               	clrf	_tolower$1392+1,c
  4167  003CBE  500D               	movf	_tolower$1392,w,c
  4168  003CC0  100E               	iorwf	_tolower$1392+1,w,c
  4169  003CC2  B4D8               	btfsc	status,2,c
  4170  003CC4  D006               	goto	l1325
  4171  003CC6  0E20               	movlw	32
  4172  003CC8  1007               	iorwf	tolower@c,w,c
  4173  003CCA  6E07               	movwf	?_tolower,c
  4174  003CCC  5008               	movf	tolower@c+1,w,c
  4175  003CCE  6E08               	movwf	?_tolower+1,c
  4176  003CD0  0012               	return	
  4177  003CD2                     l1325:
  4178  003CD2  C007  F007         	movff	tolower@c,?_tolower
  4179  003CD6  C008  F008         	movff	tolower@c+1,?_tolower+1
  4180  003CDA  0012               	return		;funcret
  4181  003CDC                     __end_of_tolower:
  4182                           	opt callstack 0
  4183                           
  4184 ;; *************** function _isupper *****************
  4185 ;; Defined at:
  4186 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  c               2    0[COMRAM] int 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  2    0[COMRAM] int 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:        6 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_efgtoa
  4210 ;;		_vfpfcnvrt
  4211 ;;		_tolower
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text10
  4216  003E18                     __ptext10:
  4217                           	opt callstack 0
  4218  003E18                     _isupper:
  4219                           	opt callstack 25
  4220                           
  4221                           ;incstack = 0
  4222  003E18  0EBF               	movlw	191
  4223  003E1A  6E03               	movwf	??_isupper& (0+255),c
  4224  003E1C  0EFF               	movlw	255
  4225  003E1E  6E04               	movwf	(??_isupper+1)& (0+255),c
  4226  003E20  C001  F005         	movff	isupper@c,??_isupper+2
  4227  003E24  C002  F006         	movff	isupper@c+1,??_isupper+3
  4228  003E28  5003               	movf	??_isupper,w,c
  4229  003E2A  2605               	addwf	??_isupper+2,f,c
  4230  003E2C  5004               	movf	??_isupper+1,w,c
  4231  003E2E  2206               	addwfc	??_isupper+3,f,c
  4232  003E30  5006               	movf	??_isupper+3,w,c
  4233  003E32  E106               	bnz	u2720
  4234  003E34  0E1A               	movlw	26
  4235  003E36  5C05               	subwf	??_isupper+2,w,c
  4236  003E38  B0D8               	btfsc	status,0,c
  4237  003E3A  D002               	goto	u2720
  4238  003E3C  0E01               	movlw	1
  4239  003E3E  D001               	goto	u2730
  4240  003E40                     u2720:
  4241  003E40  0E00               	movlw	0
  4242  003E42                     u2730:
  4243  003E42  6E01               	movwf	?_isupper,c
  4244  003E44  6A02               	clrf	?_isupper+1,c
  4245  003E46  0012               	return		;funcret
  4246  003E48                     __end_of_isupper:
  4247                           	opt callstack 0
  4248                           
  4249 ;; *************** function _strcpy *****************
  4250 ;; Defined at:
  4251 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4254 ;;		 -> dbuf(80), 
  4255 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4256 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4257 ;;		 -> dbuf(80), 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  d               2    8[COMRAM] PTR unsigned char 
  4260 ;;		 -> dbuf(80), 
  4261 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4262 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4263 ;;		 -> dbuf(80), 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  2    0[COMRAM] PTR unsigned char 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;Total ram usage:       10 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_efgtoa
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text11
  4287  003B46                     __ptext11:
  4288                           	opt callstack 0
  4289  003B46                     _strcpy:
  4290                           	opt callstack 25
  4291                           
  4292                           ;incstack = 0
  4293  003B46  C003  F007         	movff	strcpy@src,strcpy@s
  4294  003B4A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4295  003B4E  C001  F009         	movff	strcpy@dest,strcpy@d
  4296  003B52  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4297  003B56                     l3413:
  4298  003B56  5007               	movf	strcpy@s,w,c
  4299  003B58  6E05               	movwf	??_strcpy& (0+255),c
  4300  003B5A  5008               	movf	strcpy@s+1,w,c
  4301  003B5C  6E06               	movwf	(??_strcpy+1)& (0+255),c
  4302  003B5E  4A07               	infsnz	strcpy@s,f,c
  4303  003B60  2A08               	incf	strcpy@s+1,f,c
  4304  003B62  C005  FFF6         	movff	??_strcpy,tblptrl
  4305  003B66  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4306  003B6A  0E00               	movlw	low (__smallconst shr (0+16))
  4307  003B6C  6EF8               	movwf	tblptru,c
  4308  003B6E  C009  FFD9         	movff	strcpy@d,fsr2l
  4309  003B72  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4310  003B76  4A09               	infsnz	strcpy@d,f,c
  4311  003B78  2A0A               	incf	strcpy@d+1,f,c
  4312  003B7A  0E0F               	movlw	(high __ramtop+-1)
  4313  003B7C  64F7               	cpfsgt	tblptrh,c
  4314  003B7E  D003               	bra	u3267
  4315  003B80  0008               	tblrd		*
  4316  003B82  50F5               	movf	tablat,w,c
  4317  003B84  D005               	bra	u3260
  4318  003B86                     u3267:
  4319  003B86  CFF6 FFE9          	movff	tblptrl,fsr0l
  4320  003B8A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4321  003B8E  50EF               	movf	indf0,w,c
  4322  003B90                     u3260:
  4323  003B90  6EDF               	movwf	indf2,c
  4324  003B92  50DF               	movf	indf2,w,c
  4325  003B94  B4D8               	btfsc	status,2,c
  4326  003B96  0012               	return	
  4327  003B98  D7DE               	goto	l3413
  4328  003B9A                     __end_of_strcpy:
  4329                           	opt callstack 0
  4330                           
  4331 ;; *************** function _pad *****************
  4332 ;; Defined at:
  4333 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4336 ;;		 -> sprintf@f(6), 
  4337 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4338 ;;		 -> dbuf(80), 
  4339 ;;  p               2   20[COMRAM] int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  w               2   25[COMRAM] int 
  4342 ;;  i               2   23[COMRAM] int 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2   16[COMRAM] int 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4352 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;Total ram usage:       11 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    3
  4359 ;; This function calls:
  4360 ;;		_fputc
  4361 ;;		_fputs
  4362 ;;		_strlen
  4363 ;; This function is called by:
  4364 ;;		_efgtoa
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text12
  4369  00342E                     __ptext12:
  4370                           	opt callstack 0
  4371  00342E                     _pad:
  4372                           	opt callstack 22
  4373                           
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4375                           
  4376                           ;incstack = 0
  4377  00342E  0100               	movlb	0	; () banked
  4378  003430  A1E8               	btfss	_flags& (0+255),0,b
  4379  003432  D00A               	goto	l3371
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4383  003434  C013  F00A         	movff	pad@buf,fputs@s
  4384  003438  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4385  00343C  C011  F00C         	movff	pad@fp,fputs@fp
  4386  003440  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4387  003444  ECD4  F01E         	call	_fputs	;wreg free
  4388  003448                     l3371:
  4389                           
  4390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4391  003448  BE16               	btfsc	pad@p+1,7,c
  4392  00344A  D005               	goto	l3375
  4393  00344C  C015  F01A         	movff	pad@p,pad@w
  4394  003450  C016  F01B         	movff	pad@p+1,pad@w+1
  4395  003454  D004               	goto	l393
  4396  003456                     l3375:
  4397  003456  0E00               	movlw	0
  4398  003458  6E1B               	movwf	pad@w+1,c
  4399  00345A  0E00               	movlw	0
  4400  00345C  6E1A               	movwf	pad@w,c
  4401  00345E                     l393:
  4402                           
  4403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4404  00345E  0E00               	movlw	0
  4405  003460  6E19               	movwf	pad@i+1,c
  4406  003462  0E00               	movlw	0
  4407  003464  6E18               	movwf	pad@i,c
  4408                           
  4409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4410  003466  D00C               	goto	l3381
  4411  003468                     l3377:
  4412                           
  4413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4414  003468  0E00               	movlw	0
  4415  00346A  6E02               	movwf	fputc@c+1,c
  4416  00346C  0E20               	movlw	32
  4417  00346E  6E01               	movwf	fputc@c,c
  4418  003470  C011  F003         	movff	pad@fp,fputc@fp
  4419  003474  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4420  003478  ECC7  F019         	call	_fputc	;wreg free
  4421                           
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4423  00347C  4A18               	infsnz	pad@i,f,c
  4424  00347E  2A19               	incf	pad@i+1,f,c
  4425  003480                     l3381:
  4426                           
  4427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4428  003480  501A               	movf	pad@w,w,c
  4429  003482  5C18               	subwf	pad@i,w,c
  4430  003484  5019               	movf	pad@i+1,w,c
  4431  003486  0A80               	xorlw	128
  4432  003488  6E17               	movwf	??_pad& (0+255),c
  4433  00348A  501B               	movf	pad@w+1,w,c
  4434  00348C  0A80               	xorlw	128
  4435  00348E  5817               	subwfb	??_pad& (0+255),w,c
  4436  003490  A0D8               	btfss	status,0,c
  4437  003492  D7EA               	goto	l3377
  4438                           
  4439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4440  003494  0100               	movlb	0	; () banked
  4441  003496  B1E8               	btfsc	_flags& (0+255),0,b
  4442  003498  D00A               	goto	l3385
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4446  00349A  C013  F00A         	movff	pad@buf,fputs@s
  4447  00349E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4448  0034A2  C011  F00C         	movff	pad@fp,fputs@fp
  4449  0034A6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4450  0034AA  ECD4  F01E         	call	_fputs	;wreg free
  4451  0034AE                     l3385:
  4452                           
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4454  0034AE  C013  F001         	movff	pad@buf,strlen@s
  4455  0034B2  C014  F002         	movff	pad@buf+1,strlen@s+1
  4456  0034B6  EC53  F01F         	call	_strlen	;wreg free
  4457  0034BA  501A               	movf	pad@w,w,c
  4458  0034BC  2401               	addwf	?_strlen,w,c
  4459  0034BE  6E11               	movwf	?_pad,c
  4460  0034C0  501B               	movf	pad@w+1,w,c
  4461  0034C2  2002               	addwfc	?_strlen+1,w,c
  4462  0034C4  6E12               	movwf	?_pad+1,c
  4463  0034C6  0012               	return		;funcret
  4464  0034C8                     __end_of_pad:
  4465                           	opt callstack 0
  4466                           
  4467 ;; *************** function _strlen *****************
  4468 ;; Defined at:
  4469 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4472 ;;		 -> dbuf(80), 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4475 ;;		 -> dbuf(80), 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2    0[COMRAM] unsigned int 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;Total ram usage:        4 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_pad
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text13
  4499  003EA6                     __ptext13:
  4500                           	opt callstack 0
  4501  003EA6                     _strlen:
  4502                           	opt callstack 24
  4503                           
  4504                           ;incstack = 0
  4505  003EA6  C001  F003         	movff	strlen@s,strlen@a
  4506  003EAA  C002  F004         	movff	strlen@s+1,strlen@a+1
  4507  003EAE  D002               	goto	l3151
  4508  003EB0                     l3149:
  4509  003EB0  4A01               	infsnz	strlen@s,f,c
  4510  003EB2  2A02               	incf	strlen@s+1,f,c
  4511  003EB4                     l3151:
  4512  003EB4  C001  FFD9         	movff	strlen@s,fsr2l
  4513  003EB8  C002  FFDA         	movff	strlen@s+1,fsr2h
  4514  003EBC  50DF               	movf	indf2,w,c
  4515  003EBE  A4D8               	btfss	status,2,c
  4516  003EC0  D7F7               	goto	l3149
  4517  003EC2  5003               	movf	strlen@a,w,c
  4518  003EC4  5C01               	subwf	strlen@s,w,c
  4519  003EC6  6E01               	movwf	?_strlen,c
  4520  003EC8  5004               	movf	strlen@a+1,w,c
  4521  003ECA  5802               	subwfb	strlen@s+1,w,c
  4522  003ECC  6E02               	movwf	?_strlen+1,c
  4523  003ECE  0012               	return		;funcret
  4524  003ED0                     __end_of_strlen:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function _fputs *****************
  4528 ;; Defined at:
  4529 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4532 ;;		 -> dbuf(80), 
  4533 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4534 ;;		 -> sprintf@f(6), 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  i               2   14[COMRAM] int 
  4537 ;;  c               1   13[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    9[COMRAM] int 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;Total ram usage:        7 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    2
  4554 ;; This function calls:
  4555 ;;		_fputc
  4556 ;; This function is called by:
  4557 ;;		_pad
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text14
  4562  003DA8                     __ptext14:
  4563                           	opt callstack 0
  4564  003DA8                     _fputs:
  4565                           	opt callstack 22
  4566                           
  4567                           ;incstack = 0
  4568  003DA8  0E00               	movlw	0
  4569  003DAA  6E10               	movwf	fputs@i+1,c
  4570  003DAC  0E00               	movlw	0
  4571  003DAE  6E0F               	movwf	fputs@i,c
  4572  003DB0  D00B               	goto	l3145
  4573  003DB2                     l3141:
  4574  003DB2  C00E  F001         	movff	fputs@c,fputc@c
  4575  003DB6  6A02               	clrf	fputc@c+1,c
  4576  003DB8  C00C  F003         	movff	fputs@fp,fputc@fp
  4577  003DBC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4578  003DC0  ECC7  F019         	call	_fputc	;wreg free
  4579  003DC4  4A0F               	infsnz	fputs@i,f,c
  4580  003DC6  2A10               	incf	fputs@i+1,f,c
  4581  003DC8                     l3145:
  4582  003DC8  500F               	movf	fputs@i,w,c
  4583  003DCA  240A               	addwf	fputs@s,w,c
  4584  003DCC  6ED9               	movwf	fsr2l,c
  4585  003DCE  5010               	movf	fputs@i+1,w,c
  4586  003DD0  200B               	addwfc	fputs@s+1,w,c
  4587  003DD2  6EDA               	movwf	fsr2h,c
  4588  003DD4  50DF               	movf	indf2,w,c
  4589  003DD6  6E0E               	movwf	fputs@c,c
  4590  003DD8  500E               	movf	fputs@c,w,c
  4591  003DDA  B4D8               	btfsc	status,2,c
  4592  003DDC  0012               	return	
  4593  003DDE  D7E9               	goto	l3141
  4594  003DE0                     __end_of_fputs:
  4595                           	opt callstack 0
  4596                           
  4597 ;; *************** function _fputc *****************
  4598 ;; Defined at:
  4599 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  c               2    0[COMRAM] int 
  4602 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4603 ;;		 -> sprintf@f(6), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  2    0[COMRAM] int 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        9 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    1
  4622 ;; This function calls:
  4623 ;;		_putch
  4624 ;; This function is called by:
  4625 ;;		_pad
  4626 ;;		_vfpfcnvrt
  4627 ;;		_fputs
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text15
  4632  00338E                     __ptext15:
  4633                           	opt callstack 0
  4634  00338E                     _fputc:
  4635                           	opt callstack 25
  4636                           
  4637                           ;incstack = 0
  4638  00338E  5003               	movf	fputc@fp,w,c
  4639  003390  1004               	iorwf	fputc@fp+1,w,c
  4640  003392  B4D8               	btfsc	status,2,c
  4641  003394  D004               	goto	u2670
  4642  003396  5003               	movf	fputc@fp,w,c
  4643  003398  1004               	iorwf	fputc@fp+1,w,c
  4644  00339A  A4D8               	btfss	status,2,c
  4645  00339C  D004               	goto	l3131
  4646  00339E                     u2670:
  4647  00339E  5001               	movf	fputc@c,w,c
  4648  0033A0  ECD3  F01F         	call	_putch
  4649  0033A4  0012               	return	
  4650  0033A6                     l3131:
  4651  0033A6  EE20 F004          	lfsr	2,4
  4652  0033AA  5003               	movf	fputc@fp,w,c
  4653  0033AC  26D9               	addwf	fsr2l,f,c
  4654  0033AE  5004               	movf	fputc@fp+1,w,c
  4655  0033B0  22DA               	addwfc	fsr2h,f,c
  4656  0033B2  50DE               	movf	postinc2,w,c
  4657  0033B4  10DE               	iorwf	postinc2,w,c
  4658  0033B6  B4D8               	btfsc	status,2,c
  4659  0033B8  D016               	goto	u2690
  4660  0033BA  EE20 F004          	lfsr	2,4
  4661  0033BE  5003               	movf	fputc@fp,w,c
  4662  0033C0  26D9               	addwf	fsr2l,f,c
  4663  0033C2  5004               	movf	fputc@fp+1,w,c
  4664  0033C4  22DA               	addwfc	fsr2h,f,c
  4665  0033C6  EE10 F002          	lfsr	1,2
  4666  0033CA  5003               	movf	fputc@fp,w,c
  4667  0033CC  26E1               	addwf	fsr1l,f,c
  4668  0033CE  5004               	movf	fputc@fp+1,w,c
  4669  0033D0  22E2               	addwfc	fsr1h,f,c
  4670  0033D2  50DE               	movf	postinc2,w,c
  4671  0033D4  5CE6               	subwf	postinc1,w,c
  4672  0033D6  50E6               	movf	postinc1,w,c
  4673  0033D8  0A80               	xorlw	128
  4674  0033DA  6E09               	movwf	(??_fputc+4)& (0+255),c
  4675  0033DC  50DE               	movf	postinc2,w,c
  4676  0033DE  0A80               	xorlw	128
  4677  0033E0  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  4678  0033E2  B0D8               	btfsc	status,0,c
  4679  0033E4  0012               	return	
  4680  0033E6                     u2690:
  4681  0033E6  EE20 F002          	lfsr	2,2
  4682  0033EA  5003               	movf	fputc@fp,w,c
  4683  0033EC  26D9               	addwf	fsr2l,f,c
  4684  0033EE  5004               	movf	fputc@fp+1,w,c
  4685  0033F0  22DA               	addwfc	fsr2h,f,c
  4686  0033F2  CFDE F005          	movff	postinc2,??_fputc
  4687  0033F6  CFDD F006          	movff	postdec2,??_fputc+1
  4688  0033FA  C003  FFD9         	movff	fputc@fp,fsr2l
  4689  0033FE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4690  003402  CFDE F007          	movff	postinc2,??_fputc+2
  4691  003406  CFDD F008          	movff	postdec2,??_fputc+3
  4692  00340A  5005               	movf	??_fputc,w,c
  4693  00340C  2407               	addwf	??_fputc+2,w,c
  4694  00340E  6ED9               	movwf	fsr2l,c
  4695  003410  5006               	movf	??_fputc+1,w,c
  4696  003412  2008               	addwfc	??_fputc+3,w,c
  4697  003414  6EDA               	movwf	fsr2h,c
  4698  003416  C001  FFDF         	movff	fputc@c,indf2
  4699  00341A  EE20 F002          	lfsr	2,2
  4700  00341E  5003               	movf	fputc@fp,w,c
  4701  003420  26D9               	addwf	fsr2l,f,c
  4702  003422  5004               	movf	fputc@fp+1,w,c
  4703  003424  22DA               	addwfc	fsr2h,f,c
  4704  003426  2ADE               	incf	postinc2,f,c
  4705  003428  0E00               	movlw	0
  4706  00342A  22DD               	addwfc	postdec2,f,c
  4707  00342C  0012               	return		;funcret
  4708  00342E                     __end_of_fputc:
  4709                           	opt callstack 0
  4710                           
  4711 ;; *************** function _putch *****************
  4712 ;; Defined at:
  4713 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  c               1    wreg     unsigned char 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  c               1    0[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_fputc
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text16
  4741  003FA6                     __ptext16:
  4742                           	opt callstack 0
  4743  003FA6                     _putch:
  4744                           	opt callstack 25
  4745                           
  4746                           ;incstack = 0
  4747  003FA6  0012               	return		;funcret
  4748  003FA8                     __end_of_putch:
  4749                           	opt callstack 0
  4750                           
  4751 ;; *************** function _floorf *****************
  4752 ;; Defined at:
  4753 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  x               4   25[COMRAM] float 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  u               4   41[COMRAM] struct .
  4758 ;;  m               4   35[COMRAM] unsigned long 
  4759 ;;  e               2   39[COMRAM] int 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4   25[COMRAM] float 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:       20 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_efgtoa
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text17
  4783  002982                     __ptext17:
  4784                           	opt callstack 0
  4785  002982                     _floorf:
  4786                           	opt callstack 25
  4787                           
  4788                           ;incstack = 0
  4789  002982  C0BA  F02A         	movff	floorf@F524,floorf@u
  4790  002986  C0BB  F02B         	movff	floorf@F524+1,floorf@u+1
  4791  00298A  C0BC  F02C         	movff	floorf@F524+2,floorf@u+2
  4792  00298E  C0BD  F02D         	movff	floorf@F524+3,floorf@u+3
  4793  002992  C01A  F02A         	movff	floorf@x,floorf@u
  4794  002996  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4795  00299A  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4796  00299E  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4797  0029A2  0E81               	movlw	129
  4798  0029A4  6E1E               	movwf	??_floorf& (0+255),c
  4799  0029A6  0EFF               	movlw	255
  4800  0029A8  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4801  0029AA  C02A  F020         	movff	floorf@u,??_floorf+2
  4802  0029AE  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4803  0029B2  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4804  0029B6  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4805  0029BA  0E18               	movlw	24
  4806  0029BC  D005               	goto	u3310
  4807  0029BE                     u3315:
  4808  0029BE  90D8               	bcf	status,0,c
  4809  0029C0  3223               	rrcf	??_floorf+5,f,c
  4810  0029C2  3222               	rrcf	??_floorf+4,f,c
  4811  0029C4  3221               	rrcf	??_floorf+3,f,c
  4812  0029C6  3220               	rrcf	??_floorf+2,f,c
  4813  0029C8                     u3310:
  4814  0029C8  2EE8               	decfsz	wreg,f,c
  4815  0029CA  D7F9               	goto	u3315
  4816  0029CC  5020               	movf	??_floorf+2,w,c
  4817  0029CE  241E               	addwf	??_floorf,w,c
  4818  0029D0  6E28               	movwf	floorf@e,c
  4819  0029D2  0E00               	movlw	0
  4820  0029D4  201F               	addwfc	??_floorf+1,w,c
  4821  0029D6  6E29               	movwf	floorf@e+1,c
  4822  0029D8  BE29               	btfsc	floorf@e+1,7,c
  4823  0029DA  D00F               	goto	l3431
  4824  0029DC  5029               	movf	floorf@e+1,w,c
  4825  0029DE  E104               	bnz	u3320
  4826  0029E0  0E17               	movlw	23
  4827  0029E2  5C28               	subwf	floorf@e,w,c
  4828  0029E4  A0D8               	btfss	status,0,c
  4829  0029E6  D009               	goto	l3431
  4830  0029E8                     u3320:
  4831  0029E8  C01A  F01A         	movff	floorf@x,?_floorf
  4832  0029EC  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4833  0029F0  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4834  0029F4  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4835  0029F8  0012               	return	
  4836  0029FA                     l3431:
  4837  0029FA  BE29               	btfsc	floorf@e+1,7,c
  4838  0029FC  D05E               	goto	l3441
  4839  0029FE  C028  F01E         	movff	floorf@e,??_floorf
  4840  002A02  0EFF               	movlw	255
  4841  002A04  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4842  002A06  0EFF               	movlw	255
  4843  002A08  6E20               	movwf	(??_floorf+2)& (0+255),c
  4844  002A0A  0E7F               	movlw	127
  4845  002A0C  6E21               	movwf	(??_floorf+3)& (0+255),c
  4846  002A0E  0E00               	movlw	0
  4847  002A10  6E22               	movwf	(??_floorf+4)& (0+255),c
  4848  002A12                     u3345:
  4849  002A12  661E               	tstfsz	??_floorf,c
  4850  002A14  D001               	goto	u3346
  4851  002A16  D007               	goto	u3347
  4852  002A18                     u3346:
  4853  002A18  3422               	rlcf	??_floorf+4,w,c
  4854  002A1A  3222               	rrcf	??_floorf+4,f,c
  4855  002A1C  3221               	rrcf	??_floorf+3,f,c
  4856  002A1E  3220               	rrcf	??_floorf+2,f,c
  4857  002A20  321F               	rrcf	??_floorf+1,f,c
  4858  002A22  2E1E               	decfsz	??_floorf,f,c
  4859  002A24  D7F6               	goto	u3345
  4860  002A26                     u3347:
  4861  002A26  C01F  F024         	movff	??_floorf+1,floorf@m
  4862  002A2A  C020  F025         	movff	??_floorf+2,floorf@m+1
  4863  002A2E  C021  F026         	movff	??_floorf+3,floorf@m+2
  4864  002A32  C022  F027         	movff	??_floorf+4,floorf@m+3
  4865  002A36  5024               	movf	floorf@m,w,c
  4866  002A38  142A               	andwf	floorf@u,w,c
  4867  002A3A  6E1E               	movwf	??_floorf& (0+255),c
  4868  002A3C  5025               	movf	floorf@m+1,w,c
  4869  002A3E  142B               	andwf	floorf@u+1,w,c
  4870  002A40  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4871  002A42  5026               	movf	floorf@m+2,w,c
  4872  002A44  142C               	andwf	floorf@u+2,w,c
  4873  002A46  6E20               	movwf	(??_floorf+2)& (0+255),c
  4874  002A48  5027               	movf	floorf@m+3,w,c
  4875  002A4A  142D               	andwf	floorf@u+3,w,c
  4876  002A4C  6E21               	movwf	(??_floorf+3)& (0+255),c
  4877  002A4E  501E               	movf	??_floorf,w,c
  4878  002A50  101F               	iorwf	??_floorf+1,w,c
  4879  002A52  1020               	iorwf	??_floorf+2,w,c
  4880  002A54  1021               	iorwf	??_floorf+3,w,c
  4881  002A56  B4D8               	btfsc	status,2,c
  4882  002A58  D7C7               	goto	u3320
  4883  002A5A  C02A  F01E         	movff	floorf@u,??_floorf
  4884  002A5E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4885  002A62  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4886  002A66  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4887  002A6A  0E20               	movlw	32
  4888  002A6C  D005               	goto	u3360
  4889  002A6E                     u3365:
  4890  002A6E  90D8               	bcf	status,0,c
  4891  002A70  3221               	rrcf	??_floorf+3,f,c
  4892  002A72  3220               	rrcf	??_floorf+2,f,c
  4893  002A74  321F               	rrcf	??_floorf+1,f,c
  4894  002A76  321E               	rrcf	??_floorf,f,c
  4895  002A78                     u3360:
  4896  002A78  2EE8               	decfsz	wreg,f,c
  4897  002A7A  D7F9               	goto	u3365
  4898  002A7C  501E               	movf	??_floorf,w,c
  4899  002A7E  101F               	iorwf	??_floorf+1,w,c
  4900  002A80  1020               	iorwf	??_floorf+2,w,c
  4901  002A82  1021               	iorwf	??_floorf+3,w,c
  4902  002A84  B4D8               	btfsc	status,2,c
  4903  002A86  D008               	goto	l1245
  4904  002A88  5024               	movf	floorf@m,w,c
  4905  002A8A  262A               	addwf	floorf@u,f,c
  4906  002A8C  5025               	movf	floorf@m+1,w,c
  4907  002A8E  222B               	addwfc	floorf@u+1,f,c
  4908  002A90  5026               	movf	floorf@m+2,w,c
  4909  002A92  222C               	addwfc	floorf@u+2,f,c
  4910  002A94  5027               	movf	floorf@m+3,w,c
  4911  002A96  222D               	addwfc	floorf@u+3,f,c
  4912  002A98                     l1245:
  4913  002A98  1C24               	comf	floorf@m,w,c
  4914  002A9A  6E1E               	movwf	??_floorf& (0+255),c
  4915  002A9C  1C25               	comf	floorf@m+1,w,c
  4916  002A9E  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4917  002AA0  1C26               	comf	floorf@m+2,w,c
  4918  002AA2  6E20               	movwf	(??_floorf+2)& (0+255),c
  4919  002AA4  1C27               	comf	floorf@m+3,w,c
  4920  002AA6  6E21               	movwf	(??_floorf+3)& (0+255),c
  4921  002AA8  501E               	movf	??_floorf,w,c
  4922  002AAA  162A               	andwf	floorf@u,f,c
  4923  002AAC  501F               	movf	??_floorf+1,w,c
  4924  002AAE  162B               	andwf	floorf@u+1,f,c
  4925  002AB0  5020               	movf	??_floorf+2,w,c
  4926  002AB2  162C               	andwf	floorf@u+2,f,c
  4927  002AB4  5021               	movf	??_floorf+3,w,c
  4928  002AB6  162D               	andwf	floorf@u+3,f,c
  4929  002AB8  D036               	goto	l3449
  4930  002ABA                     l3441:
  4931  002ABA  C02A  F01E         	movff	floorf@u,??_floorf
  4932  002ABE  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4933  002AC2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4934  002AC6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4935  002ACA  0E20               	movlw	32
  4936  002ACC  D005               	goto	u3380
  4937  002ACE                     u3385:
  4938  002ACE  90D8               	bcf	status,0,c
  4939  002AD0  3221               	rrcf	??_floorf+3,f,c
  4940  002AD2  3220               	rrcf	??_floorf+2,f,c
  4941  002AD4  321F               	rrcf	??_floorf+1,f,c
  4942  002AD6  321E               	rrcf	??_floorf,f,c
  4943  002AD8                     u3380:
  4944  002AD8  2EE8               	decfsz	wreg,f,c
  4945  002ADA  D7F9               	goto	u3385
  4946  002ADC  501E               	movf	??_floorf,w,c
  4947  002ADE  101F               	iorwf	??_floorf+1,w,c
  4948  002AE0  1020               	iorwf	??_floorf+2,w,c
  4949  002AE2  1021               	iorwf	??_floorf+3,w,c
  4950  002AE4  A4D8               	btfss	status,2,c
  4951  002AE6  D008               	goto	l3445
  4952  002AE8  0E00               	movlw	0
  4953  002AEA  6E2A               	movwf	floorf@u,c
  4954  002AEC  0E00               	movlw	0
  4955  002AEE  6E2B               	movwf	floorf@u+1,c
  4956  002AF0  0E00               	movlw	0
  4957  002AF2  6E2C               	movwf	floorf@u+2,c
  4958  002AF4  0E00               	movlw	0
  4959  002AF6  D016               	goto	L6
  4960  002AF8                     l3445:
  4961  002AF8  90D8               	bcf	status,0,c
  4962  002AFA  342A               	rlcf	floorf@u,w,c
  4963  002AFC  6E1E               	movwf	??_floorf& (0+255),c
  4964  002AFE  342B               	rlcf	floorf@u+1,w,c
  4965  002B00  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4966  002B02  342C               	rlcf	floorf@u+2,w,c
  4967  002B04  6E20               	movwf	(??_floorf+2)& (0+255),c
  4968  002B06  342D               	rlcf	floorf@u+3,w,c
  4969  002B08  6E21               	movwf	(??_floorf+3)& (0+255),c
  4970  002B0A  501E               	movf	??_floorf,w,c
  4971  002B0C  101F               	iorwf	??_floorf+1,w,c
  4972  002B0E  1020               	iorwf	??_floorf+2,w,c
  4973  002B10  1021               	iorwf	??_floorf+3,w,c
  4974  002B12  B4D8               	btfsc	status,2,c
  4975  002B14  D008               	goto	l3449
  4976  002B16  0E00               	movlw	0
  4977  002B18  6E2A               	movwf	floorf@u,c
  4978  002B1A  0E00               	movlw	0
  4979  002B1C  6E2B               	movwf	floorf@u+1,c
  4980  002B1E  0E80               	movlw	128
  4981  002B20  6E2C               	movwf	floorf@u+2,c
  4982  002B22  0EBF               	movlw	191
  4983  002B24                     L6:
  4984  002B24  6E2D               	movwf	floorf@u+3,c
  4985  002B26                     l3449:
  4986  002B26  C02A  F01A         	movff	floorf@u,?_floorf
  4987  002B2A  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4988  002B2E  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4989  002B32  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4990  002B36  0012               	return		;funcret
  4991  002B38                     __end_of_floorf:
  4992                           	opt callstack 0
  4993                           
  4994 ;; *************** function ___fpclassifyf *****************
  4995 ;; Defined at:
  4996 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  x               4    0[COMRAM] float 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  u               4   10[COMRAM] struct .
  5001 ;;  e               2    8[COMRAM] int 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  2    0[COMRAM] int 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;Total ram usage:       14 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_efgtoa
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text18
  5025  0030B0                     __ptext18:
  5026                           	opt callstack 0
  5027  0030B0                     ___fpclassifyf:
  5028                           	opt callstack 25
  5029                           
  5030                           ;incstack = 0
  5031  0030B0  C0BE  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5032  0030B4  C0BF  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5033  0030B8  C0C0  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5034  0030BC  C0C1  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5035  0030C0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5036  0030C4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5037  0030C8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5038  0030CC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5039  0030D0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5040  0030D4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5041  0030D8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5042  0030DC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5043  0030E0  0E18               	movlw	24
  5044  0030E2  D005               	goto	u3190
  5045  0030E4                     u3195:
  5046  0030E4  90D8               	bcf	status,0,c
  5047  0030E6  3208               	rrcf	??___fpclassifyf+3,f,c
  5048  0030E8  3207               	rrcf	??___fpclassifyf+2,f,c
  5049  0030EA  3206               	rrcf	??___fpclassifyf+1,f,c
  5050  0030EC  3205               	rrcf	??___fpclassifyf,f,c
  5051  0030EE                     u3190:
  5052  0030EE  2EE8               	decfsz	wreg,f,c
  5053  0030F0  D7F9               	goto	u3195
  5054  0030F2  5005               	movf	??___fpclassifyf,w,c
  5055  0030F4  6E09               	movwf	___fpclassifyf@e,c
  5056  0030F6  6A0A               	clrf	___fpclassifyf@e+1,c
  5057  0030F8  5009               	movf	___fpclassifyf@e,w,c
  5058  0030FA  100A               	iorwf	___fpclassifyf@e+1,w,c
  5059  0030FC  A4D8               	btfss	status,2,c
  5060  0030FE  D019               	goto	l3401
  5061  003100  90D8               	bcf	status,0,c
  5062  003102  340B               	rlcf	___fpclassifyf@u,w,c
  5063  003104  6E05               	movwf	??___fpclassifyf& (0+255),c
  5064  003106  340C               	rlcf	___fpclassifyf@u+1,w,c
  5065  003108  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5066  00310A  340D               	rlcf	___fpclassifyf@u+2,w,c
  5067  00310C  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5068  00310E  340E               	rlcf	___fpclassifyf@u+3,w,c
  5069  003110  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5070  003112  5005               	movf	??___fpclassifyf,w,c
  5071  003114  1006               	iorwf	??___fpclassifyf+1,w,c
  5072  003116  1007               	iorwf	??___fpclassifyf+2,w,c
  5073  003118  1008               	iorwf	??___fpclassifyf+3,w,c
  5074  00311A  A4D8               	btfss	status,2,c
  5075  00311C  D005               	goto	l3397
  5076  00311E  0E00               	movlw	0
  5077  003120  6E02               	movwf	?___fpclassifyf+1,c
  5078  003122  0E02               	movlw	2
  5079  003124  6E01               	movwf	?___fpclassifyf,c
  5080  003126  0012               	return	
  5081  003128                     l3397:
  5082  003128  0E00               	movlw	0
  5083  00312A  6E02               	movwf	?___fpclassifyf+1,c
  5084  00312C  0E03               	movlw	3
  5085  00312E  6E01               	movwf	?___fpclassifyf,c
  5086  003130  0012               	return	
  5087  003132                     l3401:
  5088  003132  2809               	incf	___fpclassifyf@e,w,c
  5089  003134  100A               	iorwf	___fpclassifyf@e+1,w,c
  5090  003136  A4D8               	btfss	status,2,c
  5091  003138  D01C               	goto	l3407
  5092  00313A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5093  00313E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5094  003142  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5095  003146  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5096  00314A  0E09               	movlw	9
  5097  00314C                     u3235:
  5098  00314C  90D8               	bcf	status,0,c
  5099  00314E  3605               	rlcf	??___fpclassifyf,f,c
  5100  003150  3606               	rlcf	??___fpclassifyf+1,f,c
  5101  003152  3607               	rlcf	??___fpclassifyf+2,f,c
  5102  003154  3608               	rlcf	??___fpclassifyf+3,f,c
  5103  003156  2EE8               	decfsz	wreg,f,c
  5104  003158  D7F9               	goto	u3235
  5105  00315A  5005               	movf	??___fpclassifyf,w,c
  5106  00315C  1006               	iorwf	??___fpclassifyf+1,w,c
  5107  00315E  1007               	iorwf	??___fpclassifyf+2,w,c
  5108  003160  1008               	iorwf	??___fpclassifyf+3,w,c
  5109  003162  A4D8               	btfss	status,2,c
  5110  003164  D002               	goto	u3240
  5111  003166  0E01               	movlw	1
  5112  003168  D001               	goto	u3250
  5113  00316A                     u3240:
  5114  00316A  0E00               	movlw	0
  5115  00316C                     u3250:
  5116  00316C  6E01               	movwf	?___fpclassifyf,c
  5117  00316E  6A02               	clrf	?___fpclassifyf+1,c
  5118  003170  0012               	return	
  5119  003172                     l3407:
  5120  003172  0E00               	movlw	0
  5121  003174  6E02               	movwf	?___fpclassifyf+1,c
  5122  003176  0E04               	movlw	4
  5123  003178  6E01               	movwf	?___fpclassifyf,c
  5124  00317A  0012               	return		;funcret
  5125  00317C                     __end_of___fpclassifyf:
  5126                           	opt callstack 0
  5127                           
  5128 ;; *************** function ___flsub *****************
  5129 ;; Defined at:
  5130 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  b               4   39[COMRAM] int 
  5133 ;;  a               4   43[COMRAM] int 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  4   39[COMRAM] int 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5145 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;Total ram usage:        8 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    1
  5152 ;; This function calls:
  5153 ;;		___fladd
  5154 ;; This function is called by:
  5155 ;;		_efgtoa
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text19
  5160  003D24                     __ptext19:
  5161                           	opt callstack 0
  5162  003D24                     ___flsub:
  5163                           	opt callstack 24
  5164                           
  5165                           ;incstack = 0
  5166  003D24  0E00               	movlw	0
  5167  003D26  1A2C               	xorwf	___flsub@a,f,c
  5168  003D28  0E00               	movlw	0
  5169  003D2A  1A2D               	xorwf	___flsub@a+1,f,c
  5170  003D2C  0E00               	movlw	0
  5171  003D2E  1A2E               	xorwf	___flsub@a+2,f,c
  5172  003D30  0E80               	movlw	128
  5173  003D32  1A2F               	xorwf	___flsub@a+3,f,c
  5174  003D34  C028  F001         	movff	___flsub@b,___fladd@b
  5175  003D38  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5176  003D3C  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5177  003D40  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5178  003D44  C02C  F005         	movff	___flsub@a,___fladd@a
  5179  003D48  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5180  003D4C  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5181  003D50  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5182  003D54  ECF7  F011         	call	___fladd	;wreg free
  5183  003D58  C001  F028         	movff	?___fladd,?___flsub
  5184  003D5C  C002  F029         	movff	?___fladd+1,?___flsub+1
  5185  003D60  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5186  003D64  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5187  003D68  0012               	return		;funcret
  5188  003D6A                     __end_of___flsub:
  5189                           	opt callstack 0
  5190                           
  5191 ;; *************** function ___fladd *****************
  5192 ;; Defined at:
  5193 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  b               4    0[COMRAM] int 
  5196 ;;  a               4    4[COMRAM] int 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  grs             1   15[COMRAM] unsigned char 
  5199 ;;  bexp            1   14[COMRAM] unsigned char 
  5200 ;;  aexp            1   13[COMRAM] unsigned char 
  5201 ;;  signs           1   12[COMRAM] unsigned char 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  4    0[COMRAM] unsigned char 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5211 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;Total ram usage:       16 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_efgtoa
  5221 ;;		___flsub
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text20
  5226  0023EE                     __ptext20:
  5227                           	opt callstack 0
  5228  0023EE                     ___fladd:
  5229                           	opt callstack 24
  5230                           
  5231                           ;incstack = 0
  5232  0023EE  5004               	movf	___fladd@b+3,w,c
  5233  0023F0  0B80               	andlw	128
  5234  0023F2  6E0D               	movwf	___fladd@signs,c
  5235  0023F4  5004               	movf	___fladd@b+3,w,c
  5236  0023F6  2404               	addwf	___fladd@b+3,w,c
  5237  0023F8  6E0F               	movwf	___fladd@bexp,c
  5238  0023FA  BE03               	btfsc	___fladd@b+2,7,c
  5239  0023FC  800F               	bsf	___fladd@bexp,0,c
  5240  0023FE  500F               	movf	___fladd@bexp,w,c
  5241  002400  B4D8               	btfsc	status,2,c
  5242  002402  D00D               	goto	l3177
  5243  002404  280F               	incf	___fladd@bexp,w,c
  5244  002406  A4D8               	btfss	status,2,c
  5245  002408  D008               	goto	l3173
  5246  00240A  0E00               	movlw	0
  5247  00240C  6E01               	movwf	___fladd@b,c
  5248  00240E  0E00               	movlw	0
  5249  002410  6E02               	movwf	___fladd@b+1,c
  5250  002412  0E00               	movlw	0
  5251  002414  6E03               	movwf	___fladd@b+2,c
  5252  002416  0E00               	movlw	0
  5253  002418  6E04               	movwf	___fladd@b+3,c
  5254  00241A                     l3173:
  5255  00241A  8E03               	bsf	___fladd@b+2,7,c
  5256  00241C  D006               	goto	L7
  5257  00241E                     l3177:
  5258  00241E  0E00               	movlw	0
  5259  002420  6E01               	movwf	___fladd@b,c
  5260  002422  0E00               	movlw	0
  5261  002424  6E02               	movwf	___fladd@b+1,c
  5262  002426  0E00               	movlw	0
  5263  002428  6E03               	movwf	___fladd@b+2,c
  5264  00242A                     L7:
  5265  00242A  0E00               	movlw	0
  5266  00242C  6E04               	movwf	___fladd@b+3,c
  5267  00242E  5008               	movf	___fladd@a+3,w,c
  5268  002430  0B80               	andlw	128
  5269  002432  6E0E               	movwf	___fladd@aexp,c
  5270  002434  500D               	movf	___fladd@signs,w,c
  5271  002436  180E               	xorwf	___fladd@aexp,w,c
  5272  002438  A4D8               	btfss	status,2,c
  5273  00243A  8C0D               	bsf	___fladd@signs,6,c
  5274  00243C  5008               	movf	___fladd@a+3,w,c
  5275  00243E  2408               	addwf	___fladd@a+3,w,c
  5276  002440  6E0E               	movwf	___fladd@aexp,c
  5277  002442  BE07               	btfsc	___fladd@a+2,7,c
  5278  002444  800E               	bsf	___fladd@aexp,0,c
  5279  002446  500E               	movf	___fladd@aexp,w,c
  5280  002448  B4D8               	btfsc	status,2,c
  5281  00244A  D00D               	goto	l3201
  5282  00244C  280E               	incf	___fladd@aexp,w,c
  5283  00244E  A4D8               	btfss	status,2,c
  5284  002450  D008               	goto	l3197
  5285  002452  0E00               	movlw	0
  5286  002454  6E05               	movwf	___fladd@a,c
  5287  002456  0E00               	movlw	0
  5288  002458  6E06               	movwf	___fladd@a+1,c
  5289  00245A  0E00               	movlw	0
  5290  00245C  6E07               	movwf	___fladd@a+2,c
  5291  00245E  0E00               	movlw	0
  5292  002460  6E08               	movwf	___fladd@a+3,c
  5293  002462                     l3197:
  5294  002462  8E07               	bsf	___fladd@a+2,7,c
  5295  002464  D006               	goto	L8
  5296  002466                     l3201:
  5297  002466  0E00               	movlw	0
  5298  002468  6E05               	movwf	___fladd@a,c
  5299  00246A  0E00               	movlw	0
  5300  00246C  6E06               	movwf	___fladd@a+1,c
  5301  00246E  0E00               	movlw	0
  5302  002470  6E07               	movwf	___fladd@a+2,c
  5303  002472                     L8:
  5304  002472  0E00               	movlw	0
  5305  002474  6E08               	movwf	___fladd@a+3,c
  5306  002476  500F               	movf	___fladd@bexp,w,c
  5307  002478  5C0E               	subwf	___fladd@aexp,w,c
  5308  00247A  B0D8               	btfsc	status,0,c
  5309  00247C  D022               	goto	l3239
  5310  00247E  AC0D               	btfss	___fladd@signs,6,c
  5311  002480  D002               	goto	l3209
  5312  002482  0E80               	movlw	128
  5313  002484  1A0D               	xorwf	___fladd@signs,f,c
  5314  002486                     l3209:
  5315  002486  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5316  00248A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5317  00248E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5318  002492  C001  F010         	movff	___fladd@b,___fladd@grs
  5319  002496  C005  F001         	movff	___fladd@a,___fladd@b
  5320  00249A  C010  F005         	movff	___fladd@grs,___fladd@a
  5321  00249E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5322  0024A2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5323  0024A6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5324  0024AA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5325  0024AE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5326  0024B2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5327  0024B6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5328  0024BA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5329  0024BE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5330  0024C2                     l3239:
  5331  0024C2  0E00               	movlw	0
  5332  0024C4  6E10               	movwf	___fladd@grs,c
  5333  0024C6  500F               	movf	___fladd@bexp,w,c
  5334  0024C8  C00E  F009         	movff	___fladd@aexp,??___fladd
  5335  0024CC  6A0A               	clrf	(??___fladd+1)& (0+255),c
  5336  0024CE  5E09               	subwf	??___fladd,f,c
  5337  0024D0  0E00               	movlw	0
  5338  0024D2  5A0A               	subwfb	??___fladd+1,f,c
  5339  0024D4  BE0A               	btfsc	??___fladd+1,7,c
  5340  0024D6  D02C               	goto	l1052
  5341  0024D8  500A               	movf	??___fladd+1,w,c
  5342  0024DA  E104               	bnz	u2830
  5343  0024DC  0E1A               	movlw	26
  5344  0024DE  5C09               	subwf	??___fladd,w,c
  5345  0024E0  A0D8               	btfss	status,0,c
  5346  0024E2  D026               	goto	l1052
  5347  0024E4                     u2830:
  5348  0024E4  5001               	movf	___fladd@b,w,c
  5349  0024E6  1002               	iorwf	___fladd@b+1,w,c
  5350  0024E8  1003               	iorwf	___fladd@b+2,w,c
  5351  0024EA  1004               	iorwf	___fladd@b+3,w,c
  5352  0024EC  B4D8               	btfsc	status,2,c
  5353  0024EE  D002               	goto	u2840
  5354  0024F0  0E01               	movlw	1
  5355  0024F2  D001               	goto	u2850
  5356  0024F4                     u2840:
  5357  0024F4  0E00               	movlw	0
  5358  0024F6                     u2850:
  5359  0024F6  6E10               	movwf	___fladd@grs,c
  5360  0024F8  0E00               	movlw	0
  5361  0024FA  6E01               	movwf	___fladd@b,c
  5362  0024FC  0E00               	movlw	0
  5363  0024FE  6E02               	movwf	___fladd@b+1,c
  5364  002500  0E00               	movlw	0
  5365  002502  6E03               	movwf	___fladd@b+2,c
  5366  002504  0E00               	movlw	0
  5367  002506  6E04               	movwf	___fladd@b+3,c
  5368  002508  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5369  00250C  D015               	goto	u2880
  5370  00250E                     l1053:
  5371  00250E  A010               	btfss	___fladd@grs,0,c
  5372  002510  D005               	goto	l3251
  5373  002512  90D8               	bcf	status,0,c
  5374  002514  3010               	rrcf	___fladd@grs,w,c
  5375  002516  0901               	iorlw	1
  5376  002518  6E10               	movwf	___fladd@grs,c
  5377  00251A  D002               	goto	l3253
  5378  00251C                     l3251:
  5379  00251C  90D8               	bcf	status,0,c
  5380  00251E  3210               	rrcf	___fladd@grs,f,c
  5381  002520                     l3253:
  5382  002520  B001               	btfsc	___fladd@b,0,c
  5383  002522  8E10               	bsf	___fladd@grs,7,c
  5384  002524  3404               	rlcf	___fladd@b+3,w,c
  5385  002526  3204               	rrcf	___fladd@b+3,f,c
  5386  002528  3203               	rrcf	___fladd@b+2,f,c
  5387  00252A  3202               	rrcf	___fladd@b+1,f,c
  5388  00252C  3201               	rrcf	___fladd@b,f,c
  5389  00252E  2A0F               	incf	___fladd@bexp,f,c
  5390  002530                     l1052:
  5391  002530  500E               	movf	___fladd@aexp,w,c
  5392  002532  5C0F               	subwf	___fladd@bexp,w,c
  5393  002534  A0D8               	btfss	status,0,c
  5394  002536  D7EB               	goto	l1053
  5395  002538                     u2880:
  5396  002538  BC0D               	btfsc	___fladd@signs,6,c
  5397  00253A  D028               	goto	l3285
  5398  00253C  500F               	movf	___fladd@bexp,w,c
  5399  00253E  A4D8               	btfss	status,2,c
  5400  002540  D009               	goto	l3267
  5401  002542  0E00               	movlw	0
  5402  002544  6E01               	movwf	?___fladd,c
  5403  002546  0E00               	movlw	0
  5404  002548  6E02               	movwf	?___fladd+1,c
  5405  00254A  0E00               	movlw	0
  5406  00254C  6E03               	movwf	?___fladd+2,c
  5407  00254E  0E00               	movlw	0
  5408  002550  6E04               	movwf	?___fladd+3,c
  5409  002552  0012               	return	
  5410  002554                     l3267:
  5411  002554  5005               	movf	___fladd@a,w,c
  5412  002556  2601               	addwf	___fladd@b,f,c
  5413  002558  5006               	movf	___fladd@a+1,w,c
  5414  00255A  2202               	addwfc	___fladd@b+1,f,c
  5415  00255C  5007               	movf	___fladd@a+2,w,c
  5416  00255E  2203               	addwfc	___fladd@b+2,f,c
  5417  002560  5008               	movf	___fladd@a+3,w,c
  5418  002562  2204               	addwfc	___fladd@b+3,f,c
  5419  002564  A004               	btfss	___fladd@b+3,0,c
  5420  002566  D071               	goto	u3010
  5421  002568  A010               	btfss	___fladd@grs,0,c
  5422  00256A  D005               	goto	l3275
  5423  00256C  90D8               	bcf	status,0,c
  5424  00256E  3010               	rrcf	___fladd@grs,w,c
  5425  002570  0901               	iorlw	1
  5426  002572  6E10               	movwf	___fladd@grs,c
  5427  002574  D002               	goto	l3277
  5428  002576                     l3275:
  5429  002576  90D8               	bcf	status,0,c
  5430  002578  3210               	rrcf	___fladd@grs,f,c
  5431  00257A                     l3277:
  5432  00257A  B001               	btfsc	___fladd@b,0,c
  5433  00257C  8E10               	bsf	___fladd@grs,7,c
  5434  00257E  3404               	rlcf	___fladd@b+3,w,c
  5435  002580  3204               	rrcf	___fladd@b+3,f,c
  5436  002582  3203               	rrcf	___fladd@b+2,f,c
  5437  002584  3202               	rrcf	___fladd@b+1,f,c
  5438  002586  3201               	rrcf	___fladd@b,f,c
  5439  002588  2A0F               	incf	___fladd@bexp,f,c
  5440  00258A  D05F               	goto	u3010
  5441  00258C                     l3285:
  5442  00258C  5005               	movf	___fladd@a,w,c
  5443  00258E  5C01               	subwf	___fladd@b,w,c
  5444  002590  5006               	movf	___fladd@a+1,w,c
  5445  002592  5802               	subwfb	___fladd@b+1,w,c
  5446  002594  5007               	movf	___fladd@a+2,w,c
  5447  002596  5803               	subwfb	___fladd@b+2,w,c
  5448  002598  5004               	movf	___fladd@b+3,w,c
  5449  00259A  0A80               	xorlw	128
  5450  00259C  6E09               	movwf	??___fladd& (0+255),c
  5451  00259E  5008               	movf	___fladd@a+3,w,c
  5452  0025A0  0A80               	xorlw	128
  5453  0025A2  5809               	subwfb	??___fladd& (0+255),w,c
  5454  0025A4  B0D8               	btfsc	status,0,c
  5455  0025A6  D025               	goto	l3295
  5456  0025A8  5001               	movf	___fladd@b,w,c
  5457  0025AA  5C05               	subwf	___fladd@a,w,c
  5458  0025AC  6E09               	movwf	??___fladd& (0+255),c
  5459  0025AE  5002               	movf	___fladd@b+1,w,c
  5460  0025B0  5806               	subwfb	___fladd@a+1,w,c
  5461  0025B2  6E0A               	movwf	(??___fladd+1)& (0+255),c
  5462  0025B4  5003               	movf	___fladd@b+2,w,c
  5463  0025B6  5807               	subwfb	___fladd@a+2,w,c
  5464  0025B8  6E0B               	movwf	(??___fladd+2)& (0+255),c
  5465  0025BA  5004               	movf	___fladd@b+3,w,c
  5466  0025BC  5808               	subwfb	___fladd@a+3,w,c
  5467  0025BE  6E0C               	movwf	(??___fladd+3)& (0+255),c
  5468  0025C0  0EFF               	movlw	255
  5469  0025C2  2409               	addwf	??___fladd,w,c
  5470  0025C4  6E01               	movwf	___fladd@b,c
  5471  0025C6  0EFF               	movlw	255
  5472  0025C8  200A               	addwfc	??___fladd+1,w,c
  5473  0025CA  6E02               	movwf	___fladd@b+1,c
  5474  0025CC  0EFF               	movlw	255
  5475  0025CE  200B               	addwfc	??___fladd+2,w,c
  5476  0025D0  6E03               	movwf	___fladd@b+2,c
  5477  0025D2  0EFF               	movlw	255
  5478  0025D4  200C               	addwfc	??___fladd+3,w,c
  5479  0025D6  6E04               	movwf	___fladd@b+3,c
  5480  0025D8  0E80               	movlw	128
  5481  0025DA  1A0D               	xorwf	___fladd@signs,f,c
  5482  0025DC  6C10               	negf	___fladd@grs,c
  5483  0025DE  5010               	movf	___fladd@grs,w,c
  5484  0025E0  A4D8               	btfss	status,2,c
  5485  0025E2  D00F               	goto	l1068
  5486  0025E4  0E01               	movlw	1
  5487  0025E6  2601               	addwf	___fladd@b,f,c
  5488  0025E8  0E00               	movlw	0
  5489  0025EA  2202               	addwfc	___fladd@b+1,f,c
  5490  0025EC  2203               	addwfc	___fladd@b+2,f,c
  5491  0025EE  2204               	addwfc	___fladd@b+3,f,c
  5492  0025F0  D008               	goto	l1068
  5493  0025F2                     l3295:
  5494  0025F2  5005               	movf	___fladd@a,w,c
  5495  0025F4  5E01               	subwf	___fladd@b,f,c
  5496  0025F6  5006               	movf	___fladd@a+1,w,c
  5497  0025F8  5A02               	subwfb	___fladd@b+1,f,c
  5498  0025FA  5007               	movf	___fladd@a+2,w,c
  5499  0025FC  5A03               	subwfb	___fladd@b+2,f,c
  5500  0025FE  5008               	movf	___fladd@a+3,w,c
  5501  002600  5A04               	subwfb	___fladd@b+3,f,c
  5502  002602                     l1068:
  5503  002602  5001               	movf	___fladd@b,w,c
  5504  002604  1002               	iorwf	___fladd@b+1,w,c
  5505  002606  1003               	iorwf	___fladd@b+2,w,c
  5506  002608  1004               	iorwf	___fladd@b+3,w,c
  5507  00260A  A4D8               	btfss	status,2,c
  5508  00260C  D01C               	goto	l3319
  5509  00260E  5010               	movf	___fladd@grs,w,c
  5510  002610  A4D8               	btfss	status,2,c
  5511  002612  D019               	goto	l3319
  5512  002614  0E00               	movlw	0
  5513  002616  6E01               	movwf	?___fladd,c
  5514  002618  0E00               	movlw	0
  5515  00261A  6E02               	movwf	?___fladd+1,c
  5516  00261C  0E00               	movlw	0
  5517  00261E  6E03               	movwf	?___fladd+2,c
  5518  002620  0E00               	movlw	0
  5519  002622  6E04               	movwf	?___fladd+3,c
  5520  002624  0012               	return	
  5521  002626                     l3303:
  5522  002626  90D8               	bcf	status,0,c
  5523  002628  3601               	rlcf	___fladd@b,f,c
  5524  00262A  3602               	rlcf	___fladd@b+1,f,c
  5525  00262C  3603               	rlcf	___fladd@b+2,f,c
  5526  00262E  3604               	rlcf	___fladd@b+3,f,c
  5527  002630  BE10               	btfsc	___fladd@grs,7,c
  5528  002632  8001               	bsf	___fladd@b,0,c
  5529  002634  A010               	btfss	___fladd@grs,0,c
  5530  002636  D002               	goto	l3313
  5531  002638  80D8               	bsf	status,0,c
  5532  00263A  D001               	goto	L9
  5533  00263C                     l3313:
  5534  00263C  90D8               	bcf	status,0,c
  5535  00263E                     L9:
  5536  00263E  3610               	rlcf	___fladd@grs,f,c
  5537  002640  500F               	movf	___fladd@bexp,w,c
  5538  002642  A4D8               	btfss	status,2,c
  5539  002644  060F               	decf	___fladd@bexp,f,c
  5540  002646                     l3319:
  5541  002646  AE03               	btfss	___fladd@b+2,7,c
  5542  002648  D7EE               	goto	l3303
  5543  00264A                     u3010:
  5544  00264A  0E00               	movlw	0
  5545  00264C  6E0E               	movwf	___fladd@aexp,c
  5546  00264E  AE10               	btfss	___fladd@grs,7,c
  5547  002650  D00B               	goto	l1077
  5548  002652  C010  F009         	movff	___fladd@grs,??___fladd
  5549  002656  0E7F               	movlw	127
  5550  002658  1609               	andwf	??___fladd,f,c
  5551  00265A  B4D8               	btfsc	status,2,c
  5552  00265C  D003               	goto	l1078
  5553  00265E                     u3030:
  5554  00265E  0E01               	movlw	1
  5555  002660  6E0E               	movwf	___fladd@aexp,c
  5556  002662  D002               	goto	l1077
  5557  002664                     l1078:
  5558  002664  B001               	btfsc	___fladd@b,0,c
  5559  002666  D7FB               	goto	u3030
  5560  002668                     l1077:
  5561  002668  500E               	movf	___fladd@aexp,w,c
  5562  00266A  B4D8               	btfsc	status,2,c
  5563  00266C  D020               	goto	l3339
  5564  00266E  0E01               	movlw	1
  5565  002670  2601               	addwf	___fladd@b,f,c
  5566  002672  0E00               	movlw	0
  5567  002674  2202               	addwfc	___fladd@b+1,f,c
  5568  002676  2203               	addwfc	___fladd@b+2,f,c
  5569  002678  2204               	addwfc	___fladd@b+3,f,c
  5570  00267A  A004               	btfss	___fladd@b+3,0,c
  5571  00267C  D018               	goto	l3339
  5572  00267E  C001  F009         	movff	___fladd@b,??___fladd
  5573  002682  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5574  002686  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5575  00268A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5576  00268E  340C               	rlcf	??___fladd+3,w,c
  5577  002690  320C               	rrcf	??___fladd+3,f,c
  5578  002692  320B               	rrcf	??___fladd+2,f,c
  5579  002694  320A               	rrcf	??___fladd+1,f,c
  5580  002696  3209               	rrcf	??___fladd,f,c
  5581  002698  C009  F001         	movff	??___fladd,___fladd@b
  5582  00269C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5583  0026A0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5584  0026A4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5585  0026A8  280F               	incf	___fladd@bexp,w,c
  5586  0026AA  A4D8               	btfss	status,2,c
  5587  0026AC  2A0F               	incf	___fladd@bexp,f,c
  5588  0026AE                     l3339:
  5589  0026AE  280F               	incf	___fladd@bexp,w,c
  5590  0026B0  B4D8               	btfsc	status,2,c
  5591  0026B2  D003               	goto	u3090
  5592  0026B4  500F               	movf	___fladd@bexp,w,c
  5593  0026B6  A4D8               	btfss	status,2,c
  5594  0026B8  D00D               	goto	l3347
  5595  0026BA                     u3090:
  5596  0026BA  0E00               	movlw	0
  5597  0026BC  6E01               	movwf	___fladd@b,c
  5598  0026BE  0E00               	movlw	0
  5599  0026C0  6E02               	movwf	___fladd@b+1,c
  5600  0026C2  0E00               	movlw	0
  5601  0026C4  6E03               	movwf	___fladd@b+2,c
  5602  0026C6  0E00               	movlw	0
  5603  0026C8  6E04               	movwf	___fladd@b+3,c
  5604  0026CA  500F               	movf	___fladd@bexp,w,c
  5605  0026CC  A4D8               	btfss	status,2,c
  5606  0026CE  D002               	goto	l3347
  5607  0026D0  0E00               	movlw	0
  5608  0026D2  6E0D               	movwf	___fladd@signs,c
  5609  0026D4                     l3347:
  5610  0026D4  A00F               	btfss	___fladd@bexp,0,c
  5611  0026D6  D002               	goto	l3351
  5612  0026D8  8E03               	bsf	___fladd@b+2,7,c
  5613  0026DA  D001               	goto	l3353
  5614  0026DC                     l3351:
  5615  0026DC  9E03               	bcf	___fladd@b+2,7,c
  5616  0026DE                     l3353:
  5617  0026DE  90D8               	bcf	status,0,c
  5618  0026E0  300F               	rrcf	___fladd@bexp,w,c
  5619  0026E2  6E04               	movwf	___fladd@b+3,c
  5620  0026E4  BE0D               	btfsc	___fladd@signs,7,c
  5621  0026E6  8E04               	bsf	___fladd@b+3,7,c
  5622  0026E8  C001  F001         	movff	___fladd@b,?___fladd
  5623  0026EC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5624  0026F0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5625  0026F4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5626  0026F8  0012               	return		;funcret
  5627  0026FA                     __end_of___fladd:
  5628                           	opt callstack 0
  5629                           
  5630 ;; *************** function ___flneg *****************
  5631 ;; Defined at:
  5632 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  f1              4    0[COMRAM] unsigned char 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  4    0[COMRAM] unsigned char 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        4 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_efgtoa
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text21
  5660  003E78                     __ptext21:
  5661                           	opt callstack 0
  5662  003E78                     ___flneg:
  5663                           	opt callstack 25
  5664                           
  5665                           ;incstack = 0
  5666  003E78  5001               	movf	___flneg@f1,w,c
  5667  003E7A  1002               	iorwf	___flneg@f1+1,w,c
  5668  003E7C  1003               	iorwf	___flneg@f1+2,w,c
  5669  003E7E  1004               	iorwf	___flneg@f1+3,w,c
  5670  003E80  B4D8               	btfsc	status,2,c
  5671  003E82  D008               	goto	l3859
  5672  003E84  0E00               	movlw	0
  5673  003E86  1A01               	xorwf	___flneg@f1,f,c
  5674  003E88  0E00               	movlw	0
  5675  003E8A  1A02               	xorwf	___flneg@f1+1,f,c
  5676  003E8C  0E00               	movlw	0
  5677  003E8E  1A03               	xorwf	___flneg@f1+2,f,c
  5678  003E90  0E80               	movlw	128
  5679  003E92  1A04               	xorwf	___flneg@f1+3,f,c
  5680  003E94                     l3859:
  5681  003E94  C001  F001         	movff	___flneg@f1,?___flneg
  5682  003E98  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5683  003E9C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5684  003EA0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5685  003EA4  0012               	return		;funcret
  5686  003EA6                     __end_of___flneg:
  5687                           	opt callstack 0
  5688                           
  5689 ;; *************** function ___fleq *****************
  5690 ;; Defined at:
  5691 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  ff1             4    0[COMRAM] unsigned char 
  5694 ;;  ff2             4    4[COMRAM] unsigned char 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;		None               void
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5706 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;Total ram usage:       12 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_efgtoa
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text22
  5720  0034C8                     __ptext22:
  5721                           	opt callstack 0
  5722  0034C8                     ___fleq:
  5723                           	opt callstack 25
  5724                           
  5725                           ;incstack = 0
  5726  0034C8  0E00               	movlw	0
  5727  0034CA  1401               	andwf	___fleq@ff1,w,c
  5728  0034CC  6E09               	movwf	??___fleq& (0+255),c
  5729  0034CE  0E00               	movlw	0
  5730  0034D0  1402               	andwf	___fleq@ff1+1,w,c
  5731  0034D2  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5732  0034D4  0E80               	movlw	128
  5733  0034D6  1403               	andwf	___fleq@ff1+2,w,c
  5734  0034D8  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5735  0034DA  0E7F               	movlw	127
  5736  0034DC  1404               	andwf	___fleq@ff1+3,w,c
  5737  0034DE  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5738  0034E0  5009               	movf	??___fleq,w,c
  5739  0034E2  100A               	iorwf	??___fleq+1,w,c
  5740  0034E4  100B               	iorwf	??___fleq+2,w,c
  5741  0034E6  100C               	iorwf	??___fleq+3,w,c
  5742  0034E8  A4D8               	btfss	status,2,c
  5743  0034EA  D008               	goto	l3821
  5744  0034EC  0E00               	movlw	0
  5745  0034EE  6E01               	movwf	___fleq@ff1,c
  5746  0034F0  0E00               	movlw	0
  5747  0034F2  6E02               	movwf	___fleq@ff1+1,c
  5748  0034F4  0E00               	movlw	0
  5749  0034F6  6E03               	movwf	___fleq@ff1+2,c
  5750  0034F8  0E00               	movlw	0
  5751  0034FA  6E04               	movwf	___fleq@ff1+3,c
  5752  0034FC                     l3821:
  5753  0034FC  0E00               	movlw	0
  5754  0034FE  1405               	andwf	___fleq@ff2,w,c
  5755  003500  6E09               	movwf	??___fleq& (0+255),c
  5756  003502  0E00               	movlw	0
  5757  003504  1406               	andwf	___fleq@ff2+1,w,c
  5758  003506  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5759  003508  0E80               	movlw	128
  5760  00350A  1407               	andwf	___fleq@ff2+2,w,c
  5761  00350C  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5762  00350E  0E7F               	movlw	127
  5763  003510  1408               	andwf	___fleq@ff2+3,w,c
  5764  003512  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5765  003514  5009               	movf	??___fleq,w,c
  5766  003516  100A               	iorwf	??___fleq+1,w,c
  5767  003518  100B               	iorwf	??___fleq+2,w,c
  5768  00351A  100C               	iorwf	??___fleq+3,w,c
  5769  00351C  A4D8               	btfss	status,2,c
  5770  00351E  D008               	goto	l3825
  5771  003520  0E00               	movlw	0
  5772  003522  6E05               	movwf	___fleq@ff2,c
  5773  003524  0E00               	movlw	0
  5774  003526  6E06               	movwf	___fleq@ff2+1,c
  5775  003528  0E00               	movlw	0
  5776  00352A  6E07               	movwf	___fleq@ff2+2,c
  5777  00352C  0E00               	movlw	0
  5778  00352E  6E08               	movwf	___fleq@ff2+3,c
  5779  003530                     l3825:
  5780  003530  5005               	movf	___fleq@ff2,w,c
  5781  003532  1801               	xorwf	___fleq@ff1,w,c
  5782  003534  E10A               	bnz	u3990
  5783  003536  5006               	movf	___fleq@ff2+1,w,c
  5784  003538  1802               	xorwf	___fleq@ff1+1,w,c
  5785  00353A  E107               	bnz	u3990
  5786  00353C  5007               	movf	___fleq@ff2+2,w,c
  5787  00353E  1803               	xorwf	___fleq@ff1+2,w,c
  5788  003540  E104               	bnz	u3990
  5789  003542  5008               	movf	___fleq@ff2+3,w,c
  5790  003544  1804               	xorwf	___fleq@ff1+3,w,c
  5791  003546  B4D8               	btfsc	status,2,c
  5792  003548  D002               	goto	l3829
  5793  00354A                     u3990:
  5794  00354A  90D8               	bcf	status,0,c
  5795  00354C  0012               	return	
  5796  00354E                     l3829:
  5797  00354E  80D8               	bsf	status,0,c
  5798  003550  0012               	return		;funcret
  5799  003552                     __end_of___fleq:
  5800                           	opt callstack 0
  5801                           
  5802 ;; *************** function ___awmod *****************
  5803 ;; Defined at:
  5804 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  dividend        2    0[COMRAM] int 
  5807 ;;  divisor         2    2[COMRAM] int 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  sign            1    5[COMRAM] unsigned char 
  5810 ;;  counter         1    4[COMRAM] unsigned char 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  2    0[COMRAM] int 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:        6 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_efgtoa
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text23
  5834  00384E                     __ptext23:
  5835                           	opt callstack 0
  5836  00384E                     ___awmod:
  5837                           	opt callstack 25
  5838                           
  5839                           ;incstack = 0
  5840  00384E  0E00               	movlw	0
  5841  003850  6E06               	movwf	___awmod@sign,c
  5842  003852  AE02               	btfss	___awmod@dividend+1,7,c
  5843  003854  D006               	goto	l3789
  5844  003856  6C01               	negf	___awmod@dividend,c
  5845  003858  1E02               	comf	___awmod@dividend+1,f,c
  5846  00385A  B0D8               	btfsc	status,0,c
  5847  00385C  2A02               	incf	___awmod@dividend+1,f,c
  5848  00385E  0E01               	movlw	1
  5849  003860  6E06               	movwf	___awmod@sign,c
  5850  003862                     l3789:
  5851  003862  AE04               	btfss	___awmod@divisor+1,7,c
  5852  003864  D004               	goto	l3793
  5853  003866  6C03               	negf	___awmod@divisor,c
  5854  003868  1E04               	comf	___awmod@divisor+1,f,c
  5855  00386A  B0D8               	btfsc	status,0,c
  5856  00386C  2A04               	incf	___awmod@divisor+1,f,c
  5857  00386E                     l3793:
  5858  00386E  5003               	movf	___awmod@divisor,w,c
  5859  003870  1004               	iorwf	___awmod@divisor+1,w,c
  5860  003872  B4D8               	btfsc	status,2,c
  5861  003874  D018               	goto	l3809
  5862  003876  0E01               	movlw	1
  5863  003878  6E05               	movwf	___awmod@counter,c
  5864  00387A  D004               	goto	l3799
  5865  00387C                     l3797:
  5866  00387C  90D8               	bcf	status,0,c
  5867  00387E  3603               	rlcf	___awmod@divisor,f,c
  5868  003880  3604               	rlcf	___awmod@divisor+1,f,c
  5869  003882  2A05               	incf	___awmod@counter,f,c
  5870  003884                     l3799:
  5871  003884  AE04               	btfss	___awmod@divisor+1,7,c
  5872  003886  D7FA               	goto	l3797
  5873  003888                     u3940:
  5874  003888  5003               	movf	___awmod@divisor,w,c
  5875  00388A  5C01               	subwf	___awmod@dividend,w,c
  5876  00388C  5004               	movf	___awmod@divisor+1,w,c
  5877  00388E  5802               	subwfb	___awmod@dividend+1,w,c
  5878  003890  A0D8               	btfss	status,0,c
  5879  003892  D004               	goto	l3805
  5880  003894  5003               	movf	___awmod@divisor,w,c
  5881  003896  5E01               	subwf	___awmod@dividend,f,c
  5882  003898  5004               	movf	___awmod@divisor+1,w,c
  5883  00389A  5A02               	subwfb	___awmod@dividend+1,f,c
  5884  00389C                     l3805:
  5885  00389C  90D8               	bcf	status,0,c
  5886  00389E  3204               	rrcf	___awmod@divisor+1,f,c
  5887  0038A0  3203               	rrcf	___awmod@divisor,f,c
  5888  0038A2  2E05               	decfsz	___awmod@counter,f,c
  5889  0038A4  D7F1               	goto	u3940
  5890  0038A6                     l3809:
  5891  0038A6  5006               	movf	___awmod@sign,w,c
  5892  0038A8  B4D8               	btfsc	status,2,c
  5893  0038AA  D004               	goto	l3813
  5894  0038AC  6C01               	negf	___awmod@dividend,c
  5895  0038AE  1E02               	comf	___awmod@dividend+1,f,c
  5896  0038B0  B0D8               	btfsc	status,0,c
  5897  0038B2  2A02               	incf	___awmod@dividend+1,f,c
  5898  0038B4                     l3813:
  5899  0038B4  C001  F001         	movff	___awmod@dividend,?___awmod
  5900  0038B8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5901  0038BC  0012               	return		;funcret
  5902  0038BE                     __end_of___awmod:
  5903                           	opt callstack 0
  5904                           
  5905 ;; *************** function ___awdiv *****************
  5906 ;; Defined at:
  5907 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  dividend        2    0[COMRAM] int 
  5910 ;;  divisor         2    2[COMRAM] int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  quotient        2    6[COMRAM] int 
  5913 ;;  sign            1    5[COMRAM] unsigned char 
  5914 ;;  counter         1    4[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2    0[COMRAM] int 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;Total ram usage:        8 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_efgtoa
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text24
  5938  003552                     __ptext24:
  5939                           	opt callstack 0
  5940  003552                     ___awdiv:
  5941                           	opt callstack 25
  5942                           
  5943                           ;incstack = 0
  5944  003552  0E00               	movlw	0
  5945  003554  6E06               	movwf	___awdiv@sign,c
  5946  003556  AE04               	btfss	___awdiv@divisor+1,7,c
  5947  003558  D006               	goto	l3745
  5948  00355A  6C03               	negf	___awdiv@divisor,c
  5949  00355C  1E04               	comf	___awdiv@divisor+1,f,c
  5950  00355E  B0D8               	btfsc	status,0,c
  5951  003560  2A04               	incf	___awdiv@divisor+1,f,c
  5952  003562  0E01               	movlw	1
  5953  003564  6E06               	movwf	___awdiv@sign,c
  5954  003566                     l3745:
  5955  003566  AE02               	btfss	___awdiv@dividend+1,7,c
  5956  003568  D006               	goto	l3751
  5957  00356A  6C01               	negf	___awdiv@dividend,c
  5958  00356C  1E02               	comf	___awdiv@dividend+1,f,c
  5959  00356E  B0D8               	btfsc	status,0,c
  5960  003570  2A02               	incf	___awdiv@dividend+1,f,c
  5961  003572  0E01               	movlw	1
  5962  003574  1A06               	xorwf	___awdiv@sign,f,c
  5963  003576                     l3751:
  5964  003576  0E00               	movlw	0
  5965  003578  6E08               	movwf	___awdiv@quotient+1,c
  5966  00357A  0E00               	movlw	0
  5967  00357C  6E07               	movwf	___awdiv@quotient,c
  5968  00357E  5003               	movf	___awdiv@divisor,w,c
  5969  003580  1004               	iorwf	___awdiv@divisor+1,w,c
  5970  003582  B4D8               	btfsc	status,2,c
  5971  003584  D01C               	goto	l3773
  5972  003586  0E01               	movlw	1
  5973  003588  6E05               	movwf	___awdiv@counter,c
  5974  00358A  D004               	goto	l3759
  5975  00358C                     l3757:
  5976  00358C  90D8               	bcf	status,0,c
  5977  00358E  3603               	rlcf	___awdiv@divisor,f,c
  5978  003590  3604               	rlcf	___awdiv@divisor+1,f,c
  5979  003592  2A05               	incf	___awdiv@counter,f,c
  5980  003594                     l3759:
  5981  003594  AE04               	btfss	___awdiv@divisor+1,7,c
  5982  003596  D7FA               	goto	l3757
  5983  003598                     u3880:
  5984  003598  90D8               	bcf	status,0,c
  5985  00359A  3607               	rlcf	___awdiv@quotient,f,c
  5986  00359C  3608               	rlcf	___awdiv@quotient+1,f,c
  5987  00359E  5003               	movf	___awdiv@divisor,w,c
  5988  0035A0  5C01               	subwf	___awdiv@dividend,w,c
  5989  0035A2  5004               	movf	___awdiv@divisor+1,w,c
  5990  0035A4  5802               	subwfb	___awdiv@dividend+1,w,c
  5991  0035A6  A0D8               	btfss	status,0,c
  5992  0035A8  D005               	goto	l3769
  5993  0035AA  5003               	movf	___awdiv@divisor,w,c
  5994  0035AC  5E01               	subwf	___awdiv@dividend,f,c
  5995  0035AE  5004               	movf	___awdiv@divisor+1,w,c
  5996  0035B0  5A02               	subwfb	___awdiv@dividend+1,f,c
  5997  0035B2  8007               	bsf	___awdiv@quotient,0,c
  5998  0035B4                     l3769:
  5999  0035B4  90D8               	bcf	status,0,c
  6000  0035B6  3204               	rrcf	___awdiv@divisor+1,f,c
  6001  0035B8  3203               	rrcf	___awdiv@divisor,f,c
  6002  0035BA  2E05               	decfsz	___awdiv@counter,f,c
  6003  0035BC  D7ED               	goto	u3880
  6004  0035BE                     l3773:
  6005  0035BE  5006               	movf	___awdiv@sign,w,c
  6006  0035C0  B4D8               	btfsc	status,2,c
  6007  0035C2  D004               	goto	l3777
  6008  0035C4  6C07               	negf	___awdiv@quotient,c
  6009  0035C6  1E08               	comf	___awdiv@quotient+1,f,c
  6010  0035C8  B0D8               	btfsc	status,0,c
  6011  0035CA  2A08               	incf	___awdiv@quotient+1,f,c
  6012  0035CC                     l3777:
  6013  0035CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6014  0035D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6015  0035D4  0012               	return		;funcret
  6016  0035D6                     __end_of___awdiv:
  6017                           	opt callstack 0
  6018                           
  6019 ;; *************** function _atoi *****************
  6020 ;; Defined at:
  6021 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6024 ;;		 -> STR_12(5), STR_10(5), STR_8(5), STR_4(5), 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  n               2   20[COMRAM] int 
  6027 ;;  neg             2   13[COMRAM] int 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  2    7[COMRAM] int 
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;Total ram usage:       15 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    1
  6044 ;; This function calls:
  6045 ;;		___wmul
  6046 ;;		_isdigit
  6047 ;;		_isspace
  6048 ;; This function is called by:
  6049 ;;		_vfpfcnvrt
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text25
  6054  002B38                     __ptext25:
  6055                           	opt callstack 0
  6056  002B38                     _atoi:
  6057                           	opt callstack 25
  6058                           
  6059                           ;incstack = 0
  6060  002B38  0E00               	movlw	0
  6061  002B3A  6E16               	movwf	atoi@n+1,c
  6062  002B3C  0E00               	movlw	0
  6063  002B3E  6E15               	movwf	atoi@n,c
  6064  002B40  0E00               	movlw	0
  6065  002B42  6E0F               	movwf	atoi@neg+1,c
  6066  002B44  0E00               	movlw	0
  6067  002B46  6E0E               	movwf	atoi@neg,c
  6068  002B48  D002               	goto	l4233
  6069  002B4A                     l4231:
  6070  002B4A  4A08               	infsnz	atoi@s,f,c
  6071  002B4C  2A09               	incf	atoi@s+1,f,c
  6072  002B4E                     l4233:
  6073  002B4E  0E01               	movlw	1
  6074  002B50  6E14               	movwf	_atoi$1277,c
  6075  002B52  C008  FFF6         	movff	atoi@s,tblptrl
  6076  002B56  C009  FFF7         	movff	atoi@s+1,tblptrh
  6077  002B5A                     	if	0	;tblptru may be non-zero
  6078  002B5A                     	endif
  6079  002B5A                     	if	0	;tblptru may be non-zero
  6080  002B5A                     	endif
  6081  002B5A  0008               	tblrd		*
  6082  002B5C  50F5               	movf	tablat,w,c
  6083  002B5E  0A20               	xorlw	32
  6084  002B60  B4D8               	btfsc	status,2,c
  6085  002B62  D018               	goto	l4241
  6086  002B64  0EF7               	movlw	247
  6087  002B66  6E0A               	movwf	??_atoi& (0+255),c
  6088  002B68  0EFF               	movlw	255
  6089  002B6A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6090  002B6C  C008  FFF6         	movff	atoi@s,tblptrl
  6091  002B70  C009  FFF7         	movff	atoi@s+1,tblptrh
  6092  002B74                     	if	0	;tblptru may be non-zero
  6093  002B74                     	endif
  6094  002B74                     	if	0	;tblptru may be non-zero
  6095  002B74                     	endif
  6096  002B74  0008               	tblrd		*
  6097  002B76  50F5               	movf	tablat,w,c
  6098  002B78  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6099  002B7A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6100  002B7C  500A               	movf	??_atoi,w,c
  6101  002B7E  260C               	addwf	??_atoi+2,f,c
  6102  002B80  500B               	movf	??_atoi+1,w,c
  6103  002B82  220D               	addwfc	??_atoi+3,f,c
  6104  002B84  500D               	movf	??_atoi+3,w,c
  6105  002B86  E104               	bnz	u4680
  6106  002B88  0E05               	movlw	5
  6107  002B8A  5C0C               	subwf	??_atoi+2,w,c
  6108  002B8C  A0D8               	btfss	status,0,c
  6109  002B8E  D002               	goto	l4241
  6110  002B90                     u4680:
  6111  002B90  0E00               	movlw	0
  6112  002B92  6E14               	movwf	_atoi$1277,c
  6113  002B94                     l4241:
  6114  002B94  C014  F010         	movff	_atoi$1277,_atoi$1276
  6115  002B98  6A11               	clrf	_atoi$1276+1,c
  6116  002B9A  5010               	movf	_atoi$1276,w,c
  6117  002B9C  1011               	iorwf	_atoi$1276+1,w,c
  6118  002B9E  B4D8               	btfsc	status,2,c
  6119  002BA0  D008               	goto	l4251
  6120  002BA2  D7D3               	goto	l4231
  6121  002BA4                     l4247:
  6122  002BA4  0E00               	movlw	0
  6123  002BA6  6E0F               	movwf	atoi@neg+1,c
  6124  002BA8  0E01               	movlw	1
  6125  002BAA  6E0E               	movwf	atoi@neg,c
  6126  002BAC                     l4249:
  6127  002BAC  4A08               	infsnz	atoi@s,f,c
  6128  002BAE  2A09               	incf	atoi@s+1,f,c
  6129  002BB0  D02E               	goto	l4257
  6130  002BB2                     l4251:
  6131  002BB2  C008  FFF6         	movff	atoi@s,tblptrl
  6132  002BB6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6133  002BBA                     	if	0	;tblptru may be non-zero
  6134  002BBA                     	endif
  6135  002BBA                     	if	0	;tblptru may be non-zero
  6136  002BBA                     	endif
  6137  002BBA  0008               	tblrd		*
  6138  002BBC  50F5               	movf	tablat,w,c
  6139  002BBE  6E0A               	movwf	??_atoi& (0+255),c
  6140  002BC0  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6141                           
  6142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6143                           ; Switch size 1, requested type "simple"
  6144                           ; Number of cases is 1, Range of values is 0 to 0
  6145                           ; switch strategies available:
  6146                           ; Name         Instructions Cycles
  6147                           ; simple_byte            4     3 (average)
  6148                           ;	Chosen strategy is simple_byte
  6149  002BC2  500B               	movf	??_atoi+1,w,c
  6150  002BC4  0A00               	xorlw	0	; case 0
  6151  002BC6  A4D8               	btfss	status,2,c
  6152  002BC8  D022               	goto	l4257
  6153                           
  6154                           ; Switch size 1, requested type "simple"
  6155                           ; Number of cases is 2, Range of values is 43 to 45
  6156                           ; switch strategies available:
  6157                           ; Name         Instructions Cycles
  6158                           ; simple_byte            7     4 (average)
  6159                           ;	Chosen strategy is simple_byte
  6160  002BCA  500A               	movf	??_atoi,w,c
  6161  002BCC  0A2B               	xorlw	43	; case 43
  6162  002BCE  B4D8               	btfsc	status,2,c
  6163  002BD0  D7ED               	goto	l4249
  6164  002BD2  0A06               	xorlw	6	; case 45
  6165  002BD4  B4D8               	btfsc	status,2,c
  6166  002BD6  D7E6               	goto	l4247
  6167  002BD8  D01A               	goto	l4257
  6168  002BDA                     l4253:
  6169  002BDA  C015  F001         	movff	atoi@n,___wmul@multiplier
  6170  002BDE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6171  002BE2  0E00               	movlw	0
  6172  002BE4  6E04               	movwf	___wmul@multiplicand+1,c
  6173  002BE6  0E0A               	movlw	10
  6174  002BE8  6E03               	movwf	___wmul@multiplicand,c
  6175  002BEA  EC68  F01F         	call	___wmul	;wreg free
  6176  002BEE  C008  FFF6         	movff	atoi@s,tblptrl
  6177  002BF2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6178  002BF6                     	if	0	;tblptru may be non-zero
  6179  002BF6                     	endif
  6180  002BF6                     	if	0	;tblptru may be non-zero
  6181  002BF6                     	endif
  6182  002BF6  0008               	tblrd		*
  6183  002BF8  50F5               	movf	tablat,w,c
  6184  002BFA  5E01               	subwf	?___wmul,f,c
  6185  002BFC  0E00               	movlw	0
  6186  002BFE  5A02               	subwfb	?___wmul+1,f,c
  6187  002C00  0E30               	movlw	48
  6188  002C02  2401               	addwf	?___wmul,w,c
  6189  002C04  6E15               	movwf	atoi@n,c
  6190  002C06  0E00               	movlw	0
  6191  002C08  2002               	addwfc	?___wmul+1,w,c
  6192  002C0A  6E16               	movwf	atoi@n+1,c
  6193  002C0C  D7CF               	goto	l4249
  6194  002C0E                     l4257:
  6195  002C0E  0ED0               	movlw	208
  6196  002C10  6E0A               	movwf	??_atoi& (0+255),c
  6197  002C12  0EFF               	movlw	255
  6198  002C14  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6199  002C16  C008  FFF6         	movff	atoi@s,tblptrl
  6200  002C1A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6201  002C1E                     	if	0	;tblptru may be non-zero
  6202  002C1E                     	endif
  6203  002C1E                     	if	0	;tblptru may be non-zero
  6204  002C1E                     	endif
  6205  002C1E  0008               	tblrd		*
  6206  002C20  50F5               	movf	tablat,w,c
  6207  002C22  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6208  002C24  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6209  002C26  500A               	movf	??_atoi,w,c
  6210  002C28  260C               	addwf	??_atoi+2,f,c
  6211  002C2A  500B               	movf	??_atoi+1,w,c
  6212  002C2C  220D               	addwfc	??_atoi+3,f,c
  6213  002C2E  500D               	movf	??_atoi+3,w,c
  6214  002C30  E106               	bnz	u4700
  6215  002C32  0E0A               	movlw	10
  6216  002C34  5C0C               	subwf	??_atoi+2,w,c
  6217  002C36  B0D8               	btfsc	status,0,c
  6218  002C38  D002               	goto	u4700
  6219  002C3A  0E01               	movlw	1
  6220  002C3C  D001               	goto	u4710
  6221  002C3E                     u4700:
  6222  002C3E  0E00               	movlw	0
  6223  002C40                     u4710:
  6224  002C40  6E12               	movwf	_atoi$1278,c
  6225  002C42  6A13               	clrf	_atoi$1278+1,c
  6226  002C44  5012               	movf	_atoi$1278,w,c
  6227  002C46  1013               	iorwf	_atoi$1278+1,w,c
  6228  002C48  A4D8               	btfss	status,2,c
  6229  002C4A  D7C7               	goto	l4253
  6230  002C4C  500E               	movf	atoi@neg,w,c
  6231  002C4E  100F               	iorwf	atoi@neg+1,w,c
  6232  002C50  A4D8               	btfss	status,2,c
  6233  002C52  D00D               	goto	l1233
  6234  002C54  C015  F00A         	movff	atoi@n,??_atoi
  6235  002C58  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6236  002C5C  1E0A               	comf	??_atoi,f,c
  6237  002C5E  1E0B               	comf	??_atoi+1,f,c
  6238  002C60  4A0A               	infsnz	??_atoi,f,c
  6239  002C62  2A0B               	incf	??_atoi+1,f,c
  6240  002C64  C00A  F008         	movff	??_atoi,?_atoi
  6241  002C68  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6242  002C6C  0012               	return	
  6243  002C6E                     l1233:
  6244  002C6E  C015  F008         	movff	atoi@n,?_atoi
  6245  002C72  C016  F009         	movff	atoi@n+1,?_atoi+1
  6246  002C76  0012               	return		;funcret
  6247  002C78                     __end_of_atoi:
  6248                           	opt callstack 0
  6249                           
  6250 ;; *************** function _isspace *****************
  6251 ;; Defined at:
  6252 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  c               2    0[COMRAM] int 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  2    0[COMRAM] int 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;Total ram usage:        7 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_atoi
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text26
  6280  003D6A                     __ptext26:
  6281                           	opt callstack 0
  6282  003D6A                     _isspace:
  6283                           	opt callstack 25
  6284                           
  6285                           ;incstack = 0
  6286  003D6A  0E01               	movlw	1
  6287  003D6C  6E07               	movwf	_isspace$1307,c
  6288  003D6E  0E20               	movlw	32
  6289  003D70  1801               	xorwf	isspace@c,w,c
  6290  003D72  1002               	iorwf	isspace@c+1,w,c
  6291  003D74  B4D8               	btfsc	status,2,c
  6292  003D76  D014               	goto	l3915
  6293  003D78  0EF7               	movlw	247
  6294  003D7A  6E03               	movwf	??_isspace& (0+255),c
  6295  003D7C  0EFF               	movlw	255
  6296  003D7E  6E04               	movwf	(??_isspace+1)& (0+255),c
  6297  003D80  C001  F005         	movff	isspace@c,??_isspace+2
  6298  003D84  C002  F006         	movff	isspace@c+1,??_isspace+3
  6299  003D88  5003               	movf	??_isspace,w,c
  6300  003D8A  2605               	addwf	??_isspace+2,f,c
  6301  003D8C  5004               	movf	??_isspace+1,w,c
  6302  003D8E  2206               	addwfc	??_isspace+3,f,c
  6303  003D90  5006               	movf	??_isspace+3,w,c
  6304  003D92  E104               	bnz	u4140
  6305  003D94  0E05               	movlw	5
  6306  003D96  5C05               	subwf	??_isspace+2,w,c
  6307  003D98  A0D8               	btfss	status,0,c
  6308  003D9A  D002               	goto	l3915
  6309  003D9C                     u4140:
  6310  003D9C  0E00               	movlw	0
  6311  003D9E  6E07               	movwf	_isspace$1307,c
  6312  003DA0                     l3915:
  6313  003DA0  C007  F001         	movff	_isspace$1307,?_isspace
  6314  003DA4  6A02               	clrf	?_isspace+1,c
  6315  003DA6  0012               	return		;funcret
  6316  003DA8                     __end_of_isspace:
  6317                           	opt callstack 0
  6318                           
  6319 ;; *************** function _isdigit *****************
  6320 ;; Defined at:
  6321 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  c               2    0[COMRAM] int 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  2    0[COMRAM] int 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        6 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_vfpfcnvrt
  6345 ;;		_atoi
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text27
  6350  003E48                     __ptext27:
  6351                           	opt callstack 0
  6352  003E48                     _isdigit:
  6353                           	opt callstack 26
  6354                           
  6355                           ;incstack = 0
  6356  003E48  0ED0               	movlw	208
  6357  003E4A  6E03               	movwf	??_isdigit& (0+255),c
  6358  003E4C  0EFF               	movlw	255
  6359  003E4E  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6360  003E50  C001  F005         	movff	isdigit@c,??_isdigit+2
  6361  003E54  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6362  003E58  5003               	movf	??_isdigit,w,c
  6363  003E5A  2605               	addwf	??_isdigit+2,f,c
  6364  003E5C  5004               	movf	??_isdigit+1,w,c
  6365  003E5E  2206               	addwfc	??_isdigit+3,f,c
  6366  003E60  5006               	movf	??_isdigit+3,w,c
  6367  003E62  E106               	bnz	u3410
  6368  003E64  0E0A               	movlw	10
  6369  003E66  5C05               	subwf	??_isdigit+2,w,c
  6370  003E68  B0D8               	btfsc	status,0,c
  6371  003E6A  D002               	goto	u3410
  6372  003E6C  0E01               	movlw	1
  6373  003E6E  D001               	goto	u3420
  6374  003E70                     u3410:
  6375  003E70  0E00               	movlw	0
  6376  003E72                     u3420:
  6377  003E72  6E01               	movwf	?_isdigit,c
  6378  003E74  6A02               	clrf	?_isdigit+1,c
  6379  003E76  0012               	return		;funcret
  6380  003E78                     __end_of_isdigit:
  6381                           	opt callstack 0
  6382                           
  6383 ;; *************** function ___wmul *****************
  6384 ;; Defined at:
  6385 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  multiplier      2    0[COMRAM] unsigned int 
  6388 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  product         2    4[COMRAM] unsigned int 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  2    0[COMRAM] unsigned int 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0, prodl, prodh
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;Total ram usage:        6 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_atoi
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text28
  6414  003ED0                     __ptext28:
  6415                           	opt callstack 0
  6416  003ED0                     ___wmul:
  6417                           	opt callstack 25
  6418                           
  6419                           ;incstack = 0
  6420  003ED0  5001               	movf	___wmul@multiplier,w,c
  6421  003ED2  0203               	mulwf	___wmul@multiplicand,c
  6422  003ED4  CFF3 F005          	movff	prodl,___wmul@product
  6423  003ED8  CFF4 F006          	movff	prodh,___wmul@product+1
  6424  003EDC  5001               	movf	___wmul@multiplier,w,c
  6425  003EDE  0204               	mulwf	___wmul@multiplicand+1,c
  6426  003EE0  50F3               	movf	prodl,w,c
  6427  003EE2  2606               	addwf	___wmul@product+1,f,c
  6428  003EE4  5002               	movf	___wmul@multiplier+1,w,c
  6429  003EE6  0203               	mulwf	___wmul@multiplicand,c
  6430  003EE8  50F3               	movf	prodl,w,c
  6431  003EEA  2606               	addwf	___wmul@product+1,f,c
  6432  003EEC  C005  F001         	movff	___wmul@product,?___wmul
  6433  003EF0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6434  003EF4  0012               	return		;funcret
  6435  003EF6                     __end_of___wmul:
  6436                           	opt callstack 0
  6437                           
  6438 ;; *************** function _set_buck *****************
  6439 ;; Defined at:
  6440 ;;		line 154 in file "mppt.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  dty             2   49[COMRAM] int 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;		None
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;Total ram usage:        2 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    1
  6461 ;; This function calls:
  6462 ;;		___flmul
  6463 ;;		___fltol
  6464 ;;		___xxtofl
  6465 ;; This function is called by:
  6466 ;;		_main
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text29
  6471  0035D6                     __ptext29:
  6472                           	opt callstack 0
  6473  0035D6                     _set_buck:
  6474                           	opt callstack 29
  6475                           
  6476                           ;mppt.c: 154: void set_buck(int dty);mppt.c: 155: {;mppt.c: 156:  if(dty>100)
  6477                           
  6478                           ;incstack = 0
  6479  0035D6  BE33               	btfsc	set_buck@dty+1,7,c
  6480  0035D8  D00A               	goto	l4721
  6481  0035DA  5033               	movf	set_buck@dty+1,w,c
  6482  0035DC  E104               	bnz	u5180
  6483  0035DE  0E65               	movlw	101
  6484  0035E0  5C32               	subwf	set_buck@dty,w,c
  6485  0035E2  A0D8               	btfss	status,0,c
  6486  0035E4  D004               	goto	l4721
  6487  0035E6                     u5180:
  6488                           
  6489                           ;mppt.c: 157:     {;mppt.c: 158:         dty=100;
  6490  0035E6  0E00               	movlw	0
  6491  0035E8  6E33               	movwf	set_buck@dty+1,c
  6492  0035EA  0E64               	movlw	100
  6493  0035EC  6E32               	movwf	set_buck@dty,c
  6494  0035EE                     l4721:
  6495                           
  6496                           ;mppt.c: 160:     if(dty<0)
  6497  0035EE  AE33               	btfss	set_buck@dty+1,7,c
  6498  0035F0  D004               	goto	l4725
  6499                           
  6500                           ;mppt.c: 161:     {;mppt.c: 162:         dty=0;
  6501  0035F2  0E00               	movlw	0
  6502  0035F4  6E33               	movwf	set_buck@dty+1,c
  6503  0035F6  0E00               	movlw	0
  6504  0035F8  6E32               	movwf	set_buck@dty,c
  6505  0035FA                     l4725:
  6506                           
  6507                           ;mppt.c: 165:  c=dty*1.61;
  6508  0035FA  0E7B               	movlw	123
  6509  0035FC  6E13               	movwf	___flmul@a,c
  6510  0035FE  0E14               	movlw	20
  6511  003600  6E14               	movwf	___flmul@a+1,c
  6512  003602  0ECE               	movlw	206
  6513  003604  6E15               	movwf	___flmul@a+2,c
  6514  003606  0E3F               	movlw	63
  6515  003608  6E16               	movwf	___flmul@a+3,c
  6516  00360A  C032  F001         	movff	set_buck@dty,___xxtofl@val
  6517  00360E  C033  F002         	movff	set_buck@dty+1,___xxtofl@val+1
  6518  003612  0E00               	movlw	0
  6519  003614  BE02               	btfsc	___xxtofl@val+1,7,c
  6520  003616  0EFF               	movlw	-1
  6521  003618  6E03               	movwf	___xxtofl@val+2,c
  6522  00361A  6E04               	movwf	___xxtofl@val+3,c
  6523  00361C  0E01               	movlw	1
  6524  00361E  EC3C  F016         	call	___xxtofl
  6525  003622  C001  F00F         	movff	?___xxtofl,___flmul@b
  6526  003626  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6527  00362A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6528  00362E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6529  003632  ECB6  F00E         	call	___flmul	;wreg free
  6530  003636  C00F  F028         	movff	?___flmul,___fltol@f1
  6531  00363A  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  6532  00363E  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  6533  003642  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  6534  003646  ECBE  F018         	call	___fltol	;wreg free
  6535  00364A  C028  F0EA         	movff	?___fltol,_c
  6536  00364E  C029  F0EB         	movff	?___fltol+1,_c+1
  6537                           
  6538                           ;mppt.c: 166:  CCPR2L=c;
  6539  003652  C0EA  FF67         	movff	_c,3943	;volatile
  6540  003656  0012               	return		;funcret
  6541  003658                     __end_of_set_buck:
  6542                           	opt callstack 0
  6543                           
  6544 ;; *************** function _set_boost *****************
  6545 ;; Defined at:
  6546 ;;		line 139 in file "mppt.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  dty             2   49[COMRAM] int 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;Total ram usage:        2 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    1
  6567 ;; This function calls:
  6568 ;;		___flmul
  6569 ;;		___fltol
  6570 ;;		___xxtofl
  6571 ;; This function is called by:
  6572 ;;		_main
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text30
  6577  003658                     __ptext30:
  6578                           	opt callstack 0
  6579  003658                     _set_boost:
  6580                           	opt callstack 29
  6581                           
  6582                           ;mppt.c: 139: void set_boost(int dty);mppt.c: 140: {;mppt.c: 141:  if(dty>100)
  6583                           
  6584                           ;incstack = 0
  6585  003658  BE33               	btfsc	set_boost@dty+1,7,c
  6586  00365A  D00A               	goto	l4709
  6587  00365C  5033               	movf	set_boost@dty+1,w,c
  6588  00365E  E104               	bnz	u5160
  6589  003660  0E65               	movlw	101
  6590  003662  5C32               	subwf	set_boost@dty,w,c
  6591  003664  A0D8               	btfss	status,0,c
  6592  003666  D004               	goto	l4709
  6593  003668                     u5160:
  6594                           
  6595                           ;mppt.c: 142:     {;mppt.c: 143:         dty=100;
  6596  003668  0E00               	movlw	0
  6597  00366A  6E33               	movwf	set_boost@dty+1,c
  6598  00366C  0E64               	movlw	100
  6599  00366E  6E32               	movwf	set_boost@dty,c
  6600  003670                     l4709:
  6601                           
  6602                           ;mppt.c: 145:     if(dty<0)
  6603  003670  AE33               	btfss	set_boost@dty+1,7,c
  6604  003672  D004               	goto	l4713
  6605                           
  6606                           ;mppt.c: 146:     {;mppt.c: 147:         dty=0;
  6607  003674  0E00               	movlw	0
  6608  003676  6E33               	movwf	set_boost@dty+1,c
  6609  003678  0E00               	movlw	0
  6610  00367A  6E32               	movwf	set_boost@dty,c
  6611  00367C                     l4713:
  6612                           
  6613                           ;mppt.c: 149:  c=dty*1.61;
  6614  00367C  0E7B               	movlw	123
  6615  00367E  6E13               	movwf	___flmul@a,c
  6616  003680  0E14               	movlw	20
  6617  003682  6E14               	movwf	___flmul@a+1,c
  6618  003684  0ECE               	movlw	206
  6619  003686  6E15               	movwf	___flmul@a+2,c
  6620  003688  0E3F               	movlw	63
  6621  00368A  6E16               	movwf	___flmul@a+3,c
  6622  00368C  C032  F001         	movff	set_boost@dty,___xxtofl@val
  6623  003690  C033  F002         	movff	set_boost@dty+1,___xxtofl@val+1
  6624  003694  0E00               	movlw	0
  6625  003696  BE02               	btfsc	___xxtofl@val+1,7,c
  6626  003698  0EFF               	movlw	-1
  6627  00369A  6E03               	movwf	___xxtofl@val+2,c
  6628  00369C  6E04               	movwf	___xxtofl@val+3,c
  6629  00369E  0E01               	movlw	1
  6630  0036A0  EC3C  F016         	call	___xxtofl
  6631  0036A4  C001  F00F         	movff	?___xxtofl,___flmul@b
  6632  0036A8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6633  0036AC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6634  0036B0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6635  0036B4  ECB6  F00E         	call	___flmul	;wreg free
  6636  0036B8  C00F  F028         	movff	?___flmul,___fltol@f1
  6637  0036BC  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  6638  0036C0  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  6639  0036C4  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  6640  0036C8  ECBE  F018         	call	___fltol	;wreg free
  6641  0036CC  C028  F0EA         	movff	?___fltol,_c
  6642  0036D0  C029  F0EB         	movff	?___fltol+1,_c+1
  6643                           
  6644                           ;mppt.c: 150:  CCPR1L=c;
  6645  0036D4  C0EA  FFBE         	movff	_c,4030	;volatile
  6646  0036D8  0012               	return		;funcret
  6647  0036DA                     __end_of_set_boost:
  6648                           	opt callstack 0
  6649                           
  6650 ;; *************** function ___fltol *****************
  6651 ;; Defined at:
  6652 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  f1              4   39[COMRAM] void 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  exp1            1   48[COMRAM] unsigned char 
  6657 ;;  sign1           1   47[COMRAM] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  4   39[COMRAM] long 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;Total ram usage:       10 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_set_boost
  6677 ;;		_set_buck
  6678 ;;		_efgtoa
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text31
  6683  00317C                     __ptext31:
  6684                           	opt callstack 0
  6685  00317C                     ___fltol:
  6686                           	opt callstack 25
  6687                           
  6688                           ;incstack = 0
  6689  00317C  342A               	rlcf	___fltol@f1+2,w,c
  6690  00317E  342B               	rlcf	___fltol@f1+3,w,c
  6691  003180  6E31               	movwf	___fltol@exp1,c
  6692  003182  5031               	movf	___fltol@exp1,w,c
  6693  003184  A4D8               	btfss	status,2,c
  6694  003186  D009               	goto	l3869
  6695  003188                     u4060:
  6696  003188  0E00               	movlw	0
  6697  00318A  6E28               	movwf	?___fltol,c
  6698  00318C  0E00               	movlw	0
  6699  00318E  6E29               	movwf	?___fltol+1,c
  6700  003190  0E00               	movlw	0
  6701  003192  6E2A               	movwf	?___fltol+2,c
  6702  003194  0E00               	movlw	0
  6703  003196  6E2B               	movwf	?___fltol+3,c
  6704  003198  0012               	return	
  6705  00319A                     l3869:
  6706  00319A  C028  F02C         	movff	___fltol@f1,??___fltol
  6707  00319E  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  6708  0031A2  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  6709  0031A6  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  6710  0031AA  0E20               	movlw	32
  6711  0031AC  D005               	goto	u4070
  6712  0031AE                     u4075:
  6713  0031AE  90D8               	bcf	status,0,c
  6714  0031B0  322F               	rrcf	??___fltol+3,f,c
  6715  0031B2  322E               	rrcf	??___fltol+2,f,c
  6716  0031B4  322D               	rrcf	??___fltol+1,f,c
  6717  0031B6  322C               	rrcf	??___fltol,f,c
  6718  0031B8                     u4070:
  6719  0031B8  2EE8               	decfsz	wreg,f,c
  6720  0031BA  D7F9               	goto	u4075
  6721  0031BC  502C               	movf	??___fltol,w,c
  6722  0031BE  6E30               	movwf	___fltol@sign1,c
  6723  0031C0  8E2A               	bsf	___fltol@f1+2,7,c
  6724  0031C2  0EFF               	movlw	255
  6725  0031C4  1628               	andwf	___fltol@f1,f,c
  6726  0031C6  0EFF               	movlw	255
  6727  0031C8  1629               	andwf	___fltol@f1+1,f,c
  6728  0031CA  0EFF               	movlw	255
  6729  0031CC  162A               	andwf	___fltol@f1+2,f,c
  6730  0031CE  0E00               	movlw	0
  6731  0031D0  162B               	andwf	___fltol@f1+3,f,c
  6732  0031D2  0E96               	movlw	150
  6733  0031D4  5E31               	subwf	___fltol@exp1,f,c
  6734  0031D6  AE31               	btfss	___fltol@exp1,7,c
  6735  0031D8  D00D               	goto	l3889
  6736  0031DA  5031               	movf	___fltol@exp1,w,c
  6737  0031DC  0A80               	xorlw	128
  6738  0031DE  0F97               	addlw	151
  6739  0031E0  A0D8               	btfss	status,0,c
  6740  0031E2  D7D2               	goto	u4060
  6741  0031E4                     l3885:
  6742  0031E4  90D8               	bcf	status,0,c
  6743  0031E6  322B               	rrcf	___fltol@f1+3,f,c
  6744  0031E8  322A               	rrcf	___fltol@f1+2,f,c
  6745  0031EA  3229               	rrcf	___fltol@f1+1,f,c
  6746  0031EC  3228               	rrcf	___fltol@f1,f,c
  6747  0031EE  3E31               	incfsz	___fltol@exp1,f,c
  6748  0031F0  D7F9               	goto	l3885
  6749  0031F2  D00D               	goto	u4110
  6750  0031F4                     l3889:
  6751  0031F4  0E1F               	movlw	31
  6752  0031F6  6431               	cpfsgt	___fltol@exp1,c
  6753  0031F8  D007               	goto	l3897
  6754  0031FA  D7C6               	goto	u4060
  6755  0031FC                     l3895:
  6756  0031FC  90D8               	bcf	status,0,c
  6757  0031FE  3628               	rlcf	___fltol@f1,f,c
  6758  003200  3629               	rlcf	___fltol@f1+1,f,c
  6759  003202  362A               	rlcf	___fltol@f1+2,f,c
  6760  003204  362B               	rlcf	___fltol@f1+3,f,c
  6761  003206  0631               	decf	___fltol@exp1,f,c
  6762  003208                     l3897:
  6763  003208  5031               	movf	___fltol@exp1,w,c
  6764  00320A  A4D8               	btfss	status,2,c
  6765  00320C  D7F7               	goto	l3895
  6766  00320E                     u4110:
  6767  00320E  5030               	movf	___fltol@sign1,w,c
  6768  003210  B4D8               	btfsc	status,2,c
  6769  003212  D008               	goto	l3903
  6770  003214  1E2B               	comf	___fltol@f1+3,f,c
  6771  003216  1E2A               	comf	___fltol@f1+2,f,c
  6772  003218  1E29               	comf	___fltol@f1+1,f,c
  6773  00321A  6C28               	negf	___fltol@f1,c
  6774  00321C  0E00               	movlw	0
  6775  00321E  2229               	addwfc	___fltol@f1+1,f,c
  6776  003220  222A               	addwfc	___fltol@f1+2,f,c
  6777  003222  222B               	addwfc	___fltol@f1+3,f,c
  6778  003224                     l3903:
  6779  003224  C028  F028         	movff	___fltol@f1,?___fltol
  6780  003228  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  6781  00322C  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  6782  003230  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  6783  003234  0012               	return		;funcret
  6784  003236                     __end_of___fltol:
  6785                           	opt callstack 0
  6786                           
  6787 ;; *************** function _read_Uout *****************
  6788 ;; Defined at:
  6789 ;;		line 59 in file "mppt.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;Total ram usage:        2 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    5
  6810 ;; This function calls:
  6811 ;;		_Lcd_Clear
  6812 ;;		_Lcd_Set_Cursor
  6813 ;;		_Lcd_Write_String
  6814 ;;		___fldiv
  6815 ;;		___flge
  6816 ;;		___flmul
  6817 ;;		___xxtofl
  6818 ;; This function is called by:
  6819 ;;		_main
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text32
  6824  002DB8                     __ptext32:
  6825                           	opt callstack 0
  6826  002DB8                     _read_Uout:
  6827                           	opt callstack 25
  6828                           
  6829                           ;mppt.c: 61:     ADCON0=0b00000111;
  6830                           
  6831                           ;incstack = 0
  6832  002DB8  0E07               	movlw	7
  6833  002DBA  6EC2               	movwf	4034,c	;volatile
  6834                           
  6835                           ;mppt.c: 62:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6836  002DBC  0ED0               	movlw	208
  6837  002DBE  6E34               	movwf	??_read_Uout& (0+255),c
  6838  002DC0  0ECA               	movlw	202
  6839  002DC2                     u5377:
  6840  002DC2  2EE8               	decfsz	wreg,f,c
  6841  002DC4  D7FE               	bra	u5377
  6842  002DC6  2E34               	decfsz	??_read_Uout& (0+255),f,c
  6843  002DC8  D7FC               	bra	u5377
  6844                           
  6845                           ;mppt.c: 63:     ADCON0bits.GO=1;
  6846  002DCA  82C2               	bsf	4034,1,c	;volatile
  6847                           
  6848                           ;mppt.c: 64:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6849  002DCC  0E09               	movlw	9
  6850  002DCE  6E35               	movwf	(??_read_Uout+1)& (0+255),c
  6851  002DD0  0E1E               	movlw	30
  6852  002DD2  6E34               	movwf	??_read_Uout& (0+255),c
  6853  002DD4  0EE4               	movlw	228
  6854  002DD6                     u5387:
  6855  002DD6  2EE8               	decfsz	wreg,f,c
  6856  002DD8  D7FE               	bra	u5387
  6857  002DDA  2E34               	decfsz	??_read_Uout& (0+255),f,c
  6858  002DDC  D7FC               	bra	u5387
  6859  002DDE  2E35               	decfsz	(??_read_Uout+1)& (0+255),f,c
  6860  002DE0  D7FA               	bra	u5387
  6861  002DE2  D000               	nop2	
  6862                           
  6863                           ;mppt.c: 65:     rez_adc_U=ADRESH;
  6864  002DE4  50C4               	movf	4036,w,c	;volatile
  6865  002DE6  6E01               	movwf	___xxtofl@val,c
  6866  002DE8  6A02               	clrf	___xxtofl@val+1,c
  6867  002DEA  6A03               	clrf	___xxtofl@val+2,c
  6868  002DEC  6A04               	clrf	___xxtofl@val+3,c
  6869  002DEE  0E00               	movlw	0
  6870  002DF0  EC3C  F016         	call	___xxtofl
  6871  002DF4  C001  F0CA         	movff	?___xxtofl,_rez_adc_U
  6872  002DF8  C002  F0CB         	movff	?___xxtofl+1,_rez_adc_U+1
  6873  002DFC  C003  F0CC         	movff	?___xxtofl+2,_rez_adc_U+2
  6874  002E00  C004  F0CD         	movff	?___xxtofl+3,_rez_adc_U+3
  6875                           
  6876                           ;mppt.c: 66:     tens=rez_adc_U*0.01953125;
  6877  002E04  C0CA  F00F         	movff	_rez_adc_U,___flmul@b
  6878  002E08  C0CB  F010         	movff	_rez_adc_U+1,___flmul@b+1
  6879  002E0C  C0CC  F011         	movff	_rez_adc_U+2,___flmul@b+2
  6880  002E10  C0CD  F012         	movff	_rez_adc_U+3,___flmul@b+3
  6881  002E14  0E00               	movlw	0
  6882  002E16  6E13               	movwf	___flmul@a,c
  6883  002E18  0E00               	movlw	0
  6884  002E1A  6E14               	movwf	___flmul@a+1,c
  6885  002E1C  0EA0               	movlw	160
  6886  002E1E  6E15               	movwf	___flmul@a+2,c
  6887  002E20  0E3C               	movlw	60
  6888  002E22  6E16               	movwf	___flmul@a+3,c
  6889  002E24  ECB6  F00E         	call	___flmul	;wreg free
  6890  002E28  C00F  F0C6         	movff	?___flmul,_tens
  6891  002E2C  C010  F0C7         	movff	?___flmul+1,_tens+1
  6892  002E30  C011  F0C8         	movff	?___flmul+2,_tens+2
  6893  002E34  C012  F0C9         	movff	?___flmul+3,_tens+3
  6894                           
  6895                           ;mppt.c: 67:     Uout=tens/0.25;
  6896  002E38  C0C6  F001         	movff	_tens,___fldiv@b
  6897  002E3C  C0C7  F002         	movff	_tens+1,___fldiv@b+1
  6898  002E40  C0C8  F003         	movff	_tens+2,___fldiv@b+2
  6899  002E44  C0C9  F004         	movff	_tens+3,___fldiv@b+3
  6900  002E48  0E00               	movlw	0
  6901  002E4A  6E05               	movwf	___fldiv@a,c
  6902  002E4C  0E00               	movlw	0
  6903  002E4E  6E06               	movwf	___fldiv@a+1,c
  6904  002E50  0E80               	movlw	128
  6905  002E52  6E07               	movwf	___fldiv@a+2,c
  6906  002E54  0E3E               	movlw	62
  6907  002E56  6E08               	movwf	___fldiv@a+3,c
  6908  002E58  EC7D  F013         	call	___fldiv	;wreg free
  6909  002E5C  C001  F0DA         	movff	?___fldiv,_Uout
  6910  002E60  C002  F0DB         	movff	?___fldiv+1,_Uout+1
  6911  002E64  C003  F0DC         	movff	?___fldiv+2,_Uout+2
  6912  002E68  C004  F0DD         	movff	?___fldiv+3,_Uout+3
  6913                           
  6914                           ;mppt.c: 68:     if(Uout>14.4)
  6915  002E6C  0E66               	movlw	102
  6916  002E6E  6E28               	movwf	___flge@ff1,c
  6917  002E70  0E66               	movlw	102
  6918  002E72  6E29               	movwf	___flge@ff1+1,c
  6919  002E74  0E66               	movlw	102
  6920  002E76  6E2A               	movwf	___flge@ff1+2,c
  6921  002E78  0E41               	movlw	65
  6922  002E7A  6E2B               	movwf	___flge@ff1+3,c
  6923  002E7C  C0DA  F02C         	movff	_Uout,___flge@ff2
  6924  002E80  C0DB  F02D         	movff	_Uout+1,___flge@ff2+1
  6925  002E84  C0DC  F02E         	movff	_Uout+2,___flge@ff2+2
  6926  002E88  C0DD  F02F         	movff	_Uout+3,___flge@ff2+3
  6927  002E8C  ECF0  F017         	call	___flge	;wreg free
  6928  002E90  B0D8               	btfsc	status,0,c
  6929  002E92  0012               	return	
  6930                           
  6931                           ;mppt.c: 69:     {;mppt.c: 70:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6932  002E94  0ED0               	movlw	208
  6933  002E96  6E34               	movwf	??_read_Uout& (0+255),c
  6934  002E98  0ECA               	movlw	202
  6935  002E9A                     u5397:
  6936  002E9A  2EE8               	decfsz	wreg,f,c
  6937  002E9C  D7FE               	bra	u5397
  6938  002E9E  2E34               	decfsz	??_read_Uout& (0+255),f,c
  6939  002EA0  D7FC               	bra	u5397
  6940                           
  6941                           ;mppt.c: 71:         CCPR1L=0;
  6942  002EA2  0E00               	movlw	0
  6943  002EA4  6EBE               	movwf	4030,c	;volatile
  6944                           
  6945                           ;mppt.c: 72:         CCPR2L=0;
  6946  002EA6  0E00               	movlw	0
  6947  002EA8  6E67               	movwf	3943,c	;volatile
  6948                           
  6949                           ;mppt.c: 73:         Lcd_Clear();
  6950  002EAA  ECB2  F01F         	call	_Lcd_Clear	;wreg free
  6951                           
  6952                           ;mppt.c: 74:         Lcd_Set_Cursor(1,1);
  6953  002EAE  0E01               	movlw	1
  6954  002EB0  6E0B               	movwf	Lcd_Set_Cursor@b,c
  6955  002EB2  0E01               	movlw	1
  6956  002EB4  EC20  F01E         	call	_Lcd_Set_Cursor
  6957                           
  6958                           ;mppt.c: 75:         Lcd_Write_String("Over Voltage");
  6959  002EB8  0E01               	movlw	low STR_6
  6960  002EBA  6E08               	movwf	Lcd_Write_String@a,c
  6961  002EBC  0E10               	movlw	high STR_6
  6962  002EBE  6E09               	movwf	Lcd_Write_String@a+1,c
  6963  002EC0  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  6964  002EC4                     l4639:
  6965                           
  6966                           ;mppt.c: 77:         {;mppt.c: 78:             _delay((unsigned long)((100)*(64000000/40
      +                          00.0)));
  6967  002EC4  0E09               	movlw	9
  6968  002EC6  6E35               	movwf	(??_read_Uout+1)& (0+255),c
  6969  002EC8  0E1E               	movlw	30
  6970  002ECA  6E34               	movwf	??_read_Uout& (0+255),c
  6971  002ECC  0EE4               	movlw	228
  6972  002ECE                     u5407:
  6973  002ECE  2EE8               	decfsz	wreg,f,c
  6974  002ED0  D7FE               	bra	u5407
  6975  002ED2  2E34               	decfsz	??_read_Uout& (0+255),f,c
  6976  002ED4  D7FC               	bra	u5407
  6977  002ED6  2E35               	decfsz	(??_read_Uout+1)& (0+255),f,c
  6978  002ED8  D7FA               	bra	u5407
  6979  002EDA  D000               	nop2	
  6980  002EDC  D7F3               	goto	l4639
  6981  002EDE                     __end_of_read_Uout:
  6982                           	opt callstack 0
  6983                           
  6984 ;; *************** function _read_Uin *****************
  6985 ;; Defined at:
  6986 ;;		line 94 in file "mppt.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;Total ram usage:        2 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    1
  7007 ;; This function calls:
  7008 ;;		___fldiv
  7009 ;;		___flmul
  7010 ;;		___xxtofl
  7011 ;; This function is called by:
  7012 ;;		_main
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text33
  7017  003236                     __ptext33:
  7018                           	opt callstack 0
  7019  003236                     _read_Uin:
  7020                           	opt callstack 29
  7021                           
  7022                           ;mppt.c: 96:     ADCON0=0b00001111;
  7023                           
  7024                           ;incstack = 0
  7025  003236  0E0F               	movlw	15
  7026  003238  6EC2               	movwf	4034,c	;volatile
  7027                           
  7028                           ;mppt.c: 97:     _delay((unsigned long)((10)*(64000000/4000.0)));
  7029  00323A  0ED0               	movlw	208
  7030  00323C  6E28               	movwf	??_read_Uin& (0+255),c
  7031  00323E  0ECA               	movlw	202
  7032  003240                     u5417:
  7033  003240  2EE8               	decfsz	wreg,f,c
  7034  003242  D7FE               	bra	u5417
  7035  003244  2E28               	decfsz	??_read_Uin& (0+255),f,c
  7036  003246  D7FC               	bra	u5417
  7037                           
  7038                           ;mppt.c: 98:     ADCON0bits.GO=1;
  7039  003248  82C2               	bsf	4034,1,c	;volatile
  7040                           
  7041                           ;mppt.c: 99:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7042  00324A  0E09               	movlw	9
  7043  00324C  6E29               	movwf	(??_read_Uin+1)& (0+255),c
  7044  00324E  0E1E               	movlw	30
  7045  003250  6E28               	movwf	??_read_Uin& (0+255),c
  7046  003252  0EE4               	movlw	228
  7047  003254                     u5427:
  7048  003254  2EE8               	decfsz	wreg,f,c
  7049  003256  D7FE               	bra	u5427
  7050  003258  2E28               	decfsz	??_read_Uin& (0+255),f,c
  7051  00325A  D7FC               	bra	u5427
  7052  00325C  2E29               	decfsz	(??_read_Uin+1)& (0+255),f,c
  7053  00325E  D7FA               	bra	u5427
  7054  003260  D000               	nop2	
  7055                           
  7056                           ;mppt.c: 100:     rez_adc_U=ADRESH;
  7057  003262  50C4               	movf	4036,w,c	;volatile
  7058  003264  6E01               	movwf	___xxtofl@val,c
  7059  003266  6A02               	clrf	___xxtofl@val+1,c
  7060  003268  6A03               	clrf	___xxtofl@val+2,c
  7061  00326A  6A04               	clrf	___xxtofl@val+3,c
  7062  00326C  0E00               	movlw	0
  7063  00326E  EC3C  F016         	call	___xxtofl
  7064  003272  C001  F0CA         	movff	?___xxtofl,_rez_adc_U
  7065  003276  C002  F0CB         	movff	?___xxtofl+1,_rez_adc_U+1
  7066  00327A  C003  F0CC         	movff	?___xxtofl+2,_rez_adc_U+2
  7067  00327E  C004  F0CD         	movff	?___xxtofl+3,_rez_adc_U+3
  7068                           
  7069                           ;mppt.c: 101:     tens=rez_adc_U*0.01953125;
  7070  003282  C0CA  F00F         	movff	_rez_adc_U,___flmul@b
  7071  003286  C0CB  F010         	movff	_rez_adc_U+1,___flmul@b+1
  7072  00328A  C0CC  F011         	movff	_rez_adc_U+2,___flmul@b+2
  7073  00328E  C0CD  F012         	movff	_rez_adc_U+3,___flmul@b+3
  7074  003292  0E00               	movlw	0
  7075  003294  6E13               	movwf	___flmul@a,c
  7076  003296  0E00               	movlw	0
  7077  003298  6E14               	movwf	___flmul@a+1,c
  7078  00329A  0EA0               	movlw	160
  7079  00329C  6E15               	movwf	___flmul@a+2,c
  7080  00329E  0E3C               	movlw	60
  7081  0032A0  6E16               	movwf	___flmul@a+3,c
  7082  0032A2  ECB6  F00E         	call	___flmul	;wreg free
  7083  0032A6  C00F  F0C6         	movff	?___flmul,_tens
  7084  0032AA  C010  F0C7         	movff	?___flmul+1,_tens+1
  7085  0032AE  C011  F0C8         	movff	?___flmul+2,_tens+2
  7086  0032B2  C012  F0C9         	movff	?___flmul+3,_tens+3
  7087                           
  7088                           ;mppt.c: 102:     Uin=tens/0.2;
  7089  0032B6  C0C6  F001         	movff	_tens,___fldiv@b
  7090  0032BA  C0C7  F002         	movff	_tens+1,___fldiv@b+1
  7091  0032BE  C0C8  F003         	movff	_tens+2,___fldiv@b+2
  7092  0032C2  C0C9  F004         	movff	_tens+3,___fldiv@b+3
  7093  0032C6  0ECD               	movlw	205
  7094  0032C8  6E05               	movwf	___fldiv@a,c
  7095  0032CA  0ECC               	movlw	204
  7096  0032CC  6E06               	movwf	___fldiv@a+1,c
  7097  0032CE  0E4C               	movlw	76
  7098  0032D0  6E07               	movwf	___fldiv@a+2,c
  7099  0032D2  0E3E               	movlw	62
  7100  0032D4  6E08               	movwf	___fldiv@a+3,c
  7101  0032D6  EC7D  F013         	call	___fldiv	;wreg free
  7102  0032DA  C001  F0DE         	movff	?___fldiv,_Uin
  7103  0032DE  C002  F0DF         	movff	?___fldiv+1,_Uin+1
  7104  0032E2  C003  F0E0         	movff	?___fldiv+2,_Uin+2
  7105  0032E6  C004  F0E1         	movff	?___fldiv+3,_Uin+3
  7106  0032EA  0012               	return		;funcret
  7107  0032EC                     __end_of_read_Uin:
  7108                           	opt callstack 0
  7109                           
  7110 ;; *************** function ___fldiv *****************
  7111 ;; Defined at:
  7112 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  b               4    0[COMRAM] void 
  7115 ;;  a               4    4[COMRAM] void 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;  grs             4   19[COMRAM] unsigned long 
  7118 ;;  rem             4   12[COMRAM] unsigned long 
  7119 ;;  new_exp         2   17[COMRAM] short 
  7120 ;;  aexp            1   24[COMRAM] unsigned char 
  7121 ;;  bexp            1   23[COMRAM] unsigned char 
  7122 ;;  sign            1   16[COMRAM] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  4    0[COMRAM] unsigned char 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;Total ram usage:       25 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_read_Uout
  7142 ;;		_read_Uin
  7143 ;;		_efgtoa
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text34
  7148  0026FA                     __ptext34:
  7149                           	opt callstack 0
  7150  0026FA                     ___fldiv:
  7151                           	opt callstack 25
  7152                           
  7153                           ;incstack = 0
  7154  0026FA  5004               	movf	___fldiv@b+3,w,c
  7155  0026FC  0B80               	andlw	128
  7156  0026FE  6E11               	movwf	___fldiv@sign,c
  7157  002700  5004               	movf	___fldiv@b+3,w,c
  7158  002702  2404               	addwf	___fldiv@b+3,w,c
  7159  002704  6E18               	movwf	___fldiv@bexp,c
  7160  002706  BE03               	btfsc	___fldiv@b+2,7,c
  7161  002708  8018               	bsf	___fldiv@bexp,0,c
  7162  00270A  5018               	movf	___fldiv@bexp,w,c
  7163  00270C  B4D8               	btfsc	status,2,c
  7164  00270E  D00D               	goto	l3479
  7165  002710  2818               	incf	___fldiv@bexp,w,c
  7166  002712  A4D8               	btfss	status,2,c
  7167  002714  D008               	goto	l3475
  7168  002716  0E00               	movlw	0
  7169  002718  6E01               	movwf	___fldiv@b,c
  7170  00271A  0E00               	movlw	0
  7171  00271C  6E02               	movwf	___fldiv@b+1,c
  7172  00271E  0E00               	movlw	0
  7173  002720  6E03               	movwf	___fldiv@b+2,c
  7174  002722  0E00               	movlw	0
  7175  002724  6E04               	movwf	___fldiv@b+3,c
  7176  002726                     l3475:
  7177  002726  8E03               	bsf	___fldiv@b+2,7,c
  7178  002728  D006               	goto	L10
  7179  00272A                     l3479:
  7180  00272A  0E00               	movlw	0
  7181  00272C  6E01               	movwf	___fldiv@b,c
  7182  00272E  0E00               	movlw	0
  7183  002730  6E02               	movwf	___fldiv@b+1,c
  7184  002732  0E00               	movlw	0
  7185  002734  6E03               	movwf	___fldiv@b+2,c
  7186  002736                     L10:
  7187  002736  0E00               	movlw	0
  7188  002738  6E04               	movwf	___fldiv@b+3,c
  7189  00273A  5008               	movf	___fldiv@a+3,w,c
  7190  00273C  0B80               	andlw	128
  7191  00273E  1A11               	xorwf	___fldiv@sign,f,c
  7192  002740  5008               	movf	___fldiv@a+3,w,c
  7193  002742  2408               	addwf	___fldiv@a+3,w,c
  7194  002744  6E19               	movwf	___fldiv@aexp,c
  7195  002746  BE07               	btfsc	___fldiv@a+2,7,c
  7196  002748  8019               	bsf	___fldiv@aexp,0,c
  7197  00274A  5019               	movf	___fldiv@aexp,w,c
  7198  00274C  B4D8               	btfsc	status,2,c
  7199  00274E  D00D               	goto	l3499
  7200  002750  2819               	incf	___fldiv@aexp,w,c
  7201  002752  A4D8               	btfss	status,2,c
  7202  002754  D008               	goto	l3495
  7203  002756  0E00               	movlw	0
  7204  002758  6E05               	movwf	___fldiv@a,c
  7205  00275A  0E00               	movlw	0
  7206  00275C  6E06               	movwf	___fldiv@a+1,c
  7207  00275E  0E00               	movlw	0
  7208  002760  6E07               	movwf	___fldiv@a+2,c
  7209  002762  0E00               	movlw	0
  7210  002764  6E08               	movwf	___fldiv@a+3,c
  7211  002766                     l3495:
  7212  002766  8E07               	bsf	___fldiv@a+2,7,c
  7213  002768  D006               	goto	L11
  7214  00276A                     l3499:
  7215  00276A  0E00               	movlw	0
  7216  00276C  6E05               	movwf	___fldiv@a,c
  7217  00276E  0E00               	movlw	0
  7218  002770  6E06               	movwf	___fldiv@a+1,c
  7219  002772  0E00               	movlw	0
  7220  002774  6E07               	movwf	___fldiv@a+2,c
  7221  002776                     L11:
  7222  002776  0E00               	movlw	0
  7223  002778  6E08               	movwf	___fldiv@a+3,c
  7224  00277A  5005               	movf	___fldiv@a,w,c
  7225  00277C  1006               	iorwf	___fldiv@a+1,w,c
  7226  00277E  1007               	iorwf	___fldiv@a+2,w,c
  7227  002780  1008               	iorwf	___fldiv@a+3,w,c
  7228  002782  A4D8               	btfss	status,2,c
  7229  002784  D017               	goto	l3513
  7230  002786  0E00               	movlw	0
  7231  002788  6E01               	movwf	___fldiv@b,c
  7232  00278A  0E00               	movlw	0
  7233  00278C  6E02               	movwf	___fldiv@b+1,c
  7234  00278E  0E00               	movlw	0
  7235  002790  6E03               	movwf	___fldiv@b+2,c
  7236  002792  0E00               	movlw	0
  7237  002794  6E04               	movwf	___fldiv@b+3,c
  7238  002796  0E80               	movlw	128
  7239  002798  1203               	iorwf	___fldiv@b+2,f,c
  7240  00279A  0E7F               	movlw	127
  7241  00279C  1204               	iorwf	___fldiv@b+3,f,c
  7242  00279E                     l3507:
  7243  00279E  5011               	movf	___fldiv@sign,w,c
  7244  0027A0  1204               	iorwf	___fldiv@b+3,f,c
  7245  0027A2  C001  F001         	movff	___fldiv@b,?___fldiv
  7246  0027A6  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7247  0027AA  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7248  0027AE  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7249  0027B2  0012               	return	
  7250  0027B4                     l3513:
  7251  0027B4  5018               	movf	___fldiv@bexp,w,c
  7252  0027B6  A4D8               	btfss	status,2,c
  7253  0027B8  D009               	goto	l3521
  7254  0027BA  0E00               	movlw	0
  7255  0027BC  6E01               	movwf	?___fldiv,c
  7256  0027BE  0E00               	movlw	0
  7257  0027C0  6E02               	movwf	?___fldiv+1,c
  7258  0027C2  0E00               	movlw	0
  7259  0027C4  6E03               	movwf	?___fldiv+2,c
  7260  0027C6  0E00               	movlw	0
  7261  0027C8  6E04               	movwf	?___fldiv+3,c
  7262  0027CA  0012               	return	
  7263  0027CC                     l3521:
  7264  0027CC  5019               	movf	___fldiv@aexp,w,c
  7265  0027CE  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7266  0027D2  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7267  0027D4  5E09               	subwf	??___fldiv,f,c
  7268  0027D6  0E00               	movlw	0
  7269  0027D8  5A0A               	subwfb	??___fldiv+1,f,c
  7270  0027DA  0E7F               	movlw	127
  7271  0027DC  2409               	addwf	??___fldiv,w,c
  7272  0027DE  6E12               	movwf	___fldiv@new_exp,c
  7273  0027E0  0E00               	movlw	0
  7274  0027E2  200A               	addwfc	??___fldiv+1,w,c
  7275  0027E4  6E13               	movwf	___fldiv@new_exp+1,c
  7276  0027E6  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7277  0027EA  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7278  0027EE  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7279  0027F2  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7280  0027F6  0E00               	movlw	0
  7281  0027F8  6E01               	movwf	___fldiv@b,c
  7282  0027FA  0E00               	movlw	0
  7283  0027FC  6E02               	movwf	___fldiv@b+1,c
  7284  0027FE  0E00               	movlw	0
  7285  002800  6E03               	movwf	___fldiv@b+2,c
  7286  002802  0E00               	movlw	0
  7287  002804  6E04               	movwf	___fldiv@b+3,c
  7288  002806  0E00               	movlw	0
  7289  002808  6E14               	movwf	___fldiv@grs,c
  7290  00280A  0E00               	movlw	0
  7291  00280C  6E15               	movwf	___fldiv@grs+1,c
  7292  00280E  0E00               	movlw	0
  7293  002810  6E16               	movwf	___fldiv@grs+2,c
  7294  002812  0E00               	movlw	0
  7295  002814  6E17               	movwf	___fldiv@grs+3,c
  7296  002816  0E00               	movlw	0
  7297  002818  6E19               	movwf	___fldiv@aexp,c
  7298  00281A  D028               	goto	l1107
  7299  00281C                     l3531:
  7300  00281C  5019               	movf	___fldiv@aexp,w,c
  7301  00281E  B4D8               	btfsc	status,2,c
  7302  002820  D011               	goto	l3539
  7303  002822  90D8               	bcf	status,0,c
  7304  002824  360D               	rlcf	___fldiv@rem,f,c
  7305  002826  360E               	rlcf	___fldiv@rem+1,f,c
  7306  002828  360F               	rlcf	___fldiv@rem+2,f,c
  7307  00282A  3610               	rlcf	___fldiv@rem+3,f,c
  7308  00282C  90D8               	bcf	status,0,c
  7309  00282E  3601               	rlcf	___fldiv@b,f,c
  7310  002830  3602               	rlcf	___fldiv@b+1,f,c
  7311  002832  3603               	rlcf	___fldiv@b+2,f,c
  7312  002834  3604               	rlcf	___fldiv@b+3,f,c
  7313  002836  BE17               	btfsc	___fldiv@grs+3,7,c
  7314  002838  8001               	bsf	___fldiv@b,0,c
  7315  00283A  90D8               	bcf	status,0,c
  7316  00283C  3614               	rlcf	___fldiv@grs,f,c
  7317  00283E  3615               	rlcf	___fldiv@grs+1,f,c
  7318  002840  3616               	rlcf	___fldiv@grs+2,f,c
  7319  002842  3617               	rlcf	___fldiv@grs+3,f,c
  7320  002844                     l3539:
  7321  002844  5005               	movf	___fldiv@a,w,c
  7322  002846  5C0D               	subwf	___fldiv@rem,w,c
  7323  002848  5006               	movf	___fldiv@a+1,w,c
  7324  00284A  580E               	subwfb	___fldiv@rem+1,w,c
  7325  00284C  5007               	movf	___fldiv@a+2,w,c
  7326  00284E  580F               	subwfb	___fldiv@rem+2,w,c
  7327  002850  5008               	movf	___fldiv@a+3,w,c
  7328  002852  5810               	subwfb	___fldiv@rem+3,w,c
  7329  002854  A0D8               	btfss	status,0,c
  7330  002856  D009               	goto	l3545
  7331  002858  8C17               	bsf	___fldiv@grs+3,6,c
  7332  00285A  5005               	movf	___fldiv@a,w,c
  7333  00285C  5E0D               	subwf	___fldiv@rem,f,c
  7334  00285E  5006               	movf	___fldiv@a+1,w,c
  7335  002860  5A0E               	subwfb	___fldiv@rem+1,f,c
  7336  002862  5007               	movf	___fldiv@a+2,w,c
  7337  002864  5A0F               	subwfb	___fldiv@rem+2,f,c
  7338  002866  5008               	movf	___fldiv@a+3,w,c
  7339  002868  5A10               	subwfb	___fldiv@rem+3,f,c
  7340  00286A                     l3545:
  7341  00286A  2A19               	incf	___fldiv@aexp,f,c
  7342  00286C                     l1107:
  7343  00286C  0E19               	movlw	25
  7344  00286E  6419               	cpfsgt	___fldiv@aexp,c
  7345  002870  D7D5               	goto	l3531
  7346  002872  500D               	movf	___fldiv@rem,w,c
  7347  002874  100E               	iorwf	___fldiv@rem+1,w,c
  7348  002876  100F               	iorwf	___fldiv@rem+2,w,c
  7349  002878  1010               	iorwf	___fldiv@rem+3,w,c
  7350  00287A  B4D8               	btfsc	status,2,c
  7351  00287C  D011               	goto	l3557
  7352  00287E  8014               	bsf	___fldiv@grs,0,c
  7353  002880  D00F               	goto	l3557
  7354  002882                     l3551:
  7355  002882  90D8               	bcf	status,0,c
  7356  002884  3601               	rlcf	___fldiv@b,f,c
  7357  002886  3602               	rlcf	___fldiv@b+1,f,c
  7358  002888  3603               	rlcf	___fldiv@b+2,f,c
  7359  00288A  3604               	rlcf	___fldiv@b+3,f,c
  7360  00288C  BE17               	btfsc	___fldiv@grs+3,7,c
  7361  00288E  8001               	bsf	___fldiv@b,0,c
  7362  002890  90D8               	bcf	status,0,c
  7363  002892  3614               	rlcf	___fldiv@grs,f,c
  7364  002894  3615               	rlcf	___fldiv@grs+1,f,c
  7365  002896  3616               	rlcf	___fldiv@grs+2,f,c
  7366  002898  3617               	rlcf	___fldiv@grs+3,f,c
  7367  00289A  0612               	decf	___fldiv@new_exp,f,c
  7368  00289C  A0D8               	btfss	status,0,c
  7369  00289E  0613               	decf	___fldiv@new_exp+1,f,c
  7370  0028A0                     l3557:
  7371  0028A0  AE03               	btfss	___fldiv@b+2,7,c
  7372  0028A2  D7EF               	goto	l3551
  7373  0028A4  0E00               	movlw	0
  7374  0028A6  6E19               	movwf	___fldiv@aexp,c
  7375  0028A8  AE17               	btfss	___fldiv@grs+3,7,c
  7376  0028AA  D017               	goto	l1118
  7377  0028AC  0EFF               	movlw	255
  7378  0028AE  1414               	andwf	___fldiv@grs,w,c
  7379  0028B0  6E09               	movwf	??___fldiv& (0+255),c
  7380  0028B2  0EFF               	movlw	255
  7381  0028B4  1415               	andwf	___fldiv@grs+1,w,c
  7382  0028B6  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7383  0028B8  0EFF               	movlw	255
  7384  0028BA  1416               	andwf	___fldiv@grs+2,w,c
  7385  0028BC  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7386  0028BE  0E7F               	movlw	127
  7387  0028C0  1417               	andwf	___fldiv@grs+3,w,c
  7388  0028C2  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7389  0028C4  5009               	movf	??___fldiv,w,c
  7390  0028C6  100A               	iorwf	??___fldiv+1,w,c
  7391  0028C8  100B               	iorwf	??___fldiv+2,w,c
  7392  0028CA  100C               	iorwf	??___fldiv+3,w,c
  7393  0028CC  B4D8               	btfsc	status,2,c
  7394  0028CE  D003               	goto	l1119
  7395  0028D0                     u3590:
  7396  0028D0  0E01               	movlw	1
  7397  0028D2  6E19               	movwf	___fldiv@aexp,c
  7398  0028D4  D002               	goto	l1118
  7399  0028D6                     l1119:
  7400  0028D6  B001               	btfsc	___fldiv@b,0,c
  7401  0028D8  D7FB               	goto	u3590
  7402  0028DA                     l1118:
  7403  0028DA  5019               	movf	___fldiv@aexp,w,c
  7404  0028DC  B4D8               	btfsc	status,2,c
  7405  0028DE  D01F               	goto	l3577
  7406  0028E0  0E01               	movlw	1
  7407  0028E2  2601               	addwf	___fldiv@b,f,c
  7408  0028E4  0E00               	movlw	0
  7409  0028E6  2202               	addwfc	___fldiv@b+1,f,c
  7410  0028E8  2203               	addwfc	___fldiv@b+2,f,c
  7411  0028EA  2204               	addwfc	___fldiv@b+3,f,c
  7412  0028EC  A004               	btfss	___fldiv@b+3,0,c
  7413  0028EE  D017               	goto	l3577
  7414  0028F0  C001  F009         	movff	___fldiv@b,??___fldiv
  7415  0028F4  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7416  0028F8  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7417  0028FC  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7418  002900  340C               	rlcf	??___fldiv+3,w,c
  7419  002902  320C               	rrcf	??___fldiv+3,f,c
  7420  002904  320B               	rrcf	??___fldiv+2,f,c
  7421  002906  320A               	rrcf	??___fldiv+1,f,c
  7422  002908  3209               	rrcf	??___fldiv,f,c
  7423  00290A  C009  F001         	movff	??___fldiv,___fldiv@b
  7424  00290E  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7425  002912  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7426  002916  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7427  00291A  4A12               	infsnz	___fldiv@new_exp,f,c
  7428  00291C  2A13               	incf	___fldiv@new_exp+1,f,c
  7429  00291E                     l3577:
  7430  00291E  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7431  002920  D010               	goto	l3581
  7432  002922  5013               	movf	___fldiv@new_exp+1,w,c
  7433  002924  E103               	bnz	u3630
  7434  002926  2812               	incf	___fldiv@new_exp,w,c
  7435  002928  A0D8               	btfss	status,0,c
  7436  00292A  D00B               	goto	l3581
  7437  00292C                     u3630:
  7438  00292C  0E00               	movlw	0
  7439  00292E  6E13               	movwf	___fldiv@new_exp+1,c
  7440  002930  6812               	setf	___fldiv@new_exp,c
  7441  002932  0E00               	movlw	0
  7442  002934  6E01               	movwf	___fldiv@b,c
  7443  002936  0E00               	movlw	0
  7444  002938  6E02               	movwf	___fldiv@b+1,c
  7445  00293A  0E00               	movlw	0
  7446  00293C  6E03               	movwf	___fldiv@b+2,c
  7447  00293E  0E00               	movlw	0
  7448  002940  6E04               	movwf	___fldiv@b+3,c
  7449  002942                     l3581:
  7450  002942  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7451  002944  D005               	goto	u3640
  7452  002946  5013               	movf	___fldiv@new_exp+1,w,c
  7453  002948  E111               	bnz	l3585
  7454  00294A  0412               	decf	___fldiv@new_exp,w,c
  7455  00294C  B0D8               	btfsc	status,0,c
  7456  00294E  D00E               	goto	l3585
  7457  002950                     u3640:
  7458  002950  0E00               	movlw	0
  7459  002952  6E13               	movwf	___fldiv@new_exp+1,c
  7460  002954  0E00               	movlw	0
  7461  002956  6E12               	movwf	___fldiv@new_exp,c
  7462  002958  0E00               	movlw	0
  7463  00295A  6E01               	movwf	___fldiv@b,c
  7464  00295C  0E00               	movlw	0
  7465  00295E  6E02               	movwf	___fldiv@b+1,c
  7466  002960  0E00               	movlw	0
  7467  002962  6E03               	movwf	___fldiv@b+2,c
  7468  002964  0E00               	movlw	0
  7469  002966  6E04               	movwf	___fldiv@b+3,c
  7470  002968  0E00               	movlw	0
  7471  00296A  6E11               	movwf	___fldiv@sign,c
  7472  00296C                     l3585:
  7473  00296C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7474  002970  A018               	btfss	___fldiv@bexp,0,c
  7475  002972  D002               	goto	l3591
  7476  002974  8E03               	bsf	___fldiv@b+2,7,c
  7477  002976  D001               	goto	l3593
  7478  002978                     l3591:
  7479  002978  9E03               	bcf	___fldiv@b+2,7,c
  7480  00297A                     l3593:
  7481  00297A  90D8               	bcf	status,0,c
  7482  00297C  3018               	rrcf	___fldiv@bexp,w,c
  7483  00297E  6E04               	movwf	___fldiv@b+3,c
  7484  002980  D70E               	goto	l3507
  7485  002982                     __end_of___fldiv:
  7486                           	opt callstack 0
  7487                           
  7488 ;; *************** function _read_Iout *****************
  7489 ;; Defined at:
  7490 ;;		line 22 in file "mppt.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;Total ram usage:        2 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    5
  7511 ;; This function calls:
  7512 ;;		_Lcd_Clear
  7513 ;;		_Lcd_Set_Cursor
  7514 ;;		_Lcd_Write_String
  7515 ;;		___flge
  7516 ;;		___flmul
  7517 ;;		___xxtofl
  7518 ;; This function is called by:
  7519 ;;		_main
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text35
  7524  002EDE                     __ptext35:
  7525                           	opt callstack 0
  7526  002EDE                     _read_Iout:
  7527                           	opt callstack 25
  7528                           
  7529                           ;mppt.c: 24:     ADCON0=0b00001011;
  7530                           
  7531                           ;incstack = 0
  7532  002EDE  0E0B               	movlw	11
  7533  002EE0  6EC2               	movwf	4034,c	;volatile
  7534                           
  7535                           ;mppt.c: 25:     _delay((unsigned long)((10)*(64000000/4000.0)));
  7536  002EE2  0ED0               	movlw	208
  7537  002EE4  6E34               	movwf	??_read_Iout& (0+255),c
  7538  002EE6  0ECA               	movlw	202
  7539  002EE8                     u5437:
  7540  002EE8  2EE8               	decfsz	wreg,f,c
  7541  002EEA  D7FE               	bra	u5437
  7542  002EEC  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7543  002EEE  D7FC               	bra	u5437
  7544                           
  7545                           ;mppt.c: 26:     ADCON0bits.GO=1;
  7546  002EF0  82C2               	bsf	4034,1,c	;volatile
  7547                           
  7548                           ;mppt.c: 27:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7549  002EF2  0E09               	movlw	9
  7550  002EF4  6E35               	movwf	(??_read_Iout+1)& (0+255),c
  7551  002EF6  0E1E               	movlw	30
  7552  002EF8  6E34               	movwf	??_read_Iout& (0+255),c
  7553  002EFA  0EE4               	movlw	228
  7554  002EFC                     u5447:
  7555  002EFC  2EE8               	decfsz	wreg,f,c
  7556  002EFE  D7FE               	bra	u5447
  7557  002F00  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7558  002F02  D7FC               	bra	u5447
  7559  002F04  2E35               	decfsz	(??_read_Iout+1)& (0+255),f,c
  7560  002F06  D7FA               	bra	u5447
  7561  002F08  D000               	nop2	
  7562                           
  7563                           ;mppt.c: 28:     rez_adc_A=ADRESH;
  7564  002F0A  50C4               	movf	4036,w,c	;volatile
  7565  002F0C  6E01               	movwf	___xxtofl@val,c
  7566  002F0E  6A02               	clrf	___xxtofl@val+1,c
  7567  002F10  6A03               	clrf	___xxtofl@val+2,c
  7568  002F12  6A04               	clrf	___xxtofl@val+3,c
  7569  002F14  0E00               	movlw	0
  7570  002F16  EC3C  F016         	call	___xxtofl
  7571  002F1A  C001  F0D2         	movff	?___xxtofl,_rez_adc_A
  7572  002F1E  C002  F0D3         	movff	?___xxtofl+1,_rez_adc_A+1
  7573  002F22  C003  F0D4         	movff	?___xxtofl+2,_rez_adc_A+2
  7574  002F26  C004  F0D5         	movff	?___xxtofl+3,_rez_adc_A+3
  7575                           
  7576                           ;mppt.c: 29:     tens_A=rez_adc_A*0.0181372549019608;
  7577  002F2A  C0D2  F00F         	movff	_rez_adc_A,___flmul@b
  7578  002F2E  C0D3  F010         	movff	_rez_adc_A+1,___flmul@b+1
  7579  002F32  C0D4  F011         	movff	_rez_adc_A+2,___flmul@b+2
  7580  002F36  C0D5  F012         	movff	_rez_adc_A+3,___flmul@b+3
  7581  002F3A  0E95               	movlw	149
  7582  002F3C  6E13               	movwf	___flmul@a,c
  7583  002F3E  0E94               	movlw	148
  7584  002F40  6E14               	movwf	___flmul@a+1,c
  7585  002F42  0E94               	movlw	148
  7586  002F44  6E15               	movwf	___flmul@a+2,c
  7587  002F46  0E3C               	movlw	60
  7588  002F48  6E16               	movwf	___flmul@a+3,c
  7589  002F4A  ECB6  F00E         	call	___flmul	;wreg free
  7590  002F4E  C00F  F0CE         	movff	?___flmul,_tens_A
  7591  002F52  C010  F0CF         	movff	?___flmul+1,_tens_A+1
  7592  002F56  C011  F0D0         	movff	?___flmul+2,_tens_A+2
  7593  002F5A  C012  F0D1         	movff	?___flmul+3,_tens_A+3
  7594                           
  7595                           ;mppt.c: 30:     Iout=tens_A;
  7596  002F5E  C0CE  F0D6         	movff	_tens_A,_Iout
  7597  002F62  C0CF  F0D7         	movff	_tens_A+1,_Iout+1
  7598  002F66  C0D0  F0D8         	movff	_tens_A+2,_Iout+2
  7599  002F6A  C0D1  F0D9         	movff	_tens_A+3,_Iout+3
  7600                           
  7601                           ;mppt.c: 31:     if(Iout>2)
  7602  002F6E  0E00               	movlw	0
  7603  002F70  6E28               	movwf	___flge@ff1,c
  7604  002F72  0E00               	movlw	0
  7605  002F74  6E29               	movwf	___flge@ff1+1,c
  7606  002F76  0E00               	movlw	0
  7607  002F78  6E2A               	movwf	___flge@ff1+2,c
  7608  002F7A  0E40               	movlw	64
  7609  002F7C  6E2B               	movwf	___flge@ff1+3,c
  7610  002F7E  C0D6  F02C         	movff	_Iout,___flge@ff2
  7611  002F82  C0D7  F02D         	movff	_Iout+1,___flge@ff2+1
  7612  002F86  C0D8  F02E         	movff	_Iout+2,___flge@ff2+2
  7613  002F8A  C0D9  F02F         	movff	_Iout+3,___flge@ff2+3
  7614  002F8E  ECF0  F017         	call	___flge	;wreg free
  7615  002F92  B0D8               	btfsc	status,0,c
  7616  002F94  0012               	return	
  7617                           
  7618                           ;mppt.c: 32:     {;mppt.c: 33:         _delay((unsigned long)((10)*(64000000/4000.0)));
  7619  002F96  0ED0               	movlw	208
  7620  002F98  6E34               	movwf	??_read_Iout& (0+255),c
  7621  002F9A  0ECA               	movlw	202
  7622  002F9C                     u5457:
  7623  002F9C  2EE8               	decfsz	wreg,f,c
  7624  002F9E  D7FE               	bra	u5457
  7625  002FA0  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7626  002FA2  D7FC               	bra	u5457
  7627                           
  7628                           ;mppt.c: 34:         CCPR1L=0;
  7629  002FA4  0E00               	movlw	0
  7630  002FA6  6EBE               	movwf	4030,c	;volatile
  7631                           
  7632                           ;mppt.c: 35:         CCPR2L=0;
  7633  002FA8  0E00               	movlw	0
  7634  002FAA  6E67               	movwf	3943,c	;volatile
  7635                           
  7636                           ;mppt.c: 36:         Lcd_Clear();
  7637  002FAC  ECB2  F01F         	call	_Lcd_Clear	;wreg free
  7638                           
  7639                           ;mppt.c: 37:         Lcd_Set_Cursor(1,1);
  7640  002FB0  0E01               	movlw	1
  7641  002FB2  6E0B               	movwf	Lcd_Set_Cursor@b,c
  7642  002FB4  0E01               	movlw	1
  7643  002FB6  EC20  F01E         	call	_Lcd_Set_Cursor
  7644                           
  7645                           ;mppt.c: 38:         Lcd_Write_String("Over Current");
  7646  002FBA  0E0E               	movlw	low STR_2
  7647  002FBC  6E08               	movwf	Lcd_Write_String@a,c
  7648  002FBE  0E10               	movlw	high STR_2
  7649  002FC0  6E09               	movwf	Lcd_Write_String@a+1,c
  7650  002FC2  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  7651  002FC6                     l4679:
  7652                           
  7653                           ;mppt.c: 40:         {;mppt.c: 41:             _delay((unsigned long)((100)*(64000000/40
      +                          00.0)));
  7654  002FC6  0E09               	movlw	9
  7655  002FC8  6E35               	movwf	(??_read_Iout+1)& (0+255),c
  7656  002FCA  0E1E               	movlw	30
  7657  002FCC  6E34               	movwf	??_read_Iout& (0+255),c
  7658  002FCE  0EE4               	movlw	228
  7659  002FD0                     u5467:
  7660  002FD0  2EE8               	decfsz	wreg,f,c
  7661  002FD2  D7FE               	bra	u5467
  7662  002FD4  2E34               	decfsz	??_read_Iout& (0+255),f,c
  7663  002FD6  D7FC               	bra	u5467
  7664  002FD8  2E35               	decfsz	(??_read_Iout+1)& (0+255),f,c
  7665  002FDA  D7FA               	bra	u5467
  7666  002FDC  D000               	nop2	
  7667  002FDE  D7F3               	goto	l4679
  7668  002FE0                     __end_of_read_Iout:
  7669                           	opt callstack 0
  7670                           
  7671 ;; *************** function ___xxtofl *****************
  7672 ;; Defined at:
  7673 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  sign            1    wreg     unsigned char 
  7676 ;;  val             4    0[COMRAM] long 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  sign            1    8[COMRAM] unsigned char 
  7679 ;;  arg             4   10[COMRAM] unsigned long 
  7680 ;;  exp             1    9[COMRAM] unsigned char 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  4    0[COMRAM] unsigned char 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2, status,0
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7693 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7694 ;;Total ram usage:       14 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_read_Iout
  7700 ;;		_read_Uout
  7701 ;;		_read_Uin
  7702 ;;		_set_boost
  7703 ;;		_set_buck
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text36
  7708  002C78                     __ptext36:
  7709                           	opt callstack 0
  7710  002C78                     ___xxtofl:
  7711                           	opt callstack 29
  7712                           
  7713                           ;incstack = 0
  7714                           ;___xxtofl@sign stored from wreg
  7715  002C78  6E09               	movwf	___xxtofl@sign,c
  7716  002C7A  5009               	movf	___xxtofl@sign,w,c
  7717  002C7C  A4D8               	btfss	status,2,c
  7718  002C7E  AE04               	btfss	___xxtofl@val+3,7,c
  7719  002C80  D01A               	goto	l1178
  7720  002C82  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7721  002C86  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7722  002C8A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7723  002C8E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7724  002C92  1E05               	comf	??___xxtofl,f,c
  7725  002C94  1E06               	comf	??___xxtofl+1,f,c
  7726  002C96  1E07               	comf	??___xxtofl+2,f,c
  7727  002C98  1E08               	comf	??___xxtofl+3,f,c
  7728  002C9A  2A05               	incf	??___xxtofl,f,c
  7729  002C9C  0E00               	movlw	0
  7730  002C9E  2206               	addwfc	??___xxtofl+1,f,c
  7731  002CA0  2207               	addwfc	??___xxtofl+2,f,c
  7732  002CA2  2208               	addwfc	??___xxtofl+3,f,c
  7733  002CA4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7734  002CA8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7735  002CAC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7736  002CB0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7737  002CB4  D008               	goto	l4517
  7738  002CB6                     l1178:
  7739  002CB6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7740  002CBA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7741  002CBE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7742  002CC2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7743  002CC6                     l4517:
  7744  002CC6  5001               	movf	___xxtofl@val,w,c
  7745  002CC8  1002               	iorwf	___xxtofl@val+1,w,c
  7746  002CCA  1003               	iorwf	___xxtofl@val+2,w,c
  7747  002CCC  1004               	iorwf	___xxtofl@val+3,w,c
  7748  002CCE  A4D8               	btfss	status,2,c
  7749  002CD0  D009               	goto	l4523
  7750  002CD2  0E00               	movlw	0
  7751  002CD4  6E01               	movwf	?___xxtofl,c
  7752  002CD6  0E00               	movlw	0
  7753  002CD8  6E02               	movwf	?___xxtofl+1,c
  7754  002CDA  0E00               	movlw	0
  7755  002CDC  6E03               	movwf	?___xxtofl+2,c
  7756  002CDE  0E00               	movlw	0
  7757  002CE0  6E04               	movwf	?___xxtofl+3,c
  7758  002CE2  0012               	return	
  7759  002CE4                     l4523:
  7760  002CE4  0E96               	movlw	150
  7761  002CE6  6E0A               	movwf	___xxtofl@exp,c
  7762  002CE8  D006               	goto	l4527
  7763  002CEA                     l4525:
  7764  002CEA  2A0A               	incf	___xxtofl@exp,f,c
  7765  002CEC  90D8               	bcf	status,0,c
  7766  002CEE  320E               	rrcf	___xxtofl@arg+3,f,c
  7767  002CF0  320D               	rrcf	___xxtofl@arg+2,f,c
  7768  002CF2  320C               	rrcf	___xxtofl@arg+1,f,c
  7769  002CF4  320B               	rrcf	___xxtofl@arg,f,c
  7770  002CF6                     l4527:
  7771  002CF6  0E00               	movlw	0
  7772  002CF8  140B               	andwf	___xxtofl@arg,w,c
  7773  002CFA  6E05               	movwf	??___xxtofl& (0+255),c
  7774  002CFC  0E00               	movlw	0
  7775  002CFE  140C               	andwf	___xxtofl@arg+1,w,c
  7776  002D00  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7777  002D02  0E00               	movlw	0
  7778  002D04  140D               	andwf	___xxtofl@arg+2,w,c
  7779  002D06  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7780  002D08  0EFE               	movlw	254
  7781  002D0A  140E               	andwf	___xxtofl@arg+3,w,c
  7782  002D0C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7783  002D0E  5005               	movf	??___xxtofl,w,c
  7784  002D10  1006               	iorwf	??___xxtofl+1,w,c
  7785  002D12  1007               	iorwf	??___xxtofl+2,w,c
  7786  002D14  1008               	iorwf	??___xxtofl+3,w,c
  7787  002D16  B4D8               	btfsc	status,2,c
  7788  002D18  D00D               	goto	l1185
  7789  002D1A  D7E7               	goto	l4525
  7790  002D1C                     l4529:
  7791  002D1C  2A0A               	incf	___xxtofl@exp,f,c
  7792  002D1E  0E01               	movlw	1
  7793  002D20  260B               	addwf	___xxtofl@arg,f,c
  7794  002D22  0E00               	movlw	0
  7795  002D24  220C               	addwfc	___xxtofl@arg+1,f,c
  7796  002D26  220D               	addwfc	___xxtofl@arg+2,f,c
  7797  002D28  220E               	addwfc	___xxtofl@arg+3,f,c
  7798  002D2A  90D8               	bcf	status,0,c
  7799  002D2C  320E               	rrcf	___xxtofl@arg+3,f,c
  7800  002D2E  320D               	rrcf	___xxtofl@arg+2,f,c
  7801  002D30  320C               	rrcf	___xxtofl@arg+1,f,c
  7802  002D32  320B               	rrcf	___xxtofl@arg,f,c
  7803  002D34                     l1185:
  7804  002D34  0E00               	movlw	0
  7805  002D36  140B               	andwf	___xxtofl@arg,w,c
  7806  002D38  6E05               	movwf	??___xxtofl& (0+255),c
  7807  002D3A  0E00               	movlw	0
  7808  002D3C  140C               	andwf	___xxtofl@arg+1,w,c
  7809  002D3E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7810  002D40  0E00               	movlw	0
  7811  002D42  140D               	andwf	___xxtofl@arg+2,w,c
  7812  002D44  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7813  002D46  0EFF               	movlw	255
  7814  002D48  140E               	andwf	___xxtofl@arg+3,w,c
  7815  002D4A  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7816  002D4C  5005               	movf	??___xxtofl,w,c
  7817  002D4E  1006               	iorwf	??___xxtofl+1,w,c
  7818  002D50  1007               	iorwf	??___xxtofl+2,w,c
  7819  002D52  1008               	iorwf	??___xxtofl+3,w,c
  7820  002D54  B4D8               	btfsc	status,2,c
  7821  002D56  D007               	goto	l4537
  7822  002D58  D7E1               	goto	l4529
  7823  002D5A                     l4535:
  7824  002D5A  060A               	decf	___xxtofl@exp,f,c
  7825  002D5C  90D8               	bcf	status,0,c
  7826  002D5E  360B               	rlcf	___xxtofl@arg,f,c
  7827  002D60  360C               	rlcf	___xxtofl@arg+1,f,c
  7828  002D62  360D               	rlcf	___xxtofl@arg+2,f,c
  7829  002D64  360E               	rlcf	___xxtofl@arg+3,f,c
  7830  002D66                     l4537:
  7831  002D66  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7832  002D68  D003               	goto	u5090
  7833  002D6A  0E02               	movlw	2
  7834  002D6C  600A               	cpfslt	___xxtofl@exp,c
  7835  002D6E  D7F5               	goto	l4535
  7836  002D70                     u5090:
  7837  002D70  A00A               	btfss	___xxtofl@exp,0,c
  7838  002D72  9E0D               	bcf	___xxtofl@arg+2,7,c
  7839  002D74  90D8               	bcf	status,0,c
  7840  002D76  320A               	rrcf	___xxtofl@exp,f,c
  7841  002D78  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7842  002D7C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7843  002D7E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7844  002D80  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7845  002D82  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7846  002D86  6A07               	clrf	??___xxtofl+2,c
  7847  002D88  6A06               	clrf	??___xxtofl+1,c
  7848  002D8A  6A05               	clrf	??___xxtofl,c
  7849  002D8C  5005               	movf	??___xxtofl,w,c
  7850  002D8E  120B               	iorwf	___xxtofl@arg,f,c
  7851  002D90  5006               	movf	??___xxtofl+1,w,c
  7852  002D92  120C               	iorwf	___xxtofl@arg+1,f,c
  7853  002D94  5007               	movf	??___xxtofl+2,w,c
  7854  002D96  120D               	iorwf	___xxtofl@arg+2,f,c
  7855  002D98  5008               	movf	??___xxtofl+3,w,c
  7856  002D9A  120E               	iorwf	___xxtofl@arg+3,f,c
  7857  002D9C  5009               	movf	___xxtofl@sign,w,c
  7858  002D9E  A4D8               	btfss	status,2,c
  7859  002DA0  AE04               	btfss	___xxtofl@val+3,7,c
  7860  002DA2  D001               	goto	l4553
  7861  002DA4  8E0E               	bsf	___xxtofl@arg+3,7,c
  7862  002DA6                     l4553:
  7863  002DA6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7864  002DAA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7865  002DAE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7866  002DB2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7867  002DB6  0012               	return		;funcret
  7868  002DB8                     __end_of___xxtofl:
  7869                           	opt callstack 0
  7870                           
  7871 ;; *************** function ___flmul *****************
  7872 ;; Defined at:
  7873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  b               4   14[COMRAM] unsigned char 
  7876 ;;  a               4   18[COMRAM] unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  prod            4   33[COMRAM] struct .
  7879 ;;  grs             4   27[COMRAM] unsigned long 
  7880 ;;  temp            2   37[COMRAM] struct .
  7881 ;;  bexp            1   32[COMRAM] unsigned char 
  7882 ;;  aexp            1   31[COMRAM] unsigned char 
  7883 ;;  sign            1   26[COMRAM] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  4   14[COMRAM] unsigned char 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, prodl, prodh
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7893 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;Total ram usage:       25 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_main
  7903 ;;		_read_Iout
  7904 ;;		_read_Uout
  7905 ;;		_read_Uin
  7906 ;;		_set_boost
  7907 ;;		_set_buck
  7908 ;;		_efgtoa
  7909 ;;		_write_Power
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text37
  7914  001D6C                     __ptext37:
  7915                           	opt callstack 0
  7916  001D6C                     ___flmul:
  7917                           	opt callstack 25
  7918                           
  7919                           ;incstack = 0
  7920  001D6C  5012               	movf	___flmul@b+3,w,c
  7921  001D6E  0B80               	andlw	128
  7922  001D70  6E1B               	movwf	___flmul@sign,c
  7923  001D72  5012               	movf	___flmul@b+3,w,c
  7924  001D74  2412               	addwf	___flmul@b+3,w,c
  7925  001D76  6E21               	movwf	___flmul@bexp,c
  7926  001D78  BE11               	btfsc	___flmul@b+2,7,c
  7927  001D7A  8021               	bsf	___flmul@bexp,0,c
  7928  001D7C  5021               	movf	___flmul@bexp,w,c
  7929  001D7E  B4D8               	btfsc	status,2,c
  7930  001D80  D00D               	goto	l3615
  7931  001D82  2821               	incf	___flmul@bexp,w,c
  7932  001D84  A4D8               	btfss	status,2,c
  7933  001D86  D008               	goto	l3613
  7934  001D88  0E00               	movlw	0
  7935  001D8A  6E0F               	movwf	___flmul@b,c
  7936  001D8C  0E00               	movlw	0
  7937  001D8E  6E10               	movwf	___flmul@b+1,c
  7938  001D90  0E00               	movlw	0
  7939  001D92  6E11               	movwf	___flmul@b+2,c
  7940  001D94  0E00               	movlw	0
  7941  001D96  6E12               	movwf	___flmul@b+3,c
  7942  001D98                     l3613:
  7943  001D98  8E11               	bsf	___flmul@b+2,7,c
  7944  001D9A  D008               	goto	l3617
  7945  001D9C                     l3615:
  7946  001D9C  0E00               	movlw	0
  7947  001D9E  6E0F               	movwf	___flmul@b,c
  7948  001DA0  0E00               	movlw	0
  7949  001DA2  6E10               	movwf	___flmul@b+1,c
  7950  001DA4  0E00               	movlw	0
  7951  001DA6  6E11               	movwf	___flmul@b+2,c
  7952  001DA8  0E00               	movlw	0
  7953  001DAA  6E12               	movwf	___flmul@b+3,c
  7954  001DAC                     l3617:
  7955  001DAC  5016               	movf	___flmul@a+3,w,c
  7956  001DAE  0B80               	andlw	128
  7957  001DB0  1A1B               	xorwf	___flmul@sign,f,c
  7958  001DB2  5016               	movf	___flmul@a+3,w,c
  7959  001DB4  2416               	addwf	___flmul@a+3,w,c
  7960  001DB6  6E20               	movwf	___flmul@aexp,c
  7961  001DB8  BE15               	btfsc	___flmul@a+2,7,c
  7962  001DBA  8020               	bsf	___flmul@aexp,0,c
  7963  001DBC  5020               	movf	___flmul@aexp,w,c
  7964  001DBE  B4D8               	btfsc	status,2,c
  7965  001DC0  D00D               	goto	l3633
  7966  001DC2  2820               	incf	___flmul@aexp,w,c
  7967  001DC4  A4D8               	btfss	status,2,c
  7968  001DC6  D008               	goto	l3631
  7969  001DC8  0E00               	movlw	0
  7970  001DCA  6E13               	movwf	___flmul@a,c
  7971  001DCC  0E00               	movlw	0
  7972  001DCE  6E14               	movwf	___flmul@a+1,c
  7973  001DD0  0E00               	movlw	0
  7974  001DD2  6E15               	movwf	___flmul@a+2,c
  7975  001DD4  0E00               	movlw	0
  7976  001DD6  6E16               	movwf	___flmul@a+3,c
  7977  001DD8                     l3631:
  7978  001DD8  8E15               	bsf	___flmul@a+2,7,c
  7979  001DDA  D008               	goto	l1137
  7980  001DDC                     l3633:
  7981  001DDC  0E00               	movlw	0
  7982  001DDE  6E13               	movwf	___flmul@a,c
  7983  001DE0  0E00               	movlw	0
  7984  001DE2  6E14               	movwf	___flmul@a+1,c
  7985  001DE4  0E00               	movlw	0
  7986  001DE6  6E15               	movwf	___flmul@a+2,c
  7987  001DE8  0E00               	movlw	0
  7988  001DEA  6E16               	movwf	___flmul@a+3,c
  7989  001DEC                     l1137:
  7990  001DEC  5020               	movf	___flmul@aexp,w,c
  7991  001DEE  B4D8               	btfsc	status,2,c
  7992  001DF0  D003               	goto	u3730
  7993  001DF2  5021               	movf	___flmul@bexp,w,c
  7994  001DF4  A4D8               	btfss	status,2,c
  7995  001DF6  D009               	goto	l3641
  7996  001DF8                     u3730:
  7997  001DF8  0E00               	movlw	0
  7998  001DFA  6E0F               	movwf	?___flmul,c
  7999  001DFC  0E00               	movlw	0
  8000  001DFE  6E10               	movwf	?___flmul+1,c
  8001  001E00  0E00               	movlw	0
  8002  001E02  6E11               	movwf	?___flmul+2,c
  8003  001E04  0E00               	movlw	0
  8004  001E06  6E12               	movwf	?___flmul+3,c
  8005  001E08  0012               	return	
  8006  001E0A                     l3641:
  8007  001E0A  5015               	movf	___flmul@a+2,w,c
  8008  001E0C  020F               	mulwf	___flmul@b,c
  8009  001E0E  CFF3 F026          	movff	prodl,___flmul@temp
  8010  001E12  CFF4 F027          	movff	prodh,___flmul@temp+1
  8011  001E16  5026               	movf	___flmul@temp,w,c
  8012  001E18  6E1C               	movwf	___flmul@grs,c
  8013  001E1A  6A1D               	clrf	___flmul@grs+1,c
  8014  001E1C  6A1E               	clrf	___flmul@grs+2,c
  8015  001E1E  6A1F               	clrf	___flmul@grs+3,c
  8016  001E20  5027               	movf	___flmul@temp+1,w,c
  8017  001E22  6E22               	movwf	___flmul@prod,c
  8018  001E24  6A23               	clrf	___flmul@prod+1,c
  8019  001E26  6A24               	clrf	___flmul@prod+2,c
  8020  001E28  6A25               	clrf	___flmul@prod+3,c
  8021  001E2A  5014               	movf	___flmul@a+1,w,c
  8022  001E2C  0210               	mulwf	___flmul@b+1,c
  8023  001E2E  CFF3 F026          	movff	prodl,___flmul@temp
  8024  001E32  CFF4 F027          	movff	prodh,___flmul@temp+1
  8025  001E36  5026               	movf	___flmul@temp,w,c
  8026  001E38  261C               	addwf	___flmul@grs,f,c
  8027  001E3A  0E00               	movlw	0
  8028  001E3C  221D               	addwfc	___flmul@grs+1,f,c
  8029  001E3E  221E               	addwfc	___flmul@grs+2,f,c
  8030  001E40  221F               	addwfc	___flmul@grs+3,f,c
  8031  001E42  5027               	movf	___flmul@temp+1,w,c
  8032  001E44  2622               	addwf	___flmul@prod,f,c
  8033  001E46  0E00               	movlw	0
  8034  001E48  2223               	addwfc	___flmul@prod+1,f,c
  8035  001E4A  2224               	addwfc	___flmul@prod+2,f,c
  8036  001E4C  2225               	addwfc	___flmul@prod+3,f,c
  8037  001E4E  5013               	movf	___flmul@a,w,c
  8038  001E50  0211               	mulwf	___flmul@b+2,c
  8039  001E52  CFF3 F026          	movff	prodl,___flmul@temp
  8040  001E56  CFF4 F027          	movff	prodh,___flmul@temp+1
  8041  001E5A  5026               	movf	___flmul@temp,w,c
  8042  001E5C  261C               	addwf	___flmul@grs,f,c
  8043  001E5E  0E00               	movlw	0
  8044  001E60  221D               	addwfc	___flmul@grs+1,f,c
  8045  001E62  221E               	addwfc	___flmul@grs+2,f,c
  8046  001E64  221F               	addwfc	___flmul@grs+3,f,c
  8047  001E66  5027               	movf	___flmul@temp+1,w,c
  8048  001E68  2622               	addwf	___flmul@prod,f,c
  8049  001E6A  0E00               	movlw	0
  8050  001E6C  2223               	addwfc	___flmul@prod+1,f,c
  8051  001E6E  2224               	addwfc	___flmul@prod+2,f,c
  8052  001E70  2225               	addwfc	___flmul@prod+3,f,c
  8053  001E72  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8054  001E76  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8055  001E7A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8056  001E7E  6A1C               	clrf	___flmul@grs,c
  8057  001E80  5013               	movf	___flmul@a,w,c
  8058  001E82  0210               	mulwf	___flmul@b+1,c
  8059  001E84  CFF3 F026          	movff	prodl,___flmul@temp
  8060  001E88  CFF4 F027          	movff	prodh,___flmul@temp+1
  8061  001E8C  5026               	movf	___flmul@temp,w,c
  8062  001E8E  261C               	addwf	___flmul@grs,f,c
  8063  001E90  5027               	movf	___flmul@temp+1,w,c
  8064  001E92  221D               	addwfc	___flmul@grs+1,f,c
  8065  001E94  0E00               	movlw	0
  8066  001E96  221E               	addwfc	___flmul@grs+2,f,c
  8067  001E98  0E00               	movlw	0
  8068  001E9A  221F               	addwfc	___flmul@grs+3,f,c
  8069  001E9C  5014               	movf	___flmul@a+1,w,c
  8070  001E9E  020F               	mulwf	___flmul@b,c
  8071  001EA0  CFF3 F026          	movff	prodl,___flmul@temp
  8072  001EA4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8073  001EA8  5026               	movf	___flmul@temp,w,c
  8074  001EAA  261C               	addwf	___flmul@grs,f,c
  8075  001EAC  5027               	movf	___flmul@temp+1,w,c
  8076  001EAE  221D               	addwfc	___flmul@grs+1,f,c
  8077  001EB0  0E00               	movlw	0
  8078  001EB2  221E               	addwfc	___flmul@grs+2,f,c
  8079  001EB4  0E00               	movlw	0
  8080  001EB6  221F               	addwfc	___flmul@grs+3,f,c
  8081  001EB8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8082  001EBC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8083  001EC0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8084  001EC4  6A1C               	clrf	___flmul@grs,c
  8085  001EC6  5013               	movf	___flmul@a,w,c
  8086  001EC8  020F               	mulwf	___flmul@b,c
  8087  001ECA  CFF3 F026          	movff	prodl,___flmul@temp
  8088  001ECE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8089  001ED2  5026               	movf	___flmul@temp,w,c
  8090  001ED4  261C               	addwf	___flmul@grs,f,c
  8091  001ED6  5027               	movf	___flmul@temp+1,w,c
  8092  001ED8  221D               	addwfc	___flmul@grs+1,f,c
  8093  001EDA  0E00               	movlw	0
  8094  001EDC  221E               	addwfc	___flmul@grs+2,f,c
  8095  001EDE  0E00               	movlw	0
  8096  001EE0  221F               	addwfc	___flmul@grs+3,f,c
  8097  001EE2  5015               	movf	___flmul@a+2,w,c
  8098  001EE4  0210               	mulwf	___flmul@b+1,c
  8099  001EE6  CFF3 F026          	movff	prodl,___flmul@temp
  8100  001EEA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8101  001EEE  5026               	movf	___flmul@temp,w,c
  8102  001EF0  2622               	addwf	___flmul@prod,f,c
  8103  001EF2  5027               	movf	___flmul@temp+1,w,c
  8104  001EF4  2223               	addwfc	___flmul@prod+1,f,c
  8105  001EF6  0E00               	movlw	0
  8106  001EF8  2224               	addwfc	___flmul@prod+2,f,c
  8107  001EFA  0E00               	movlw	0
  8108  001EFC  2225               	addwfc	___flmul@prod+3,f,c
  8109  001EFE  5014               	movf	___flmul@a+1,w,c
  8110  001F00  0211               	mulwf	___flmul@b+2,c
  8111  001F02  CFF3 F026          	movff	prodl,___flmul@temp
  8112  001F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  8113  001F0A  5026               	movf	___flmul@temp,w,c
  8114  001F0C  2622               	addwf	___flmul@prod,f,c
  8115  001F0E  5027               	movf	___flmul@temp+1,w,c
  8116  001F10  2223               	addwfc	___flmul@prod+1,f,c
  8117  001F12  0E00               	movlw	0
  8118  001F14  2224               	addwfc	___flmul@prod+2,f,c
  8119  001F16  0E00               	movlw	0
  8120  001F18  2225               	addwfc	___flmul@prod+3,f,c
  8121  001F1A  5015               	movf	___flmul@a+2,w,c
  8122  001F1C  0211               	mulwf	___flmul@b+2,c
  8123  001F1E  CFF3 F026          	movff	prodl,___flmul@temp
  8124  001F22  CFF4 F027          	movff	prodh,___flmul@temp+1
  8125  001F26  5026               	movf	___flmul@temp,w,c
  8126  001F28  6E17               	movwf	??___flmul& (0+255),c
  8127  001F2A  5027               	movf	___flmul@temp+1,w,c
  8128  001F2C  6E18               	movwf	(??___flmul+1)& (0+255),c
  8129  001F2E  6A19               	clrf	(??___flmul+2)& (0+255),c
  8130  001F30  6A1A               	clrf	(??___flmul+3)& (0+255),c
  8131  001F32  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8132  001F36  C018  F019         	movff	??___flmul+1,??___flmul+2
  8133  001F3A  C017  F018         	movff	??___flmul,??___flmul+1
  8134  001F3E  6A17               	clrf	??___flmul,c
  8135  001F40  5017               	movf	??___flmul,w,c
  8136  001F42  2622               	addwf	___flmul@prod,f,c
  8137  001F44  5018               	movf	??___flmul+1,w,c
  8138  001F46  2223               	addwfc	___flmul@prod+1,f,c
  8139  001F48  5019               	movf	??___flmul+2,w,c
  8140  001F4A  2224               	addwfc	___flmul@prod+2,f,c
  8141  001F4C  501A               	movf	??___flmul+3,w,c
  8142  001F4E  2225               	addwfc	___flmul@prod+3,f,c
  8143  001F50  C01C  F017         	movff	___flmul@grs,??___flmul
  8144  001F54  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8145  001F58  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8146  001F5C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8147  001F60  0E19               	movlw	25
  8148  001F62  D005               	goto	u3740
  8149  001F64                     u3745:
  8150  001F64  90D8               	bcf	status,0,c
  8151  001F66  321A               	rrcf	??___flmul+3,f,c
  8152  001F68  3219               	rrcf	??___flmul+2,f,c
  8153  001F6A  3218               	rrcf	??___flmul+1,f,c
  8154  001F6C  3217               	rrcf	??___flmul,f,c
  8155  001F6E                     u3740:
  8156  001F6E  2EE8               	decfsz	wreg,f,c
  8157  001F70  D7F9               	goto	u3745
  8158  001F72  5017               	movf	??___flmul,w,c
  8159  001F74  2622               	addwf	___flmul@prod,f,c
  8160  001F76  5018               	movf	??___flmul+1,w,c
  8161  001F78  2223               	addwfc	___flmul@prod+1,f,c
  8162  001F7A  5019               	movf	??___flmul+2,w,c
  8163  001F7C  2224               	addwfc	___flmul@prod+2,f,c
  8164  001F7E  501A               	movf	??___flmul+3,w,c
  8165  001F80  2225               	addwfc	___flmul@prod+3,f,c
  8166  001F82  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8167  001F86  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8168  001F8A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8169  001F8E  6A1C               	clrf	___flmul@grs,c
  8170  001F90  5020               	movf	___flmul@aexp,w,c
  8171  001F92  C021  F017         	movff	___flmul@bexp,??___flmul
  8172  001F96  6A18               	clrf	(??___flmul+1)& (0+255),c
  8173  001F98  2617               	addwf	??___flmul,f,c
  8174  001F9A  0E00               	movlw	0
  8175  001F9C  2218               	addwfc	??___flmul+1,f,c
  8176  001F9E  0E82               	movlw	130
  8177  001FA0  2417               	addwf	??___flmul,w,c
  8178  001FA2  6E26               	movwf	___flmul@temp,c
  8179  001FA4  0EFF               	movlw	255
  8180  001FA6  2018               	addwfc	??___flmul+1,w,c
  8181  001FA8  6E27               	movwf	___flmul@temp+1,c
  8182  001FAA  D00F               	goto	l3689
  8183  001FAC                     l3683:
  8184  001FAC  90D8               	bcf	status,0,c
  8185  001FAE  3622               	rlcf	___flmul@prod,f,c
  8186  001FB0  3623               	rlcf	___flmul@prod+1,f,c
  8187  001FB2  3624               	rlcf	___flmul@prod+2,f,c
  8188  001FB4  3625               	rlcf	___flmul@prod+3,f,c
  8189  001FB6  BE1F               	btfsc	___flmul@grs+3,7,c
  8190  001FB8  8022               	bsf	___flmul@prod,0,c
  8191  001FBA  90D8               	bcf	status,0,c
  8192  001FBC  361C               	rlcf	___flmul@grs,f,c
  8193  001FBE  361D               	rlcf	___flmul@grs+1,f,c
  8194  001FC0  361E               	rlcf	___flmul@grs+2,f,c
  8195  001FC2  361F               	rlcf	___flmul@grs+3,f,c
  8196  001FC4  0626               	decf	___flmul@temp,f,c
  8197  001FC6  A0D8               	btfss	status,0,c
  8198  001FC8  0627               	decf	___flmul@temp+1,f,c
  8199  001FCA                     l3689:
  8200  001FCA  AE24               	btfss	___flmul@prod+2,7,c
  8201  001FCC  D7EF               	goto	l3683
  8202  001FCE  0E00               	movlw	0
  8203  001FD0  6E20               	movwf	___flmul@aexp,c
  8204  001FD2  AE1F               	btfss	___flmul@grs+3,7,c
  8205  001FD4  D017               	goto	l1146
  8206  001FD6  0EFF               	movlw	255
  8207  001FD8  141C               	andwf	___flmul@grs,w,c
  8208  001FDA  6E17               	movwf	??___flmul& (0+255),c
  8209  001FDC  0EFF               	movlw	255
  8210  001FDE  141D               	andwf	___flmul@grs+1,w,c
  8211  001FE0  6E18               	movwf	(??___flmul+1)& (0+255),c
  8212  001FE2  0EFF               	movlw	255
  8213  001FE4  141E               	andwf	___flmul@grs+2,w,c
  8214  001FE6  6E19               	movwf	(??___flmul+2)& (0+255),c
  8215  001FE8  0E7F               	movlw	127
  8216  001FEA  141F               	andwf	___flmul@grs+3,w,c
  8217  001FEC  6E1A               	movwf	(??___flmul+3)& (0+255),c
  8218  001FEE  5017               	movf	??___flmul,w,c
  8219  001FF0  1018               	iorwf	??___flmul+1,w,c
  8220  001FF2  1019               	iorwf	??___flmul+2,w,c
  8221  001FF4  101A               	iorwf	??___flmul+3,w,c
  8222  001FF6  B4D8               	btfsc	status,2,c
  8223  001FF8  D003               	goto	l1147
  8224  001FFA                     u3780:
  8225  001FFA  0E01               	movlw	1
  8226  001FFC  6E20               	movwf	___flmul@aexp,c
  8227  001FFE  D002               	goto	l1146
  8228  002000                     l1147:
  8229  002000  B022               	btfsc	___flmul@prod,0,c
  8230  002002  D7FB               	goto	u3780
  8231  002004                     l1146:
  8232  002004  5020               	movf	___flmul@aexp,w,c
  8233  002006  B4D8               	btfsc	status,2,c
  8234  002008  D01F               	goto	l3709
  8235  00200A  0E01               	movlw	1
  8236  00200C  2622               	addwf	___flmul@prod,f,c
  8237  00200E  0E00               	movlw	0
  8238  002010  2223               	addwfc	___flmul@prod+1,f,c
  8239  002012  2224               	addwfc	___flmul@prod+2,f,c
  8240  002014  2225               	addwfc	___flmul@prod+3,f,c
  8241  002016  A025               	btfss	___flmul@prod+3,0,c
  8242  002018  D017               	goto	l3709
  8243  00201A  C022  F017         	movff	___flmul@prod,??___flmul
  8244  00201E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8245  002022  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8246  002026  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8247  00202A  341A               	rlcf	??___flmul+3,w,c
  8248  00202C  321A               	rrcf	??___flmul+3,f,c
  8249  00202E  3219               	rrcf	??___flmul+2,f,c
  8250  002030  3218               	rrcf	??___flmul+1,f,c
  8251  002032  3217               	rrcf	??___flmul,f,c
  8252  002034  C017  F022         	movff	??___flmul,___flmul@prod
  8253  002038  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8254  00203C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8255  002040  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8256  002044  4A26               	infsnz	___flmul@temp,f,c
  8257  002046  2A27               	incf	___flmul@temp+1,f,c
  8258  002048                     l3709:
  8259  002048  BE27               	btfsc	___flmul@temp+1,7,c
  8260  00204A  D00D               	goto	l3713
  8261  00204C  5027               	movf	___flmul@temp+1,w,c
  8262  00204E  E103               	bnz	u3820
  8263  002050  2826               	incf	___flmul@temp,w,c
  8264  002052  A0D8               	btfss	status,0,c
  8265  002054  D008               	goto	l3713
  8266  002056                     u3820:
  8267  002056  0E00               	movlw	0
  8268  002058  6E22               	movwf	___flmul@prod,c
  8269  00205A  0E00               	movlw	0
  8270  00205C  6E23               	movwf	___flmul@prod+1,c
  8271  00205E  0E80               	movlw	128
  8272  002060  6E24               	movwf	___flmul@prod+2,c
  8273  002062  0E7F               	movlw	127
  8274  002064  D020               	goto	L12
  8275  002066                     l3713:
  8276  002066  BE27               	btfsc	___flmul@temp+1,7,c
  8277  002068  D005               	goto	u3830
  8278  00206A  5027               	movf	___flmul@temp+1,w,c
  8279  00206C  E10E               	bnz	l1154
  8280  00206E  0426               	decf	___flmul@temp,w,c
  8281  002070  B0D8               	btfsc	status,0,c
  8282  002072  D00B               	goto	l1154
  8283  002074                     u3830:
  8284  002074  0E00               	movlw	0
  8285  002076  6E22               	movwf	___flmul@prod,c
  8286  002078  0E00               	movlw	0
  8287  00207A  6E23               	movwf	___flmul@prod+1,c
  8288  00207C  0E00               	movlw	0
  8289  00207E  6E24               	movwf	___flmul@prod+2,c
  8290  002080  0E00               	movlw	0
  8291  002082  6E25               	movwf	___flmul@prod+3,c
  8292  002084  0E00               	movlw	0
  8293  002086  6E1B               	movwf	___flmul@sign,c
  8294  002088  D00F               	goto	l3725
  8295  00208A                     l1154:
  8296  00208A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8297  00208E  0EFF               	movlw	255
  8298  002090  1622               	andwf	___flmul@prod,f,c
  8299  002092  0EFF               	movlw	255
  8300  002094  1623               	andwf	___flmul@prod+1,f,c
  8301  002096  0E7F               	movlw	127
  8302  002098  1624               	andwf	___flmul@prod+2,f,c
  8303  00209A  0E00               	movlw	0
  8304  00209C  1625               	andwf	___flmul@prod+3,f,c
  8305  00209E  B021               	btfsc	___flmul@bexp,0,c
  8306  0020A0  8E24               	bsf	___flmul@prod+2,7,c
  8307  0020A2  90D8               	bcf	status,0,c
  8308  0020A4  3021               	rrcf	___flmul@bexp,w,c
  8309  0020A6                     L12:
  8310  0020A6  6E25               	movwf	___flmul@prod+3,c
  8311  0020A8                     l3725:
  8312  0020A8  501B               	movf	___flmul@sign,w,c
  8313  0020AA  1225               	iorwf	___flmul@prod+3,f,c
  8314  0020AC  C022  F00F         	movff	___flmul@prod,?___flmul
  8315  0020B0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8316  0020B4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8317  0020B8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8318  0020BC  0012               	return		;funcret
  8319  0020BE                     __end_of___flmul:
  8320                           	opt callstack 0
  8321                           
  8322 ;; *************** function _pwm_init *****************
  8323 ;; Defined at:
  8324 ;;		line 125 in file "mppt.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  Uin             4   51[COMRAM] float 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;		None
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      void 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;Total ram usage:        4 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    1
  8345 ;; This function calls:
  8346 ;;		___flge
  8347 ;; This function is called by:
  8348 ;;		_main
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text38
  8353  003DE0                     __ptext38:
  8354                           	opt callstack 0
  8355  003DE0                     _pwm_init:
  8356                           	opt callstack 29
  8357                           
  8358                           ;mppt.c: 125: void pwm_init(float Uin);mppt.c: 126: {;mppt.c: 127:     if(Uin>12)
  8359                           
  8360                           ;incstack = 0
  8361  003DE0  0E00               	movlw	0
  8362  003DE2  6E28               	movwf	___flge@ff1,c
  8363  003DE4  0E00               	movlw	0
  8364  003DE6  6E29               	movwf	___flge@ff1+1,c
  8365  003DE8  0E40               	movlw	64
  8366  003DEA  6E2A               	movwf	___flge@ff1+2,c
  8367  003DEC  0E41               	movlw	65
  8368  003DEE  6E2B               	movwf	___flge@ff1+3,c
  8369  003DF0  C034  F02C         	movff	pwm_init@Uin,___flge@ff2
  8370  003DF4  C035  F02D         	movff	pwm_init@Uin+1,___flge@ff2+1
  8371  003DF8  C036  F02E         	movff	pwm_init@Uin+2,___flge@ff2+2
  8372  003DFC  C037  F02F         	movff	pwm_init@Uin+3,___flge@ff2+3
  8373  003E00  ECF0  F017         	call	___flge	;wreg free
  8374  003E04  B0D8               	btfsc	status,0,c
  8375  003E06  0012               	return	
  8376                           
  8377                           ;mppt.c: 128:     {;mppt.c: 129:         boost_pwm=0;
  8378  003E08  0E00               	movlw	0
  8379  003E0A  0100               	movlb	0	; () banked
  8380  003E0C  6FEF               	movwf	(_boost_pwm+1)& (0+255),b
  8381  003E0E  0E00               	movlw	0
  8382  003E10  6FEE               	movwf	_boost_pwm& (0+255),b
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;mppt.c: 130:         CCPR2L=boost_pwm;
  8386  003E12  0E00               	movlw	0
  8387  003E14  6E67               	movwf	3943,c	;volatile
  8388                           
  8389                           ;mppt.c: 132:     }
  8390  003E16  0012               	return		;funcret
  8391  003E18                     __end_of_pwm_init:
  8392                           	opt callstack 0
  8393                           
  8394 ;; *************** function ___flge *****************
  8395 ;; Defined at:
  8396 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  ff1             4   39[COMRAM] void 
  8399 ;;  ff2             4   43[COMRAM] void 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;		None               void
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8411 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;Total ram usage:       12 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_main
  8421 ;;		_read_Iout
  8422 ;;		_read_Uout
  8423 ;;		_pwm_init
  8424 ;;		_efgtoa
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text39
  8429  002FE0                     __ptext39:
  8430                           	opt callstack 0
  8431  002FE0                     ___flge:
  8432                           	opt callstack 25
  8433                           
  8434                           ;incstack = 0
  8435  002FE0  0E00               	movlw	0
  8436  002FE2  1428               	andwf	___flge@ff1,w,c
  8437  002FE4  6E30               	movwf	??___flge& (0+255),c
  8438  002FE6  0E00               	movlw	0
  8439  002FE8  1429               	andwf	___flge@ff1+1,w,c
  8440  002FEA  6E31               	movwf	(??___flge+1)& (0+255),c
  8441  002FEC  0E80               	movlw	128
  8442  002FEE  142A               	andwf	___flge@ff1+2,w,c
  8443  002FF0  6E32               	movwf	(??___flge+2)& (0+255),c
  8444  002FF2  0E7F               	movlw	127
  8445  002FF4  142B               	andwf	___flge@ff1+3,w,c
  8446  002FF6  6E33               	movwf	(??___flge+3)& (0+255),c
  8447  002FF8  5030               	movf	??___flge,w,c
  8448  002FFA  1031               	iorwf	??___flge+1,w,c
  8449  002FFC  1032               	iorwf	??___flge+2,w,c
  8450  002FFE  1033               	iorwf	??___flge+3,w,c
  8451  003000  A4D8               	btfss	status,2,c
  8452  003002  D008               	goto	l3837
  8453  003004  0E00               	movlw	0
  8454  003006  6E28               	movwf	___flge@ff1,c
  8455  003008  0E00               	movlw	0
  8456  00300A  6E29               	movwf	___flge@ff1+1,c
  8457  00300C  0E00               	movlw	0
  8458  00300E  6E2A               	movwf	___flge@ff1+2,c
  8459  003010  0E00               	movlw	0
  8460  003012  6E2B               	movwf	___flge@ff1+3,c
  8461  003014                     l3837:
  8462  003014  0E00               	movlw	0
  8463  003016  142C               	andwf	___flge@ff2,w,c
  8464  003018  6E30               	movwf	??___flge& (0+255),c
  8465  00301A  0E00               	movlw	0
  8466  00301C  142D               	andwf	___flge@ff2+1,w,c
  8467  00301E  6E31               	movwf	(??___flge+1)& (0+255),c
  8468  003020  0E80               	movlw	128
  8469  003022  142E               	andwf	___flge@ff2+2,w,c
  8470  003024  6E32               	movwf	(??___flge+2)& (0+255),c
  8471  003026  0E7F               	movlw	127
  8472  003028  142F               	andwf	___flge@ff2+3,w,c
  8473  00302A  6E33               	movwf	(??___flge+3)& (0+255),c
  8474  00302C  5030               	movf	??___flge,w,c
  8475  00302E  1031               	iorwf	??___flge+1,w,c
  8476  003030  1032               	iorwf	??___flge+2,w,c
  8477  003032  1033               	iorwf	??___flge+3,w,c
  8478  003034  A4D8               	btfss	status,2,c
  8479  003036  D008               	goto	l3841
  8480  003038  0E00               	movlw	0
  8481  00303A  6E2C               	movwf	___flge@ff2,c
  8482  00303C  0E00               	movlw	0
  8483  00303E  6E2D               	movwf	___flge@ff2+1,c
  8484  003040  0E00               	movlw	0
  8485  003042  6E2E               	movwf	___flge@ff2+2,c
  8486  003044  0E00               	movlw	0
  8487  003046  6E2F               	movwf	___flge@ff2+3,c
  8488  003048                     l3841:
  8489  003048  AE2B               	btfss	___flge@ff1+3,7,c
  8490  00304A  D009               	goto	l3845
  8491  00304C  6C28               	negf	___flge@ff1,c
  8492  00304E  1E29               	comf	___flge@ff1+1,f,c
  8493  003050  B0D8               	btfsc	status,0,c
  8494  003052  2A29               	incf	___flge@ff1+1,f,c
  8495  003054  1E2A               	comf	___flge@ff1+2,f,c
  8496  003056  B0D8               	btfsc	status,0,c
  8497  003058  2A2A               	incf	___flge@ff1+2,f,c
  8498  00305A  0E80               	movlw	128
  8499  00305C  562B               	subfwb	___flge@ff1+3,f,c
  8500  00305E                     l3845:
  8501  00305E  AE2F               	btfss	___flge@ff2+3,7,c
  8502  003060  D009               	goto	l788
  8503  003062  6C2C               	negf	___flge@ff2,c
  8504  003064  1E2D               	comf	___flge@ff2+1,f,c
  8505  003066  B0D8               	btfsc	status,0,c
  8506  003068  2A2D               	incf	___flge@ff2+1,f,c
  8507  00306A  1E2E               	comf	___flge@ff2+2,f,c
  8508  00306C  B0D8               	btfsc	status,0,c
  8509  00306E  2A2E               	incf	___flge@ff2+2,f,c
  8510  003070  0E80               	movlw	128
  8511  003072  562F               	subfwb	___flge@ff2+3,f,c
  8512  003074                     l788:
  8513  003074  0E00               	movlw	0
  8514  003076  1A28               	xorwf	___flge@ff1,f,c
  8515  003078  0E00               	movlw	0
  8516  00307A  1A29               	xorwf	___flge@ff1+1,f,c
  8517  00307C  0E00               	movlw	0
  8518  00307E  1A2A               	xorwf	___flge@ff1+2,f,c
  8519  003080  0E80               	movlw	128
  8520  003082  1A2B               	xorwf	___flge@ff1+3,f,c
  8521  003084  0E00               	movlw	0
  8522  003086  1A2C               	xorwf	___flge@ff2,f,c
  8523  003088  0E00               	movlw	0
  8524  00308A  1A2D               	xorwf	___flge@ff2+1,f,c
  8525  00308C  0E00               	movlw	0
  8526  00308E  1A2E               	xorwf	___flge@ff2+2,f,c
  8527  003090  0E80               	movlw	128
  8528  003092  1A2F               	xorwf	___flge@ff2+3,f,c
  8529  003094  502C               	movf	___flge@ff2,w,c
  8530  003096  5C28               	subwf	___flge@ff1,w,c
  8531  003098  502D               	movf	___flge@ff2+1,w,c
  8532  00309A  5829               	subwfb	___flge@ff1+1,w,c
  8533  00309C  502E               	movf	___flge@ff2+2,w,c
  8534  00309E  582A               	subwfb	___flge@ff1+2,w,c
  8535  0030A0  502F               	movf	___flge@ff2+3,w,c
  8536  0030A2  582B               	subwfb	___flge@ff1+3,w,c
  8537  0030A4  B0D8               	btfsc	status,0,c
  8538  0030A6  D002               	goto	l3851
  8539  0030A8  90D8               	bcf	status,0,c
  8540  0030AA  0012               	return	
  8541  0030AC                     l3851:
  8542  0030AC  80D8               	bsf	status,0,c
  8543  0030AE  0012               	return		;funcret
  8544  0030B0                     __end_of___flge:
  8545                           	opt callstack 0
  8546                           
  8547 ;; *************** function _pwm_config *****************
  8548 ;; Defined at:
  8549 ;;		line 44 in file "config.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;Total ram usage:        0 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_main
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text40
  8577  003F3A                     __ptext40:
  8578                           	opt callstack 0
  8579  003F3A                     _pwm_config:
  8580                           	opt callstack 30
  8581                           
  8582                           ;config.c: 46:     CCPTMRS0=0b00000000;
  8583                           
  8584                           ;incstack = 0
  8585  003F3A  0E00               	movlw	0
  8586  003F3C  010F               	movlb	15	; () banked
  8587  003F3E  6F49               	movwf	73,b	;volatile
  8588                           
  8589                           ;config.c: 47:     CCP2CON=0b00001100;
  8590  003F40  0E0C               	movlw	12
  8591  003F42  6E66               	movwf	3942,c	;volatile
  8592                           
  8593                           ;config.c: 48:     CCP1CON=0b00001100;
  8594  003F44  0E0C               	movlw	12
  8595  003F46  6EBD               	movwf	4029,c	;volatile
  8596                           
  8597                           ;config.c: 49:     T2CON=0b01111101;
  8598  003F48  0E7D               	movlw	125
  8599  003F4A  6EBA               	movwf	4026,c	;volatile
  8600                           
  8601                           ;config.c: 50:     PR2=160;
  8602  003F4C  0EA0               	movlw	160
  8603  003F4E  6EBB               	movwf	4027,c	;volatile
  8604                           
  8605                           ; BSR set to: 15
  8606  003F50  0012               	return		;funcret
  8607  003F52                     __end_of_pwm_config:
  8608                           	opt callstack 0
  8609                           
  8610 ;; *************** function _init_io_display *****************
  8611 ;; Defined at:
  8612 ;;		line 62 in file "config.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;Total ram usage:        2 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:    5
  8633 ;; This function calls:
  8634 ;;		_Cursor_Off
  8635 ;;		_I2C_Master_Init
  8636 ;;		_Lcd_Clear
  8637 ;;		_Lcd_Init
  8638 ;;		_Lcd_Set_Cursor
  8639 ;;		_Lcd_Write_String
  8640 ;; This function is called by:
  8641 ;;		_main
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text41
  8646  0038BE                     __ptext41:
  8647                           	opt callstack 0
  8648  0038BE                     _init_io_display:
  8649                           	opt callstack 25
  8650                           
  8651                           ;config.c: 64:     TRISCbits.TRISC3=1;
  8652                           
  8653                           ; BSR set to: 15
  8654                           ;incstack = 0
  8655  0038BE  8694               	bsf	3988,3,c	;volatile
  8656                           
  8657                           ;config.c: 65:     TRISCbits.TRISC4=1;
  8658  0038C0  8894               	bsf	3988,4,c	;volatile
  8659                           
  8660                           ;config.c: 66:     I2C_Master_Init(100000);
  8661  0038C2  0EA0               	movlw	160
  8662  0038C4  6E0E               	movwf	I2C_Master_Init@c,c
  8663  0038C6  0E86               	movlw	134
  8664  0038C8  6E0F               	movwf	I2C_Master_Init@c+1,c
  8665  0038CA  0E01               	movlw	1
  8666  0038CC  6E10               	movwf	I2C_Master_Init@c+2,c
  8667  0038CE  0E00               	movlw	0
  8668  0038D0  6E11               	movwf	I2C_Master_Init@c+3,c
  8669  0038D2  ECF5  F01C         	call	_I2C_Master_Init	;wreg free
  8670                           
  8671                           ;config.c: 67:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8672  0038D6  0E09               	movlw	9
  8673  0038D8  6E17               	movwf	(??_init_io_display+1)& (0+255),c
  8674  0038DA  0E1E               	movlw	30
  8675  0038DC  6E16               	movwf	??_init_io_display& (0+255),c
  8676  0038DE  0EE4               	movlw	228
  8677  0038E0                     u5477:
  8678  0038E0  2EE8               	decfsz	wreg,f,c
  8679  0038E2  D7FE               	bra	u5477
  8680  0038E4  2E16               	decfsz	??_init_io_display& (0+255),f,c
  8681  0038E6  D7FC               	bra	u5477
  8682  0038E8  2E17               	decfsz	(??_init_io_display+1)& (0+255),f,c
  8683  0038EA  D7FA               	bra	u5477
  8684  0038EC  D000               	nop2	
  8685                           
  8686                           ;config.c: 68:     Lcd_Init();
  8687  0038EE  ECAE  F01B         	call	_Lcd_Init	;wreg free
  8688                           
  8689                           ;config.c: 69:     Lcd_Clear();
  8690  0038F2  ECB2  F01F         	call	_Lcd_Clear	;wreg free
  8691                           
  8692                           ;config.c: 70:     Cursor_Off();
  8693  0038F6  ECB9  F01F         	call	_Cursor_Off	;wreg free
  8694                           
  8695                           ;config.c: 71:     Lcd_Set_Cursor(1,1);
  8696  0038FA  0E01               	movlw	1
  8697  0038FC  6E0B               	movwf	Lcd_Set_Cursor@b,c
  8698  0038FE  0E01               	movlw	1
  8699  003900  EC20  F01E         	call	_Lcd_Set_Cursor
  8700                           
  8701                           ;config.c: 72:     Lcd_Write_String("Test");
  8702  003904  0E20               	movlw	low STR_1
  8703  003906  6E08               	movwf	Lcd_Write_String@a,c
  8704  003908  0E10               	movlw	high STR_1
  8705  00390A  6E09               	movwf	Lcd_Write_String@a+1,c
  8706  00390C  ECEC  F01B         	call	_Lcd_Write_String	;wreg free
  8707                           
  8708                           ;config.c: 73:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8709  003910  0E09               	movlw	9
  8710  003912  6E17               	movwf	(??_init_io_display+1)& (0+255),c
  8711  003914  0E1E               	movlw	30
  8712  003916  6E16               	movwf	??_init_io_display& (0+255),c
  8713  003918  0EE4               	movlw	228
  8714  00391A                     u5487:
  8715  00391A  2EE8               	decfsz	wreg,f,c
  8716  00391C  D7FE               	bra	u5487
  8717  00391E  2E16               	decfsz	??_init_io_display& (0+255),f,c
  8718  003920  D7FC               	bra	u5487
  8719  003922  2E17               	decfsz	(??_init_io_display+1)& (0+255),f,c
  8720  003924  D7FA               	bra	u5487
  8721  003926  D000               	nop2	
  8722  003928  0012               	return		;funcret
  8723  00392A                     __end_of_init_io_display:
  8724                           	opt callstack 0
  8725                           
  8726 ;; *************** function _Lcd_Write_String *****************
  8727 ;; Defined at:
  8728 ;;		line 109 in file "lcd_i2c.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  a               2    7[COMRAM] PTR unsigned char 
  8731 ;;		 -> STR_13(3), str_P(8), STR_11(3), STR_9(4), 
  8732 ;;		 -> str_V(8), STR_7(3), STR_6(13), STR_5(3), 
  8733 ;;		 -> str_A(8), STR_3(3), STR_2(13), STR_1(5), 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;  i               2   11[COMRAM] int 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      void 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;Total ram usage:        6 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    4
  8752 ;; This function calls:
  8753 ;;		_Lcd_Write_Char
  8754 ;; This function is called by:
  8755 ;;		_init_io_display
  8756 ;;		_read_Iout
  8757 ;;		_write_Iout
  8758 ;;		_read_Uout
  8759 ;;		_write_Uout
  8760 ;;		_write_Uin
  8761 ;;		_write_Power
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text42
  8766  0037D8                     __ptext42:
  8767                           	opt callstack 0
  8768  0037D8                     _Lcd_Write_String:
  8769                           	opt callstack 25
  8770                           
  8771                           ;lcd_i2c.c: 109: void Lcd_Write_String(char *a);lcd_i2c.c: 110: {;lcd_i2c.c: 111:  int i
      +                          ;;lcd_i2c.c: 112:  for(i=0;a[i]!='\0';i++)
  8772                           
  8773                           ;incstack = 0
  8774  0037D8  0E00               	movlw	0
  8775  0037DA  6E0D               	movwf	Lcd_Write_String@i+1,c
  8776  0037DC  0E00               	movlw	0
  8777  0037DE  6E0C               	movwf	Lcd_Write_String@i,c
  8778  0037E0  D01B               	goto	l4497
  8779  0037E2                     l4493:
  8780                           
  8781                           ;lcd_i2c.c: 113:     Lcd_Write_Char(a[i]);
  8782  0037E2  500C               	movf	Lcd_Write_String@i,w,c
  8783  0037E4  2408               	addwf	Lcd_Write_String@a,w,c
  8784  0037E6  6E0A               	movwf	??_Lcd_Write_String& (0+255),c
  8785  0037E8  500D               	movf	Lcd_Write_String@i+1,w,c
  8786  0037EA  2009               	addwfc	Lcd_Write_String@a+1,w,c
  8787  0037EC  6E0B               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  8788  0037EE  C00A  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8789  0037F2  C00B  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8790  0037F6  0E00               	movlw	low (__smallconst shr (0+16))
  8791  0037F8  6EF8               	movwf	tblptru,c
  8792  0037FA  0E0F               	movlw	(high __ramtop+-1)
  8793  0037FC  64F7               	cpfsgt	tblptrh,c
  8794  0037FE  D003               	bra	u5007
  8795  003800  0008               	tblrd		*
  8796  003802  50F5               	movf	tablat,w,c
  8797  003804  D005               	bra	u5000
  8798  003806                     u5007:
  8799  003806  CFF6 FFE9          	movff	tblptrl,fsr0l
  8800  00380A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8801  00380E  50EF               	movf	indf0,w,c
  8802  003810                     u5000:
  8803  003810  EC22  F01D         	call	_Lcd_Write_Char
  8804  003814  4A0C               	infsnz	Lcd_Write_String@i,f,c
  8805  003816  2A0D               	incf	Lcd_Write_String@i+1,f,c
  8806  003818                     l4497:
  8807  003818  500C               	movf	Lcd_Write_String@i,w,c
  8808  00381A  2408               	addwf	Lcd_Write_String@a,w,c
  8809  00381C  6E0A               	movwf	??_Lcd_Write_String& (0+255),c
  8810  00381E  500D               	movf	Lcd_Write_String@i+1,w,c
  8811  003820  2009               	addwfc	Lcd_Write_String@a+1,w,c
  8812  003822  6E0B               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  8813  003824  C00A  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8814  003828  C00B  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8815  00382C  0E00               	movlw	low (__smallconst shr (0+16))
  8816  00382E  6EF8               	movwf	tblptru,c
  8817  003830  0E0F               	movlw	(high __ramtop+-1)
  8818  003832  64F7               	cpfsgt	tblptrh,c
  8819  003834  D003               	bra	u5017
  8820  003836  0008               	tblrd		*
  8821  003838  50F5               	movf	tablat,w,c
  8822  00383A  D005               	bra	u5010
  8823  00383C                     u5017:
  8824  00383C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8825  003840  CFF7 FFEA          	movff	tblptrh,fsr0h
  8826  003844  50EF               	movf	indf0,w,c
  8827  003846                     u5010:
  8828  003846  0900               	iorlw	0
  8829  003848  B4D8               	btfsc	status,2,c
  8830  00384A  0012               	return	
  8831  00384C  D7CA               	goto	l4493
  8832  00384E                     __end_of_Lcd_Write_String:
  8833                           	opt callstack 0
  8834                           
  8835 ;; *************** function _Lcd_Write_Char *****************
  8836 ;; Defined at:
  8837 ;;		line 85 in file "lcd_i2c.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  a               1    wreg     unsigned char 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  a               1    4[COMRAM] unsigned char 
  8842 ;;  temp            1    6[COMRAM] unsigned char 
  8843 ;;  y               1    5[COMRAM] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;Total ram usage:        3 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    3
  8860 ;; This function calls:
  8861 ;;		_Lcd_Port
  8862 ;; This function is called by:
  8863 ;;		_Lcd_Write_String
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text43
  8868  003A44                     __ptext43:
  8869                           	opt callstack 0
  8870  003A44                     _Lcd_Write_Char:
  8871                           	opt callstack 25
  8872                           
  8873                           ;incstack = 0
  8874                           ;Lcd_Write_Char@a stored from wreg
  8875  003A44  6E05               	movwf	Lcd_Write_Char@a,c
  8876                           
  8877                           ;lcd_i2c.c: 85: void Lcd_Write_Char(char a);lcd_i2c.c: 86: {;lcd_i2c.c: 87:    char temp
      +                          ,y;;lcd_i2c.c: 88:    temp = a&0x0F;
  8878  003A46  5005               	movf	Lcd_Write_Char@a,w,c
  8879  003A48  0B0F               	andlw	15
  8880  003A4A  6E07               	movwf	Lcd_Write_Char@temp,c
  8881                           
  8882                           ;lcd_i2c.c: 89:    temp=temp<<4;
  8883  003A4C  3807               	swapf	Lcd_Write_Char@temp,w,c
  8884  003A4E  0BF0               	andlw	240
  8885  003A50  6E07               	movwf	Lcd_Write_Char@temp,c
  8886                           
  8887                           ;lcd_i2c.c: 90:    y = a&0xF0;
  8888  003A52  5005               	movf	Lcd_Write_Char@a,w,c
  8889  003A54  0BF0               	andlw	240
  8890  003A56  6E06               	movwf	Lcd_Write_Char@y,c
  8891                           
  8892                           ;lcd_i2c.c: 93:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
  8893  003A58  0E01               	movlw	1
  8894  003A5A  EC8C  F01F         	call	_Lcd_Port
  8895                           
  8896                           ;lcd_i2c.c: 94:    Lcd_Port(y);
  8897  003A5E  5006               	movf	Lcd_Write_Char@y,w,c
  8898  003A60  EC8C  F01F         	call	_Lcd_Port
  8899                           
  8900                           ;lcd_i2c.c: 96:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
  8901  003A64  5006               	movf	Lcd_Write_Char@y,w,c
  8902  003A66  0905               	iorlw	5
  8903  003A68  EC8C  F01F         	call	_Lcd_Port
  8904                           
  8905                           ;lcd_i2c.c: 97:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  8906  003A6C  0ED5               	movlw	213
  8907  003A6E                     u5497:
  8908  003A6E  2EE8               	decfsz	wreg,f,c
  8909  003A70  D7FE               	bra	u5497
  8910  003A72  F000               	nop	
  8911                           
  8912                           ;lcd_i2c.c: 99:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
  8913  003A74  5006               	movf	Lcd_Write_Char@y,w,c
  8914  003A76  0901               	iorlw	1
  8915  003A78  EC8C  F01F         	call	_Lcd_Port
  8916                           
  8917                           ;lcd_i2c.c: 100:    Lcd_Port(temp);
  8918  003A7C  5007               	movf	Lcd_Write_Char@temp,w,c
  8919  003A7E  EC8C  F01F         	call	_Lcd_Port
  8920                           
  8921                           ;lcd_i2c.c: 103:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
  8922  003A82  5007               	movf	Lcd_Write_Char@temp,w,c
  8923  003A84  0905               	iorlw	5
  8924  003A86  EC8C  F01F         	call	_Lcd_Port
  8925                           
  8926                           ;lcd_i2c.c: 104:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  8927  003A8A  0ED5               	movlw	213
  8928  003A8C                     u5507:
  8929  003A8C  2EE8               	decfsz	wreg,f,c
  8930  003A8E  D7FE               	bra	u5507
  8931  003A90  F000               	nop	
  8932                           
  8933                           ;lcd_i2c.c: 106:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
  8934  003A92  5007               	movf	Lcd_Write_Char@temp,w,c
  8935  003A94  0901               	iorlw	1
  8936  003A96  EC8C  F01F         	call	_Lcd_Port
  8937  003A9A  0012               	return		;funcret
  8938  003A9C                     __end_of_Lcd_Write_Char:
  8939                           	opt callstack 0
  8940                           
  8941 ;; *************** function _Lcd_Set_Cursor *****************
  8942 ;; Defined at:
  8943 ;;		line 45 in file "lcd_i2c.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  a               1    wreg     unsigned char 
  8946 ;;  b               1   10[COMRAM] unsigned char 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  a               1   11[COMRAM] unsigned char 
  8949 ;;  temp            1   14[COMRAM] unsigned char 
  8950 ;;  y               1   13[COMRAM] unsigned char 
  8951 ;;  z               1   12[COMRAM] unsigned char 
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, status,2, status,0, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8961 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8965 ;;Total ram usage:        5 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; Hardware stack levels required when called:    4
  8968 ;; This function calls:
  8969 ;;		_Lcd_Cmd
  8970 ;; This function is called by:
  8971 ;;		_init_io_display
  8972 ;;		_read_Iout
  8973 ;;		_write_Iout
  8974 ;;		_read_Uout
  8975 ;;		_write_Uout
  8976 ;;		_write_Uin
  8977 ;;		_write_Power
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text44
  8982  003C40                     __ptext44:
  8983                           	opt callstack 0
  8984  003C40                     _Lcd_Set_Cursor:
  8985                           	opt callstack 25
  8986                           
  8987                           ;incstack = 0
  8988                           ;Lcd_Set_Cursor@a stored from wreg
  8989  003C40  6E0C               	movwf	Lcd_Set_Cursor@a,c
  8990                           
  8991                           ;lcd_i2c.c: 45: void Lcd_Set_Cursor(char a, char b);lcd_i2c.c: 46: {;lcd_i2c.c: 47:  cha
      +                          r temp,z,y;;lcd_i2c.c: 48:  if(a == 1)
  8992  003C42  040C               	decf	Lcd_Set_Cursor@a,w,c
  8993  003C44  A4D8               	btfss	status,2,c
  8994  003C46  D010               	goto	l4483
  8995                           
  8996                           ;lcd_i2c.c: 49:  {;lcd_i2c.c: 50:    temp = 0x80 + b - 1;
  8997  003C48  500B               	movf	Lcd_Set_Cursor@b,w,c
  8998  003C4A  0F7F               	addlw	127
  8999  003C4C  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  9000                           
  9001                           ;lcd_i2c.c: 51:   z = temp>>4;
  9002  003C4E  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  9003  003C50  0B0F               	andlw	15
  9004  003C52  6E0D               	movwf	Lcd_Set_Cursor@z,c
  9005                           
  9006                           ;lcd_i2c.c: 52:   y = temp & 0x0F;
  9007  003C54  500F               	movf	Lcd_Set_Cursor@temp,w,c
  9008  003C56  0B0F               	andlw	15
  9009  003C58  6E0E               	movwf	Lcd_Set_Cursor@y,c
  9010                           
  9011                           ;lcd_i2c.c: 53:   Lcd_Cmd(z);
  9012  003C5A  500D               	movf	Lcd_Set_Cursor@z,w,c
  9013  003C5C  EC6E  F01E         	call	_Lcd_Cmd
  9014                           
  9015                           ;lcd_i2c.c: 54:   Lcd_Cmd(y);
  9016  003C60  500E               	movf	Lcd_Set_Cursor@y,w,c
  9017  003C62  EC6E  F01E         	call	_Lcd_Cmd
  9018                           
  9019                           ;lcd_i2c.c: 55:  }
  9020  003C66  0012               	return	
  9021  003C68                     l4483:
  9022  003C68  0E02               	movlw	2
  9023  003C6A  180C               	xorwf	Lcd_Set_Cursor@a,w,c
  9024  003C6C  A4D8               	btfss	status,2,c
  9025  003C6E  0012               	return	
  9026                           
  9027                           ;lcd_i2c.c: 57:  {;lcd_i2c.c: 58:   temp = 0xC0 + b - 1;
  9028  003C70  500B               	movf	Lcd_Set_Cursor@b,w,c
  9029  003C72  0FBF               	addlw	191
  9030  003C74  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  9031                           
  9032                           ;lcd_i2c.c: 59:   z = temp>>4;
  9033  003C76  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  9034  003C78  0B0F               	andlw	15
  9035  003C7A  6E0D               	movwf	Lcd_Set_Cursor@z,c
  9036                           
  9037                           ;lcd_i2c.c: 60:   y = temp & 0x0F;
  9038  003C7C  500F               	movf	Lcd_Set_Cursor@temp,w,c
  9039  003C7E  0B0F               	andlw	15
  9040  003C80  6E0E               	movwf	Lcd_Set_Cursor@y,c
  9041                           
  9042                           ;lcd_i2c.c: 61:   Lcd_Cmd(z);
  9043  003C82  500D               	movf	Lcd_Set_Cursor@z,w,c
  9044  003C84  EC6E  F01E         	call	_Lcd_Cmd
  9045                           
  9046                           ;lcd_i2c.c: 62:   Lcd_Cmd(y);
  9047  003C88  500E               	movf	Lcd_Set_Cursor@y,w,c
  9048  003C8A  EC6E  F01E         	call	_Lcd_Cmd
  9049  003C8E  0012               	return		;funcret
  9050  003C90                     __end_of_Lcd_Set_Cursor:
  9051                           	opt callstack 0
  9052                           
  9053 ;; *************** function _Lcd_Init *****************
  9054 ;; Defined at:
  9055 ;;		line 66 in file "lcd_i2c.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      void 
  9062 ;; Registers used:
  9063 ;;		wreg, status,2, status,0, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;Total ram usage:        2 bytes
  9074 ;; Hardware stack levels used:    1
  9075 ;; Hardware stack levels required when called:    4
  9076 ;; This function calls:
  9077 ;;		_Lcd_Cmd
  9078 ;;		_Lcd_Port
  9079 ;; This function is called by:
  9080 ;;		_init_io_display
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           	psect	text45
  9085  00375C                     __ptext45:
  9086                           	opt callstack 0
  9087  00375C                     _Lcd_Init:
  9088                           	opt callstack 25
  9089                           
  9090                           ;lcd_i2c.c: 68:   Lcd_Port(0x00);
  9091                           
  9092                           ;incstack = 0
  9093  00375C  0E00               	movlw	0
  9094  00375E  EC8C  F01F         	call	_Lcd_Port
  9095                           
  9096                           ;lcd_i2c.c: 69:    _delay((unsigned long)((20)*(64000000/4000.0)));
  9097  003762  0E02               	movlw	2
  9098  003764  6E0C               	movwf	(??_Lcd_Init+1)& (0+255),c
  9099  003766  0EA0               	movlw	160
  9100  003768  6E0B               	movwf	??_Lcd_Init& (0+255),c
  9101  00376A  0E92               	movlw	146
  9102  00376C                     u5517:
  9103  00376C  2EE8               	decfsz	wreg,f,c
  9104  00376E  D7FE               	bra	u5517
  9105  003770  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  9106  003772  D7FC               	bra	u5517
  9107  003774  2E0C               	decfsz	(??_Lcd_Init+1)& (0+255),f,c
  9108  003776  D7FA               	bra	u5517
  9109  003778  D000               	nop2	
  9110                           
  9111                           ;lcd_i2c.c: 70:   Lcd_Cmd(0x03);
  9112  00377A  0E03               	movlw	3
  9113  00377C  EC6E  F01E         	call	_Lcd_Cmd
  9114                           
  9115                           ;lcd_i2c.c: 71:  _delay((unsigned long)((5)*(64000000/4000.0)));
  9116  003780  0E68               	movlw	104
  9117  003782  6E0B               	movwf	??_Lcd_Init& (0+255),c
  9118  003784  0EE4               	movlw	228
  9119  003786                     u5527:
  9120  003786  2EE8               	decfsz	wreg,f,c
  9121  003788  D7FE               	bra	u5527
  9122  00378A  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  9123  00378C  D7FC               	bra	u5527
  9124  00378E  D000               	nop2	
  9125                           
  9126                           ;lcd_i2c.c: 72:   Lcd_Cmd(0x03);
  9127  003790  0E03               	movlw	3
  9128  003792  EC6E  F01E         	call	_Lcd_Cmd
  9129                           
  9130                           ;lcd_i2c.c: 73:  _delay((unsigned long)((11)*(64000000/4000.0)));
  9131  003796  0EE5               	movlw	229
  9132  003798  6E0B               	movwf	??_Lcd_Init& (0+255),c
  9133  00379A  0E91               	movlw	145
  9134  00379C                     u5537:
  9135  00379C  2EE8               	decfsz	wreg,f,c
  9136  00379E  D7FE               	bra	u5537
  9137  0037A0  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  9138  0037A2  D7FC               	bra	u5537
  9139  0037A4  F000               	nop	
  9140                           
  9141                           ;lcd_i2c.c: 74:   Lcd_Cmd(0x03);
  9142  0037A6  0E03               	movlw	3
  9143  0037A8  EC6E  F01E         	call	_Lcd_Cmd
  9144                           
  9145                           ;lcd_i2c.c: 76:   Lcd_Cmd(0x02);
  9146  0037AC  0E02               	movlw	2
  9147  0037AE  EC6E  F01E         	call	_Lcd_Cmd
  9148                           
  9149                           ;lcd_i2c.c: 77:   Lcd_Cmd(0x02);
  9150  0037B2  0E02               	movlw	2
  9151  0037B4  EC6E  F01E         	call	_Lcd_Cmd
  9152                           
  9153                           ;lcd_i2c.c: 78:   Lcd_Cmd(0x08);
  9154  0037B8  0E08               	movlw	8
  9155  0037BA  EC6E  F01E         	call	_Lcd_Cmd
  9156                           
  9157                           ;lcd_i2c.c: 79:   Lcd_Cmd(0x00);
  9158  0037BE  0E00               	movlw	0
  9159  0037C0  EC6E  F01E         	call	_Lcd_Cmd
  9160                           
  9161                           ;lcd_i2c.c: 80:   Lcd_Cmd(0x0C);
  9162  0037C4  0E0C               	movlw	12
  9163  0037C6  EC6E  F01E         	call	_Lcd_Cmd
  9164                           
  9165                           ;lcd_i2c.c: 81:   Lcd_Cmd(0x00);
  9166  0037CA  0E00               	movlw	0
  9167  0037CC  EC6E  F01E         	call	_Lcd_Cmd
  9168                           
  9169                           ;lcd_i2c.c: 82:   Lcd_Cmd(0x06);
  9170  0037D0  0E06               	movlw	6
  9171  0037D2  EC6E  F01E         	call	_Lcd_Cmd
  9172  0037D6  0012               	return		;funcret
  9173  0037D8                     __end_of_Lcd_Init:
  9174                           	opt callstack 0
  9175                           
  9176 ;; *************** function _Lcd_Clear *****************
  9177 ;; Defined at:
  9178 ;;		line 39 in file "lcd_i2c.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, status,0, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    4
  9199 ;; This function calls:
  9200 ;;		_Lcd_Cmd
  9201 ;; This function is called by:
  9202 ;;		_init_io_display
  9203 ;;		_main
  9204 ;;		_read_Iout
  9205 ;;		_read_Uout
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text46
  9210  003F64                     __ptext46:
  9211                           	opt callstack 0
  9212  003F64                     _Lcd_Clear:
  9213                           	opt callstack 25
  9214                           
  9215                           ;lcd_i2c.c: 41:  Lcd_Cmd(0);
  9216                           
  9217                           ;incstack = 0
  9218  003F64  0E00               	movlw	0
  9219  003F66  EC6E  F01E         	call	_Lcd_Cmd
  9220                           
  9221                           ;lcd_i2c.c: 42:  Lcd_Cmd(1);
  9222  003F6A  0E01               	movlw	1
  9223  003F6C  EC6E  F01E         	call	_Lcd_Cmd
  9224  003F70  0012               	return		;funcret
  9225  003F72                     __end_of_Lcd_Clear:
  9226                           	opt callstack 0
  9227                           
  9228 ;; *************** function _I2C_Master_Init *****************
  9229 ;; Defined at:
  9230 ;;		line 160 in file "lcd_i2c.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  c               4   13[COMRAM] const unsigned long 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;Total ram usage:        8 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    1
  9251 ;; This function calls:
  9252 ;;		___lldiv
  9253 ;; This function is called by:
  9254 ;;		_init_io_display
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text47
  9259  0039EA                     __ptext47:
  9260                           	opt callstack 0
  9261  0039EA                     _I2C_Master_Init:
  9262                           	opt callstack 28
  9263                           
  9264                           ;lcd_i2c.c: 160: void I2C_Master_Init(const unsigned long c);lcd_i2c.c: 161: {;lcd_i2c.c
      +                          : 162:     SSP1CON1 = 0b00101000;
  9265                           
  9266                           ;incstack = 0
  9267  0039EA  0E28               	movlw	40
  9268  0039EC  6EC6               	movwf	4038,c	;volatile
  9269                           
  9270                           ;lcd_i2c.c: 163:     SSP1CON2 = 0x00;
  9271  0039EE  0E00               	movlw	0
  9272  0039F0  6EC5               	movwf	4037,c	;volatile
  9273                           
  9274                           ;lcd_i2c.c: 164:     SSP1ADD = (64000000/(4*c))-1;
  9275  0039F2  0E00               	movlw	0
  9276  0039F4  6E01               	movwf	___lldiv@dividend,c
  9277  0039F6  0E90               	movlw	144
  9278  0039F8  6E02               	movwf	___lldiv@dividend+1,c
  9279  0039FA  0ED0               	movlw	208
  9280  0039FC  6E03               	movwf	___lldiv@dividend+2,c
  9281  0039FE  0E03               	movlw	3
  9282  003A00  6E04               	movwf	___lldiv@dividend+3,c
  9283  003A02  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  9284  003A06  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  9285  003A0A  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  9286  003A0E  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  9287  003A12  0E02               	movlw	2
  9288  003A14                     u4975:
  9289  003A14  90D8               	bcf	status,0,c
  9290  003A16  3612               	rlcf	??_I2C_Master_Init,f,c
  9291  003A18  3613               	rlcf	??_I2C_Master_Init+1,f,c
  9292  003A1A  3614               	rlcf	??_I2C_Master_Init+2,f,c
  9293  003A1C  3615               	rlcf	??_I2C_Master_Init+3,f,c
  9294  003A1E  2EE8               	decfsz	wreg,f,c
  9295  003A20  D7F9               	goto	u4975
  9296  003A22  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  9297  003A26  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  9298  003A2A  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  9299  003A2E  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  9300  003A32  EC6D  F01B         	call	___lldiv	;wreg free
  9301  003A36  0401               	decf	?___lldiv,w,c
  9302  003A38  6EC8               	movwf	4040,c	;volatile
  9303                           
  9304                           ;lcd_i2c.c: 165:     SSP1STAT = 0x00;
  9305  003A3A  0E00               	movlw	0
  9306  003A3C  6EC7               	movwf	4039,c	;volatile
  9307                           
  9308                           ;lcd_i2c.c: 166:     TRISCbits.TRISC3=1;
  9309  003A3E  8694               	bsf	3988,3,c	;volatile
  9310                           
  9311                           ;lcd_i2c.c: 167:     TRISCbits.TRISC4=1;
  9312  003A40  8894               	bsf	3988,4,c	;volatile
  9313  003A42  0012               	return		;funcret
  9314  003A44                     __end_of_I2C_Master_Init:
  9315                           	opt callstack 0
  9316                           
  9317 ;; *************** function ___lldiv *****************
  9318 ;; Defined at:
  9319 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  dividend        4    0[COMRAM] unsigned long 
  9322 ;;  divisor         4    4[COMRAM] unsigned long 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  quotient        4    8[COMRAM] unsigned long 
  9325 ;;  counter         1   12[COMRAM] unsigned char 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  4    0[COMRAM] unsigned long 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9335 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;Total ram usage:       13 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_I2C_Master_Init
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text48
  9349  0036DA                     __ptext48:
  9350                           	opt callstack 0
  9351  0036DA                     ___lldiv:
  9352                           	opt callstack 28
  9353                           
  9354                           ;incstack = 0
  9355  0036DA  0E00               	movlw	0
  9356  0036DC  6E09               	movwf	___lldiv@quotient,c
  9357  0036DE  0E00               	movlw	0
  9358  0036E0  6E0A               	movwf	___lldiv@quotient+1,c
  9359  0036E2  0E00               	movlw	0
  9360  0036E4  6E0B               	movwf	___lldiv@quotient+2,c
  9361  0036E6  0E00               	movlw	0
  9362  0036E8  6E0C               	movwf	___lldiv@quotient+3,c
  9363  0036EA  5005               	movf	___lldiv@divisor,w,c
  9364  0036EC  1006               	iorwf	___lldiv@divisor+1,w,c
  9365  0036EE  1007               	iorwf	___lldiv@divisor+2,w,c
  9366  0036F0  1008               	iorwf	___lldiv@divisor+3,w,c
  9367  0036F2  B4D8               	btfsc	status,2,c
  9368  0036F4  D02A               	goto	l550
  9369  0036F6  0E01               	movlw	1
  9370  0036F8  6E0D               	movwf	___lldiv@counter,c
  9371  0036FA  D006               	goto	l4437
  9372  0036FC                     l4435:
  9373  0036FC  90D8               	bcf	status,0,c
  9374  0036FE  3605               	rlcf	___lldiv@divisor,f,c
  9375  003700  3606               	rlcf	___lldiv@divisor+1,f,c
  9376  003702  3607               	rlcf	___lldiv@divisor+2,f,c
  9377  003704  3608               	rlcf	___lldiv@divisor+3,f,c
  9378  003706  2A0D               	incf	___lldiv@counter,f,c
  9379  003708                     l4437:
  9380  003708  AE08               	btfss	___lldiv@divisor+3,7,c
  9381  00370A  D7F8               	goto	l4435
  9382  00370C                     u4950:
  9383  00370C  90D8               	bcf	status,0,c
  9384  00370E  3609               	rlcf	___lldiv@quotient,f,c
  9385  003710  360A               	rlcf	___lldiv@quotient+1,f,c
  9386  003712  360B               	rlcf	___lldiv@quotient+2,f,c
  9387  003714  360C               	rlcf	___lldiv@quotient+3,f,c
  9388  003716  5005               	movf	___lldiv@divisor,w,c
  9389  003718  5C01               	subwf	___lldiv@dividend,w,c
  9390  00371A  5006               	movf	___lldiv@divisor+1,w,c
  9391  00371C  5802               	subwfb	___lldiv@dividend+1,w,c
  9392  00371E  5007               	movf	___lldiv@divisor+2,w,c
  9393  003720  5803               	subwfb	___lldiv@dividend+2,w,c
  9394  003722  5008               	movf	___lldiv@divisor+3,w,c
  9395  003724  5804               	subwfb	___lldiv@dividend+3,w,c
  9396  003726  A0D8               	btfss	status,0,c
  9397  003728  D009               	goto	l4447
  9398  00372A  5005               	movf	___lldiv@divisor,w,c
  9399  00372C  5E01               	subwf	___lldiv@dividend,f,c
  9400  00372E  5006               	movf	___lldiv@divisor+1,w,c
  9401  003730  5A02               	subwfb	___lldiv@dividend+1,f,c
  9402  003732  5007               	movf	___lldiv@divisor+2,w,c
  9403  003734  5A03               	subwfb	___lldiv@dividend+2,f,c
  9404  003736  5008               	movf	___lldiv@divisor+3,w,c
  9405  003738  5A04               	subwfb	___lldiv@dividend+3,f,c
  9406  00373A  8009               	bsf	___lldiv@quotient,0,c
  9407  00373C                     l4447:
  9408  00373C  90D8               	bcf	status,0,c
  9409  00373E  3208               	rrcf	___lldiv@divisor+3,f,c
  9410  003740  3207               	rrcf	___lldiv@divisor+2,f,c
  9411  003742  3206               	rrcf	___lldiv@divisor+1,f,c
  9412  003744  3205               	rrcf	___lldiv@divisor,f,c
  9413  003746  2E0D               	decfsz	___lldiv@counter,f,c
  9414  003748  D7E1               	goto	u4950
  9415  00374A                     l550:
  9416  00374A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9417  00374E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9418  003752  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9419  003756  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9420  00375A  0012               	return		;funcret
  9421  00375C                     __end_of___lldiv:
  9422                           	opt callstack 0
  9423                           
  9424 ;; *************** function _Cursor_Off *****************
  9425 ;; Defined at:
  9426 ;;		line 134 in file "lcd_i2c.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1    wreg      void 
  9433 ;; Registers used:
  9434 ;;		wreg, status,2, status,0, cstack
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; Hardware stack levels required when called:    4
  9447 ;; This function calls:
  9448 ;;		_Lcd_Cmd
  9449 ;; This function is called by:
  9450 ;;		_init_io_display
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text49
  9455  003F72                     __ptext49:
  9456                           	opt callstack 0
  9457  003F72                     _Cursor_Off:
  9458                           	opt callstack 25
  9459                           
  9460                           ;lcd_i2c.c: 136: Lcd_Cmd(0x00);
  9461                           
  9462                           ;incstack = 0
  9463  003F72  0E00               	movlw	0
  9464  003F74  EC6E  F01E         	call	_Lcd_Cmd
  9465                           
  9466                           ;lcd_i2c.c: 137: Lcd_Cmd(0x0C);
  9467  003F78  0E0C               	movlw	12
  9468  003F7A  EC6E  F01E         	call	_Lcd_Cmd
  9469  003F7E  0012               	return		;funcret
  9470  003F80                     __end_of_Cursor_Off:
  9471                           	opt callstack 0
  9472                           
  9473 ;; *************** function _Lcd_Cmd *****************
  9474 ;; Defined at:
  9475 ;;		line 20 in file "lcd_i2c.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  a               1    wreg     unsigned char 
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;  a               1    9[COMRAM] unsigned char 
  9480 ;;  buff            2    7[COMRAM] int 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;Total ram usage:        6 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:    3
  9497 ;; This function calls:
  9498 ;;		_Lcd_Port
  9499 ;; This function is called by:
  9500 ;;		_Lcd_Clear
  9501 ;;		_Lcd_Set_Cursor
  9502 ;;		_Lcd_Init
  9503 ;;		_Cursor_Off
  9504 ;;		_Lcd_Shift_Right
  9505 ;;		_Lcd_Shift_Left
  9506 ;;		_Cursor_On
  9507 ;;		_Cursor_Left
  9508 ;;		_Cursor_Right
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text50
  9513  003CDC                     __ptext50:
  9514                           	opt callstack 0
  9515  003CDC                     _Lcd_Cmd:
  9516                           	opt callstack 25
  9517                           
  9518                           ;incstack = 0
  9519                           ;Lcd_Cmd@a stored from wreg
  9520  003CDC  6E0A               	movwf	Lcd_Cmd@a,c
  9521                           
  9522                           ;lcd_i2c.c: 20: void Lcd_Cmd(char a);lcd_i2c.c: 21: {;lcd_i2c.c: 22:     int buff;;lcd_i
      +                          2c.c: 23:     a=a<<4;
  9523  003CDE  380A               	swapf	Lcd_Cmd@a,w,c
  9524  003CE0  0BF0               	andlw	240
  9525  003CE2  6E0A               	movwf	Lcd_Cmd@a,c
  9526  003CE4  0E00               	movlw	0
  9527  003CE6  EC8C  F01F         	call	_Lcd_Port
  9528                           
  9529                           ;lcd_i2c.c: 28:  Lcd_Port(a);
  9530  003CEA  500A               	movf	Lcd_Cmd@a,w,c
  9531  003CEC  EC8C  F01F         	call	_Lcd_Port
  9532                           
  9533                           ;lcd_i2c.c: 31:     buff=a | 0x00 | 0x04 | 0x00;
  9534  003CF0  0E04               	movlw	4
  9535  003CF2  C00A  F005         	movff	Lcd_Cmd@a,??_Lcd_Cmd
  9536  003CF6  6A06               	clrf	(??_Lcd_Cmd+1)& (0+255),c
  9537  003CF8  1005               	iorwf	??_Lcd_Cmd,w,c
  9538  003CFA  6E08               	movwf	Lcd_Cmd@buff,c
  9539  003CFC  5006               	movf	??_Lcd_Cmd+1,w,c
  9540  003CFE  6E09               	movwf	Lcd_Cmd@buff+1,c
  9541                           
  9542                           ;lcd_i2c.c: 32:     Lcd_Port(buff);
  9543  003D00  5008               	movf	Lcd_Cmd@buff,w,c
  9544  003D02  EC8C  F01F         	call	_Lcd_Port
  9545                           
  9546                           ;lcd_i2c.c: 33:         _delay((unsigned long)((4)*(64000000/4000.0)));
  9547  003D06  0E54               	movlw	84
  9548  003D08  6E05               	movwf	??_Lcd_Cmd& (0+255),c
  9549  003D0A  0E1C               	movlw	28
  9550  003D0C                     u5547:
  9551  003D0C  2EE8               	decfsz	wreg,f,c
  9552  003D0E  D7FE               	bra	u5547
  9553  003D10  2E05               	decfsz	??_Lcd_Cmd& (0+255),f,c
  9554  003D12  D7FC               	bra	u5547
  9555  003D14  D000               	nop2	
  9556                           
  9557                           ;lcd_i2c.c: 35:     buff=a | 0x00 | 0x00 | 0x00;
  9558  003D16  C00A  F008         	movff	Lcd_Cmd@a,Lcd_Cmd@buff
  9559  003D1A  6A09               	clrf	Lcd_Cmd@buff+1,c
  9560                           
  9561                           ;lcd_i2c.c: 36:     Lcd_Port(buff);
  9562  003D1C  5008               	movf	Lcd_Cmd@buff,w,c
  9563  003D1E  EC8C  F01F         	call	_Lcd_Port
  9564  003D22  0012               	return		;funcret
  9565  003D24                     __end_of_Lcd_Cmd:
  9566                           	opt callstack 0
  9567                           
  9568 ;; *************** function _Lcd_Port *****************
  9569 ;; Defined at:
  9570 ;;		line 14 in file "lcd_i2c.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  data            1    wreg     unsigned char 
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;  data            1    3[COMRAM] unsigned char 
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      void 
  9577 ;; Registers used:
  9578 ;;		wreg, status,2, status,0, cstack
  9579 ;; Tracked objects:
  9580 ;;		On entry : 0/0
  9581 ;;		On exit  : 0/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9588 ;;Total ram usage:        1 bytes
  9589 ;; Hardware stack levels used:    1
  9590 ;; Hardware stack levels required when called:    2
  9591 ;; This function calls:
  9592 ;;		_I2C_Master_Start
  9593 ;;		_I2C_Master_Stop
  9594 ;;		_I2C_Write_Display
  9595 ;; This function is called by:
  9596 ;;		_Lcd_Cmd
  9597 ;;		_Lcd_Init
  9598 ;;		_Lcd_Write_Char
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           	psect	text51
  9603  003F18                     __ptext51:
  9604                           	opt callstack 0
  9605  003F18                     _Lcd_Port:
  9606                           	opt callstack 25
  9607                           
  9608                           ;incstack = 0
  9609                           ;Lcd_Port@data stored from wreg
  9610  003F18  6E04               	movwf	Lcd_Port@data,c
  9611                           
  9612                           ;lcd_i2c.c: 14: void Lcd_Port(char data);lcd_i2c.c: 15: { I2C_Master_Start();
  9613  003F1A  ECCF  F01F         	call	_I2C_Master_Start	;wreg free
  9614                           
  9615                           ;lcd_i2c.c: 16:     I2C_Write_Display(0x70);
  9616  003F1E  0E00               	movlw	0
  9617  003F20  6E03               	movwf	I2C_Write_Display@d+1,c
  9618  003F22  0E70               	movlw	112
  9619  003F24  6E02               	movwf	I2C_Write_Display@d,c
  9620  003F26  ECC6  F01F         	call	_I2C_Write_Display	;wreg free
  9621                           
  9622                           ;lcd_i2c.c: 17:  I2C_Write_Display(data);
  9623  003F2A  C004  F002         	movff	Lcd_Port@data,I2C_Write_Display@d
  9624  003F2E  6A03               	clrf	I2C_Write_Display@d+1,c
  9625  003F30  ECC6  F01F         	call	_I2C_Write_Display	;wreg free
  9626                           
  9627                           ;lcd_i2c.c: 18:     I2C_Master_Stop();
  9628  003F34  ECCB  F01F         	call	_I2C_Master_Stop	;wreg free
  9629  003F38  0012               	return		;funcret
  9630  003F3A                     __end_of_Lcd_Port:
  9631                           	opt callstack 0
  9632                           
  9633 ;; *************** function _I2C_Write_Display *****************
  9634 ;; Defined at:
  9635 ;;		line 201 in file "lcd_i2c.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  d               2    1[COMRAM] unsigned int 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;Total ram usage:        2 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    1
  9656 ;; This function calls:
  9657 ;;		_I2C_Master_Wait
  9658 ;; This function is called by:
  9659 ;;		_Lcd_Port
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text52
  9664  003F8C                     __ptext52:
  9665                           	opt callstack 0
  9666  003F8C                     _I2C_Write_Display:
  9667                           	opt callstack 25
  9668                           
  9669                           ;lcd_i2c.c: 201: void I2C_Write_Display(unsigned d);lcd_i2c.c: 202: {;lcd_i2c.c: 203:   
      +                            I2C_Master_Wait();
  9670                           
  9671                           ;incstack = 0
  9672  003F8C  ECA9  F01F         	call	_I2C_Master_Wait	;wreg free
  9673                           
  9674                           ;lcd_i2c.c: 204:     SSP1BUF = d;
  9675  003F90  C002  FFC9         	movff	I2C_Write_Display@d,4041	;volatile
  9676  003F94  0012               	return		;funcret
  9677  003F96                     __end_of_I2C_Write_Display:
  9678                           	opt callstack 0
  9679                           
  9680 ;; *************** function _I2C_Master_Stop *****************
  9681 ;; Defined at:
  9682 ;;		line 189 in file "lcd_i2c.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		wreg, status,2, status,0, cstack
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    1
  9703 ;; This function calls:
  9704 ;;		_I2C_Master_Wait
  9705 ;; This function is called by:
  9706 ;;		_Lcd_Port
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text53
  9711  003F96                     __ptext53:
  9712                           	opt callstack 0
  9713  003F96                     _I2C_Master_Stop:
  9714                           	opt callstack 25
  9715                           
  9716                           ;lcd_i2c.c: 191:     I2C_Master_Wait();
  9717                           
  9718                           ;incstack = 0
  9719  003F96  ECA9  F01F         	call	_I2C_Master_Wait	;wreg free
  9720                           
  9721                           ;lcd_i2c.c: 192:     SSP1CON2bits.PEN = 1;
  9722  003F9A  84C5               	bsf	4037,2,c	;volatile
  9723  003F9C  0012               	return		;funcret
  9724  003F9E                     __end_of_I2C_Master_Stop:
  9725                           	opt callstack 0
  9726                           
  9727 ;; *************** function _I2C_Master_Start *****************
  9728 ;; Defined at:
  9729 ;;		line 177 in file "lcd_i2c.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;		None
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, status,2, status,0, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;Total ram usage:        0 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; Hardware stack levels required when called:    1
  9750 ;; This function calls:
  9751 ;;		_I2C_Master_Wait
  9752 ;; This function is called by:
  9753 ;;		_Lcd_Port
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text54
  9758  003F9E                     __ptext54:
  9759                           	opt callstack 0
  9760  003F9E                     _I2C_Master_Start:
  9761                           	opt callstack 25
  9762                           
  9763                           ;lcd_i2c.c: 179:     I2C_Master_Wait();
  9764                           
  9765                           ;incstack = 0
  9766  003F9E  ECA9  F01F         	call	_I2C_Master_Wait	;wreg free
  9767                           
  9768                           ;lcd_i2c.c: 180:     SSP1CON2bits.SEN = 1;
  9769  003FA2  80C5               	bsf	4037,0,c	;volatile
  9770  003FA4  0012               	return		;funcret
  9771  003FA6                     __end_of_I2C_Master_Start:
  9772                           	opt callstack 0
  9773                           
  9774 ;; *************** function _I2C_Master_Wait *****************
  9775 ;; Defined at:
  9776 ;;		line 170 in file "lcd_i2c.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9794 ;;Total ram usage:        1 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_I2C_Master_Start
  9800 ;;		_I2C_Master_Stop
  9801 ;;		_I2C_Write_Display
  9802 ;;		_I2C_Master_RepeatedStart
  9803 ;;		_I2C_Master_Write
  9804 ;;		_I2C_Master_Read
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text55
  9809  003F52                     __ptext55:
  9810                           	opt callstack 0
  9811  003F52                     _I2C_Master_Wait:
  9812                           	opt callstack 25
  9813                           
  9814                           ;lcd_i2c.c: 172:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  9815                           
  9816                           ;incstack = 0
  9817  003F52  B4C7               	btfsc	4039,2,c	;volatile
  9818  003F54  D7FE               	goto	_I2C_Master_Wait
  9819  003F56  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  9820  003F5A  0E1F               	movlw	31
  9821  003F5C  1601               	andwf	??_I2C_Master_Wait,f,c
  9822  003F5E  B4D8               	btfsc	status,2,c
  9823  003F60  0012               	return	
  9824  003F62  D7F7               	goto	_I2C_Master_Wait
  9825  003F64                     __end_of_I2C_Master_Wait:
  9826                           	opt callstack 0
  9827                           
  9828 ;; *************** function _config *****************
  9829 ;; Defined at:
  9830 ;;		line 14 in file "config.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_main
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text56
  9858  003B9A                     __ptext56:
  9859                           	opt callstack 0
  9860  003B9A                     _config:
  9861                           	opt callstack 30
  9862                           
  9863                           ;config.c: 16:     TRISA=0Xff;
  9864                           
  9865                           ;incstack = 0
  9866  003B9A  6892               	setf	3986,c	;volatile
  9867                           
  9868                           ;config.c: 17:     TRISB=0X00;
  9869  003B9C  0E00               	movlw	0
  9870  003B9E  6E93               	movwf	3987,c	;volatile
  9871                           
  9872                           ;config.c: 18:     TRISC=0X00;
  9873  003BA0  0E00               	movlw	0
  9874  003BA2  6E94               	movwf	3988,c	;volatile
  9875                           
  9876                           ;config.c: 19:     TRISD=0X00;
  9877  003BA4  0E00               	movlw	0
  9878  003BA6  6E95               	movwf	3989,c	;volatile
  9879                           
  9880                           ;config.c: 20:     TRISE=0Xff;
  9881  003BA8  6896               	setf	3990,c	;volatile
  9882                           
  9883                           ;config.c: 22:     PORTA=0X00;
  9884  003BAA  0E00               	movlw	0
  9885  003BAC  6E80               	movwf	3968,c	;volatile
  9886                           
  9887                           ;config.c: 23:     PORTB=0X00;
  9888  003BAE  0E00               	movlw	0
  9889  003BB0  6E81               	movwf	3969,c	;volatile
  9890                           
  9891                           ;config.c: 24:     PORTC=0X00;
  9892  003BB2  0E00               	movlw	0
  9893  003BB4  6E82               	movwf	3970,c	;volatile
  9894                           
  9895                           ;config.c: 25:     PORTD=0X00;
  9896  003BB6  0E00               	movlw	0
  9897  003BB8  6E83               	movwf	3971,c	;volatile
  9898                           
  9899                           ;config.c: 26:     PORTE=0X00;
  9900  003BBA  0E00               	movlw	0
  9901  003BBC  6E84               	movwf	3972,c	;volatile
  9902                           
  9903                           ;config.c: 28:     LATA=0X00;
  9904  003BBE  0E00               	movlw	0
  9905  003BC0  6E89               	movwf	3977,c	;volatile
  9906                           
  9907                           ;config.c: 29:     LATB=0X00;
  9908  003BC2  0E00               	movlw	0
  9909  003BC4  6E8A               	movwf	3978,c	;volatile
  9910                           
  9911                           ;config.c: 30:     LATC=0X00;
  9912  003BC6  0E00               	movlw	0
  9913  003BC8  6E8B               	movwf	3979,c	;volatile
  9914                           
  9915                           ;config.c: 31:     LATD=0X00;
  9916  003BCA  0E00               	movlw	0
  9917  003BCC  6E8C               	movwf	3980,c	;volatile
  9918                           
  9919                           ;config.c: 32:     LATE=0X00;
  9920  003BCE  0E00               	movlw	0
  9921  003BD0  6E8D               	movwf	3981,c	;volatile
  9922                           
  9923                           ;config.c: 34:     ANSELA=0Xff;
  9924  003BD2  010F               	movlb	15	; () banked
  9925  003BD4  6938               	setf	56,b	;volatile
  9926                           
  9927                           ;config.c: 35:     ANSELB=0X00;
  9928  003BD6  0E00               	movlw	0
  9929  003BD8  6F39               	movwf	57,b	;volatile
  9930                           
  9931                           ;config.c: 36:     ANSELC=0X00;
  9932  003BDA  0E00               	movlw	0
  9933  003BDC  6F3A               	movwf	58,b	;volatile
  9934                           
  9935                           ;config.c: 37:     ANSELD=0X00;
  9936  003BDE  0E00               	movlw	0
  9937  003BE0  6F3B               	movwf	59,b	;volatile
  9938                           
  9939                           ;config.c: 38:     ANSELE=0X00;
  9940  003BE2  0E00               	movlw	0
  9941  003BE4  6F3C               	movwf	60,b	;volatile
  9942                           
  9943                           ;config.c: 40:     OSCCON=0b01110100;
  9944  003BE6  0E74               	movlw	116
  9945  003BE8  6ED3               	movwf	4051,c	;volatile
  9946                           
  9947                           ; BSR set to: 15
  9948                           ;config.c: 41:     OSCTUNEbits.PLLEN=1;
  9949  003BEA  8C9B               	bsf	3995,6,c	;volatile
  9950                           
  9951                           ; BSR set to: 15
  9952  003BEC  0012               	return		;funcret
  9953  003BEE                     __end_of_config:
  9954                           	opt callstack 0
  9955                           
  9956 ;; *************** function _adc_config *****************
  9957 ;; Defined at:
  9958 ;;		line 54 in file "config.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;		None
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;		None
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      void 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9976 ;;Total ram usage:        0 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_main
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text57
  9986  003F80                     __ptext57:
  9987                           	opt callstack 0
  9988  003F80                     _adc_config:
  9989                           	opt callstack 30
  9990                           
  9991                           ;config.c: 56:     ADCON1=0b10000000;
  9992                           
  9993                           ; BSR set to: 15
  9994                           ;incstack = 0
  9995  003F80  0E80               	movlw	128
  9996  003F82  6EC1               	movwf	4033,c	;volatile
  9997                           
  9998                           ;config.c: 57:     ADCON2=0b00111110;
  9999  003F84  0E3E               	movlw	62
 10000  003F86  6EC0               	movwf	4032,c	;volatile
 10001                           
 10002                           ;config.c: 58:     ADCON2bits.ADFM=0;
 10003  003F88  9EC0               	bcf	4032,7,c	;volatile
 10004  003F8A  0012               	return		;funcret
 10005  003F8C                     __end_of_adc_config:
 10006                           	opt callstack 0
 10007                           
 10008                           	psect	rparam
 10009  0000                     tosu	equ	0xFFF
 10010                           tosh	equ	0xFFE
 10011                           tosl	equ	0xFFD
 10012                           stkptr	equ	0xFFC
 10013                           pclatu	equ	0xFFB
 10014                           pclath	equ	0xFFA
 10015                           pcl	equ	0xFF9
 10016                           tblptru	equ	0xFF8
 10017                           tblptrh	equ	0xFF7
 10018                           tblptrl	equ	0xFF6
 10019                           tablat	equ	0xFF5
 10020                           prodh	equ	0xFF4
 10021                           prodl	equ	0xFF3
 10022                           indf0	equ	0xFEF
 10023                           postinc0	equ	0xFEE
 10024                           postdec0	equ	0xFED
 10025                           preinc0	equ	0xFEC
 10026                           plusw0	equ	0xFEB
 10027                           fsr0h	equ	0xFEA
 10028                           fsr0l	equ	0xFE9
 10029                           wreg	equ	0xFE8
 10030                           indf1	equ	0xFE7
 10031                           postinc1	equ	0xFE6
 10032                           postdec1	equ	0xFE5
 10033                           preinc1	equ	0xFE4
 10034                           plusw1	equ	0xFE3
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           bsr	equ	0xFE0
 10038                           indf2	equ	0xFDF
 10039                           postinc2	equ	0xFDE
 10040                           postdec2	equ	0xFDD
 10041                           preinc2	equ	0xFDC
 10042                           plusw2	equ	0xFDB
 10043                           fsr2h	equ	0xFDA
 10044                           fsr2l	equ	0xFD9
 10045                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     90     156
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1320_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_P(BANK1[8]), str_V(BANK0[8]), str_A(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 13
		 -> STR_13(CODE[3]), str_P(BANK1[8]), STR_11(CODE[3]), STR_9(CODE[4]), 
		 -> str_V(BANK0[8]), STR_7(CODE[3]), STR_6(CODE[13]), STR_5(CODE[3]), 
		 -> str_A(BANK1[8]), STR_3(CODE[3]), STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    _atoi->_isspace
    _set_buck->___fltol
    _set_boost->___fltol
    ___fltol->___flmul
    _read_Uout->___flge
    _read_Uin->___flmul
    _read_Iout->___flge
    ___flmul->___xxtofl
    _pwm_init->___flge
    ___flge->___flmul
    _init_io_display->_I2C_Master_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display
    _I2C_Write_Display->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _write_Uout->_sprintf
    _write_Uin->_sprintf
    _write_Iout->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  155277
                                             93 COMRAM     1     1      0
                                             74 BANK0     16    16      0
                          _Lcd_Clear
                             ___flge
                            ___flmul
                         _adc_config
                             _config
                    _init_io_display
                         _pwm_config
                           _pwm_init
                          _read_Iout
                           _read_Uin
                          _read_Uout
                          _set_boost
                           _set_buck
                         _write_Iout
                          _write_Uin
                         _write_Uout
 ---------------------------------------------------------------------------------
 (1) _write_Uout                                           0     0      0   34229
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _write_Uin                                            0     0      0   34229
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _write_Iout                                           0     0      0   34229
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   31369
                                             56 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30556
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   30184
                                             63 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   24885
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _set_buck                                             2     0      2    5251
                                             49 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _set_boost                                            2     0      2    5251
                                             49 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_Uout                                            2     2      0   12106
                                             51 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_Uin                                             2     2      0    6885
                                             39 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _read_Iout                                            2     2      0    9795
                                             51 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             4     0      4    2104
                                             51 COMRAM     4     0      4
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2006
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_io_display                                      2     2      0    4533
                                             21 COMRAM     2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1475
                                              7 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     397
                                              4 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1385
                                             10 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     551
                                             10 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              4 COMRAM     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     196
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   _adc_config
   _config
   _init_io_display
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
   _pwm_config
   _pwm_init
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
   _read_Iout
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _read_Uin
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _read_Uout
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     ___fldiv
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _set_boost
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _set_buck
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _write_Iout
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _write_Uin
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _write_Uout
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5A      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      12        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 30 18:56:22 2019

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                           _c 00EA  
              ___fldiv@sign 0011                ___awdiv@sign 0006         ___wmul@multiplicand 0003  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000          I2C_Write_Display@d 0002                         l434 1388  
                       l460 166A                         l550 374A                         l393 345E  
                       l788 3074                __CFG_CPB$OFF 000000                         _PR2 000FBB  
              __CFG_CPD$OFF 000000                         _Uin 00DE                         _pad 342E  
                       _dty 00EC                ___awmod@sign 0006                         wreg 000FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                __CFG_LVP$OFF 000000  
              ___fltol@exp1 0031                        l1107 286C                        l1052 2530  
                      l1053 250E                        l1118 28DA                        l1119 28D6  
                      l1137 1DEC                        l1233 2C6E                        l1154 208A  
                      l1146 2004                        l1147 2000                        l1068 2602  
                      l1077 2668                        l1245 2A98                        l1325 3CD2  
                      l1078 2664                        l1185 2D34                        l3201 2466  
                      l1178 2CB6                        l3131 33A6                        l4003 1258  
                      l3141 3DB2                        l4101 1662                        l4013 131C  
                      l3303 2626                        l3151 3EB4                        l4103 1684  
                      l4007 1292                        l3313 263C                        l3209 2486  
                      l3401 3132                        l3145 3DC8                        l4201 192A  
                      l4025 1370                        l4009 12E0                        l3251 251C  
                      l4115 1706                        l4043 13E0                        l4035 1398  
                      l3253 2520                        l3173 241A                        l3149 3EB0  
                      l3413 3B56                        l4061 1426                        l4045 13E4  
                      l4029 1392                        l4231 2B4A                        l3351 26DC  
                      l3319 2646                        l3239 24C2                        l3407 3172  
                      l3431 29FA                        l4127 1734                        l4135 1754  
                      l4143 1778                        l4151 1810                        l4071 1460  
                      l4055 1402                        l4311 1A88                        l3521 27CC  
                      l3513 27B4                        l4241 2B94                        l4233 2B4E  
                      l3353 26DE                        l3177 241E                        l3441 2ABA  
                      l4217 198A                        l4065 1436                        l4313 1AA6  
                      l3531 281C                        l3507 279E                        l4251 2BB2  
                      l3347 26D4                        l3339 26AE                        l3275 2576  
                      l3267 2554                        l3371 3448                        l4163 1852  
                      l4331 1B86                        l4315 1AB4                        l3613 1D98  
                      l4253 2BDA                        l3277 257A                        l3285 258C  
                      l3197 2462                        l3445 2AF8                        l3381 3480  
                      l4181 18A8                        l4093 160A                        l3631 1DD8  
                      l3615 1D9C                        l3551 2882                        l4247 2BA4  
                      l3295 25F2                        l3375 3456                        l4191 18FE  
                      l4087 15CC                        l4079 1556                        l4343 1C0C  
                      l3713 2066                        l3641 1E0A                        l3633 1DDC  
                      l3617 1DAC                        l3545 286A                        l4257 2C0E  
                      l4249 2BAC                        l3449 2B26                        l3385 34AE  
                      l3377 3468                        l4425 3AB0                        l4435 36FC  
                      l4523 2CE4                        l3539 2844                        l3475 2726  
                      l4179 189E                        l4339 1BE2                        l4427 3AD6  
                      l4437 3708                        l3725 20A8                        l3709 2048  
                      l4525 2CEA                        l4517 2CC6                        l3581 2942  
                      l3557 28A0                        l3813 38B4                        l3805 389C  
                      l3821 34FC                        l3397 3128                        l4277 3316  
                      l4365 1D16                        ?_pad 0011                        l4447 373C  
                      l4535 2D5A                        l4527 2CF6                        l3591 2978  
                      l3495 2766                        l3479 272A                        l3903 3224  
                      l3751 3576                        l4279 3324                        l4359 1CDA  
                      l4375 1D38                        l3841 3048                        l4553 2DA6  
                      l4537 2D66                        l4529 2D1C                        l3593 297A  
                      l3585 296C                        l3577 291E                        l4713 367C  
                      l4721 35EE                        l3745 3566                        l3809 38A6  
                      l3825 3530                        l4369 1D20                        l4483 3C68  
                      l3851 30AC                        l3683 1FAC                        l3499 276A  
                      l3915 3DA0                        l4493 37E2                        l3845 305E  
                      l3837 3014                        l4709 3670                        l4725 35FA  
                      l3757 358C                        l3773 35BE                        l3829 354E  
                      l3941 1096                        l4805 217C                        l4639 2EC4  
                      l3759 3594                        l4497 3818                        l3689 1FCA  
                      l3777 35CC                        l3769 35B4                        l3793 386E  
                      l3953 10C4                        l3961 10DA                        l3859 3E94  
                      l3971 1146                        l4819 21BA                        l3885 31E4  
                      l3869 319A                        l3797 387C                        l3789 3862  
                      l3973 115E                        l4837 226E                        l4679 2FC6  
                      l3895 31FC                        l3799 3884                        l3975 1168  
                      l4791 2140                        l3897 3208                        l3889 31F4  
                      l4865 2388                        l4849 22DA                        l4777 2104  
                      l3979 118E                        l3989 11FA                        l3997 1214  
                      STR_1 1020                        STR_2 100E                        STR_3 103C  
                      STR_4 101B                        STR_5 1042                        STR_6 1001  
                      STR_7 103F                        STR_8 101B                        STR_9 1035  
                      u3010 264A                        _LATA 000F89                        u3030 265E  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        u4110 320E                        u3310 29C8  
                      u5000 3810                        u3240 316A                        u3320 29E8  
                      u4200 111C                        u5010 3846                        u3410 3E70  
                      u3090 26BA                        u3250 316C                        u4210 111E  
                      u3235 314C                        u3315 29BE                        u4060 3188  
                      u3420 3E72                        u4140 3D9C                        u3260 3B90  
                      u4070 31B8                        u3190 30EE                        u5007 3806  
                      u3360 2A78                        u2720 3E40                        u3280 3CB8  
                      u4320 137E                        u4240 11D0                        u5017 383C  
                      u3345 2A12                        u3346 2A18                        u2730 3E42  
                      u3290 3CBA                        u4250 11D2                        u4170 10B4  
                      u4075 31AE                        u3195 30E4                        u3347 2A26  
                      u3267 3B86                        u3380 2AD8                        u3365 2A6E  
                      u3630 292C                        u2830 24E4                        u2670 339E  
                      u4350 13B0                        u3640 2950                        u5160 3668  
                      u2840 24F4                        u3385 2ACE                        u3730 1DF8  
                      u5090 2D70                        u2850 24F6                        u2690 33E6  
                      u4290 1344                        u3820 2056                        u3740 1F6E  
                      u5180 35E6                        u4700 2C3E                        u4620 1914  
                      u5260 225C                        u5317 2126                        u3830 2074  
                      u3590 28D0                        u4710 2C40                        u4390 13FE  
                      u5407 2ECE                        u5327 2138                        u2880 2538  
                      u4640 1974                        u4560 1834                        u3745 1F64  
                      u5417 3240                        u5337 2162                        u4650 1976  
                      u5290 2376                        u5507 3A8C                        u5427 3254  
                      u5347 2174                        u3780 1FFA                        u3940 3888  
                      u4900 1C90                        u4820 1AEC                        u5517 376C  
                      u5437 2EE8                        u5357 21A0                        u4830 1AEE  
                      u5527 3786                        u5447 2EFC                        u5367 21B2  
                      u4680 2B90                        u3880 3598                        u4840 1AFA  
                      u5537 379C                        u5457 2F9C                        u5377 2DC2  
                      u5547 3D0C                        u5467 2FD0                        u5387 2DD6  
                      u4780 336A                        u5477 38E0                        u5397 2E9A  
                      u4950 370C                        u3990 354A                        u5487 391A  
                      u5497 3A6E                        u4890 1C8E                        u4975 3A14  
                      _Iout 00D6                        _Uout 00DA                        _data 00F2  
         ?_Lcd_Write_String 0008                        _dbuf 0100                        _atoi 2B38  
                      _main 20BE                        _prec 00E6                        _tens 00C6  
                      _nout 00E2                        pad@i 0018                        pad@p 0015  
                      fsr0h 000FEA                        fsr1h 000FE2                        indf0 000FEF  
                      fsr2h 000FDA                        fsr0l 000FE9                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 001A                        fsr2l 000FD9  
             __CFG_BORV$190 000000               ___fpclassifyf 30B0                        prodh 000FF4  
                      prodl 000FF3                        start 0000          ??_Lcd_Write_String 000A  
             __CFG_IESO$OFF 000000             ___fldiv@new_exp 0012             __end_of_Lcd_Cmd 3D24  
              _tolower$1392 000D                ___param_bank 000000                       ??_pad 0017  
          ?_I2C_Master_Init 000E            ?_I2C_Master_Wait 0001            ?_I2C_Master_Stop 0001  
              main@buck_pwm 00AE               ___fltol@sign1 0030                       ?_atoi 0008  
           __end_of___fladd 26FA                       ?_main 0001             __end_of___fldiv 2982  
           __end_of___awdiv 35D6             __end_of___flneg 3EA6                       STR_10 101B  
                     STR_11 1045                       STR_13 1048                       STR_22 1039  
                     STR_14 1025                       STR_15 102D                       STR_24 1039  
                     STR_18 1029                       STR_19 1031             __end_of___awmod 38BE  
           __end_of___flmul 20BE             __end_of___flsub 3D6A             __end_of___fltol 3236  
           __end_of___lldiv 375C             ___awdiv@divisor 0003                       _T2CON 000FBA  
           ___awdiv@counter 0005                vfpfcnvrt@fmt 0042                       _PORTA 000F80  
                     _PORTB 000F81                       _PORTC 000F82                       _PORTD 000F83  
                     _PORTE 000F84     __size_of_Lcd_Set_Cursor 0050                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _TRISD 000F95  
                     _TRISE 000F96               __CFG_WRT0$OFF 000000               main@Power_new 00B6  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000                       _Power 00C2  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000                       _flags 00E8                       _fputc 338E  
                     _fputs 3DA8             __end_of_isdigit 3E78          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 0011                       atoi@s 0008  
                     _str_A 0158                       _width 00E4                       _str_P 0150  
                     _putch 3FA6                       _str_V 00F4             __end_of_isspace 3DA8  
            __CFG_BOREN$OFF 000000             __end_of_isupper 3E48                       tablat 000FF5  
                     status 000FD8             __end_of_sprintf 3C40              ?___fpclassifyf 0001  
           __end_of_tolower 3CDC              __CFG_HFOFST$ON 000000             __end_of_strncmp 338E  
            __CFG_PBADEN$ON 000000            __end_of_Lcd_Init 37D8            __end_of_Lcd_Port 3F3A  
           __initialization 3EF6                __end_of_atoi 2C78                __end_of_main 23EE  
                _Cursor_Off 3F72                      ??_atoi 000A                      ??_main 005E  
        __size_of_Lcd_Clear 000E               __activetblptr 000002              __CFG_PLLCFG$ON 000000  
         ?_I2C_Master_Start 0001          ??_I2C_Master_Start 0002                      _ADCON0 000FC2  
                    _ADCON1 000FC1                      _ADCON2 000FC0                      ?_fputc 0001  
                    ?_fputs 000A                      _ADRESH 000FC4                      _CCPR1L 000FBE  
                    _CCPR2L 000F67            ___awdiv@dividend 0001                      _ANSELA 000F38  
                    ?_putch 0001                      _ANSELB 000F39                      _ANSELC 000F3A  
                    _ANSELD 000F3B                      _ANSELE 000F3C              __CFG_WDTEN$OFF 000000  
                    _OSCCON 000FD3                   ??_Lcd_Cmd 0005     __size_of_Lcd_Write_Char 0058  
                    _SSPBUF 000FC9            __end_of___xxtofl 2DB8              __CFG_XINST$OFF 000000  
              vfprintf@cfmt 005C                      ___flge 2FE0                      ___fleq 34C8  
                 ??___fladd 0009                      ___wmul 3ED0                   ??___fldiv 0009  
                 ??___awdiv 0005                   ??___flneg 0005                   ??___awmod 0005  
                 ??___flmul 0017                   ??___flsub 0030                   ??___fltol 002C  
                 ??___lldiv 0009                      _efgtoa 104C                      _config 3B9A  
                    _floorf 2982            __end_of_read_Uin 32EC                      clear_0 3EFC  
                    clear_1 3F08            ___awdiv@quotient 0007             ___awmod@divisor 0003  
                    _tens_A 00CE             ___awmod@counter 0005                      pad@buf 0013  
           _init_io_display 38BE                      _strcpy 3B46                      _strlen 3EA6  
                    fputc@c 0001            __end_of_set_buck 3658                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A                   ??_isdigit 0003  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0000                   ??_isspace 0003                      tblptrh 000FF7  
                 ??_isupper 0003                      tblptrl 000FF6                      tblptru 000FF8  
          __end_of_pwm_init 3E18                      putch@c 0001            __end_of_vfprintf 3AF2  
                 ??_sprintf 005E                   ??_tolower 0009                   ??_strncmp 0007  
           Lcd_Set_Cursor@a 000C             Lcd_Set_Cursor@b 000B             Lcd_Set_Cursor@y 000E  
           Lcd_Set_Cursor@z 000D                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 3F0E                  ___flneg@f1 0001  
         __end_of_Lcd_Clear 3F72               ___rparam_used 000001                  ___fltol@f1 0028  
            __pcstackCOMRAM 0001                  _adc_config 3F80               __end_of_fputc 342E  
             __end_of_fputs 3DE0                 ?_Cursor_Off 0001               __end_of_putch 3FA8  
            _Lcd_Set_Cursor 3C40                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 00BA                  __pbssBANK1 0100          __size_of_read_Iout 0102  
        __size_of_read_Uout 0126                  _efgtoa$781 0068                  _efgtoa$775 0064  
                _efgtoa$776 0066                  _efgtoa$785 006A                  _efgtoa$786 006C  
                _efgtoa$787 006E          __CFG_CCP2MX$PORTC1 000000     __end_of_init_io_display 392A  
                   ?___flge 0028                     ?___fleq 0001                     ?___wmul 0001  
        __CFG_CCP3MX$PORTB5 000000                     ?_efgtoa 0034                     ?_config 0001  
                   _CCP1CON 000FBD           _I2C_Write_Display 3F8C                     _CCP2CON 000F66  
                   ?_floorf 001A   __size_of_Lcd_Write_String 0076      __end_of_Lcd_Set_Cursor 3C90  
        __size_of_set_boost 0082          ?_I2C_Write_Display 0002                     ?_strcpy 0001  
                   ?_strlen 0001                   ?___xxtofl 0001          __size_of_vfpfcnvrt 03A4  
         __CFG_PRICLKEN$OFF 000000         ??_I2C_Write_Display 0004                  ??_Lcd_Init 000B  
                   _SSP1ADD 000FC8                     _SSP1BUF 000FC9                  ??_Lcd_Port 0004  
            _Lcd_Write_Char 3A44                     _Lcd_Cmd 3CDC         __size_of_Cursor_Off 000E  
                 ?_read_Uin 0001          __size_of_write_Uin 0060             __CFG_PWRTEN$OFF 000000  
                   __Hparam 0000                     __Lparam 0000                   ?_set_buck 0032  
 __end_of_I2C_Write_Display 3F96                 ?_adc_config 0001             __size_of___flge 00D0  
           __size_of___fleq 008A                     ___fladd 23EE                     ___fldiv 26FA  
                   ___awdiv 3552                     ___flneg 3E78                     ___awmod 384E  
                   ___flmul 1D6C                     ___flsub 3D24                     ___fltol 317C  
                   ___lldiv 36DA             __size_of___wmul 0026                   ?_pwm_init 0034  
                 ?_vfprintf 0056                __psmallconst 1000             __size_of_efgtoa 097C  
           __size_of_config 0054             __CFG_STVREN$OFF 000000             __size_of_floorf 01B6  
                   __pcinit 3EF6                     __ramtop 1000             ?_Lcd_Set_Cursor 000B  
                   __ptext0 20BE                     __ptext1 3AF2                     __ptext2 392A  
                   __ptext3 398A                     __ptext4 3BEE                     __ptext5 3A9C  
                   __ptext6 19C8                     __ptext7 32EC                     __ptext8 104C  
                   __ptext9 3C90                 set_buck@dty 0032             __size_of_strcpy 0054  
           __size_of_strlen 002A           __end_of_read_Iout 2FE0                __size_of_pad 009A  
                   _isdigit 3E48           __end_of_read_Uout 2EDE                  ??___xxtofl 0005  
          ___awmod@dividend 0001                     _isspace 3D6A                     _isupper 3E18  
  __size_of_I2C_Master_Init 005A                     efgtoa@c 003A                     efgtoa@d 0078  
                   efgtoa@e 0090                     efgtoa@f 0036                     efgtoa@g 008C  
                   efgtoa@h 0082                     efgtoa@i 008A                     efgtoa@l 0086  
                   efgtoa@m 0074                     efgtoa@n 0092                     efgtoa@p 007C  
                   efgtoa@t 0070                     efgtoa@u 0094                     efgtoa@w 007F  
  __size_of_I2C_Master_Wait 0012    __size_of_I2C_Master_Stop 0008                     atoi@neg 000E  
                   main@Uin 00AA                     _sprintf 3BEE                     _tolower 3C90  
    __end_of_Lcd_Write_Char 3A9C                     _strncmp 32EC        end_of_initialization 3F0E  
                   floorf@e 0028                     floorf@m 0024                     floorf@u 002A  
                   floorf@x 001A                     fputc@fp 0003                  ??_read_Uin 0028  
             __Lmediumconst 0000                     fputs@fp 000C           __end_of_set_boost 36DA  
 __size_of_I2C_Master_Start 0008             ___lldiv@divisor 0005             ___lldiv@counter 000D  
                ??_set_buck 0034           __end_of_vfpfcnvrt 1D6C                  efgtoa@mode 0081  
                efgtoa@sign 007A            I2C_Master_Init@c 000E            ?_init_io_display 0001  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  ??_pwm_init 0038                  ??_vfprintf 005C  
                   strcpy@d 0009                     strlen@a 0003                     strcpy@s 0007  
                   strlen@s 0001                 ___fladd@grs 0010           __end_of_write_Uin 398A  
             ___xxtofl@sign 0009                   _TRISCbits 000F94                  _pwm_config 3F3A  
               ___fldiv@grs 0014                 ___fldiv@rem 000D             ?_Lcd_Write_Char 0001  
       __size_of_adc_config 000C           Lcd_Write_String@a 0008           Lcd_Write_String@i 000C  
               ___flmul@grs 001C                   _Lcd_Clear 3F64  __size_of_I2C_Write_Display 000A  
            __end_of___flge 30B0              __end_of___fleq 3552                ??_Cursor_Off 000B  
                _write_Iout 398A                 vfpfcnvrt@ap 0044                 vfpfcnvrt@ct 0052  
               vfpfcnvrt@fp 0040              __end_of___wmul 3EF6                  _write_Uout 3AF2  
          _Lcd_Write_String 37D8              __end_of_efgtoa 19C8              __end_of_config 3BEE  
            __end_of_floorf 2B38                  floorf@F524 00BA              __end_of_strcpy 3B9A  
            __end_of_strlen 3ED0         start_initialization 3EF6                 __end_of_pad 34C8  
               pwm_init@Uin 0034           __size_of_Lcd_Init 007C           __size_of_Lcd_Port 0022  
         ??_I2C_Master_Init 0012           ??_I2C_Master_Wait 0001           ??_I2C_Master_Stop 0002  
     __end_of___fpclassifyf 317C          __end_of_Cursor_Off 3F80                 vfprintf@fmt 0058  
                ?_Lcd_Clear 0001                    ??___flge 0030                    ??___fleq 0009  
                  ??___wmul 0005                    ??_efgtoa 003B                    ??_config 0001  
                  ??_floorf 001E             Lcd_Write_Char@a 0005             Lcd_Write_Char@y 0006  
                  ??_strcpy 0005                    ??_strlen 0003                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
                 ___flmul@a 0013                   ___flmul@b 000F                   ___flsub@a 002C  
                 ___flsub@b 0028               __pcstackBANK0 0060                 ?_pwm_config 0001  
         __size_of___xxtofl 0140                    ?_Lcd_Cmd 0001                   _atoi$1276 0010  
                 _atoi$1277 0014                   _atoi$1278 0012            _I2C_Master_Start 3F9E  
         __size_of_read_Uin 00B6            ??_Lcd_Set_Cursor 000C                ??_adc_config 0001  
                  ?___fladd 0001                    ?___fldiv 0001                    ?___awdiv 0001  
                  ?___flneg 0001                    ?___awmod 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0028                    ?___lldiv 0001  
         __size_of_set_buck 0082                 ?_write_Iout 0001                 ?_write_Uout 0001  
         __size_of_pwm_init 0038           __size_of_vfprintf 0056                   _boost_pwm 00EE  
               __smallconst 1000                    ?_isdigit 0001                    ?_isspace 0001  
                  ?_isupper 0001                    _CCPTMRS0 000F49                   _read_Iout 2EDE  
                 _read_Uout 2DB8                    ?_sprintf 0098                    ?_tolower 0007  
            __size_of_fputc 00A0              __size_of_fputs 0038                    ?_strncmp 0001  
            __size_of_putch 0002          __end_of_adc_config 3F8C              ___wmul@product 0005  
                  _PIE1bits 000F9D                   _rez_adc_A 00D2                   _rez_adc_U 00CA  
                  Lcd_Cmd@a 000A                   _set_boost 3658                 ??_Lcd_Clear 000B  
          __CFG_WDTPS$32768 000000         __size_of_pwm_config 0018                    _SSP1CON1 000FC6  
                  _SSP1CON2 000FC5                    _SSP1STAT 000FC7                   _vfpfcnvrt 19C8  
                _ADCON0bits 000FC2                  _ADCON2bits 000FC0           ___wmul@multiplier 0001  
                 main@Power 00B2            ??_Lcd_Write_Char 0005                _isspace$1307 0007  
                  _Lcd_Init 375C                    _Lcd_Port 3F18                  ?_read_Iout 0001  
                vfpfcnvrt@c 0055                  vfpfcnvrt@f 004E                   _write_Uin 392A  
                ?_read_Uout 0001    __end_of_Lcd_Write_String 384E         __size_of_write_Iout 0060  
       __size_of_write_Uout 0054            __size_of_Lcd_Cmd 0048                Lcd_Port@data 0004  
                  __Hrparam 0000                  ?_set_boost 0032                  vfprintf@ap 005A  
                  __Lrparam 0000                  vfprintf@fp 0056           __CFG_P2BMX$PORTD2 000000  
          __size_of___fladd 030C            __size_of___fldiv 0288            __size_of___awdiv 0084  
          __size_of___flneg 002E            __size_of___awmod 0070            __size_of___flmul 0352  
          __size_of___flsub 0046            __size_of___fltol 00BA            __size_of___lldiv 0082  
                ?_vfpfcnvrt 0040          ___fpclassifyf@F463 00BE    __size_of_init_io_display 006C  
                sprintf@fmt 009A             _I2C_Master_Init 39EA                    ___xxtofl 2C78  
           _I2C_Master_Wait 3F52             _I2C_Master_Stop 3F96            __size_of_isdigit 0030  
          __size_of_isspace 003E                    __ptext10 3E18                    __ptext11 3B46  
                  __ptext20 23EE                    __ptext12 342E                    __ptext21 3E78  
                  __ptext13 3EA6                    __ptext30 3658                    __ptext22 34C8  
                  __ptext14 3DA8                    __ptext31 317C                    __ptext23 384E  
                  __ptext15 338E                    __ptext40 3F3A                    __ptext32 2DB8  
                  __ptext24 3552                    __ptext16 3FA6                    __ptext41 38BE  
                  __ptext33 3236                    __ptext25 2B38                    __ptext17 2982  
                  __ptext50 3CDC                    __ptext42 37D8                    __ptext34 26FA  
                  __ptext26 3D6A                    __ptext18 30B0                    __ptext51 3F18  
                  __ptext43 3A44                    __ptext35 2EDE                    __ptext27 3E48  
                  __ptext19 3D24                    __ptext52 3F8C                    __ptext44 3C40  
                  __ptext36 2C78                    __ptext28 3ED0                    __ptext53 3F96  
                  __ptext45 375C                    __ptext37 1D6C                    __ptext29 35D6  
                  __ptext54 3F9E                    __ptext46 3F64                    __ptext38 3DE0  
                  __ptext55 3F52                    __ptext47 39EA                    __ptext39 2FE0  
                  __ptext56 3B9A                    __ptext48 36DA                    __ptext57 3F80  
                  __ptext49 3F72            __size_of_isupper 0030                _SSP1CON2bits 000FC5  
                ?_write_Uin 0001                    _buck_pwm 00F0            __size_of_sprintf 0052  
          __size_of_tolower 004C                  strcpy@dest 0001            __size_of_strncmp 00A2  
               Lcd_Cmd@buff 0008                    _read_Uin 3236               __size_of_atoi 0140  
             __size_of_main 0330                set_boost@dty 0032                    _set_buck 35D6  
                  efgtoa@fp 0034                    efgtoa@ne 0076                    efgtoa@pp 0072  
                  efgtoa@ou 0060                    _pwm_init 3DE0                    _vfprintf 3A9C  
                  main@port 00B0    __end_of_I2C_Master_Start 3FA6                 _OSCTUNEbits 000F9B  
                _INTCONbits 000FF2                ??_pwm_config 0001                    isdigit@c 0001  
               ??_read_Iout 0034                 ??_read_Uout 0034          Lcd_Write_Char@temp 0007  
                 sprintf@ap 00A2                    isspace@c 0001            ___lldiv@dividend 0001  
                 strcpy@src 0003                    isupper@c 0001                   strncmp@_l 0001  
                 strncmp@_r 0003                 ??_set_boost 0034                 efgtoa@nmode 007E  
        __end_of_pwm_config 3F52                ??_write_Iout 005E     __end_of_I2C_Master_Init 3A44  
              ??_write_Uout 005E     __end_of_I2C_Master_Wait 3F64     __end_of_I2C_Master_Stop 3F9E  
               ??_vfpfcnvrt 0046               _vfpfcnvrt$801 004A               _vfpfcnvrt$805 004C  
        Lcd_Set_Cursor@temp 000F                    sprintf@f 00A4                    tolower@c 0007  
                  sprintf@s 0098      __size_of___fpclassifyf 00CC            ___lldiv@quotient 0009  
                  strncmp@l 0008                    strncmp@n 0005                    strncmp@r 000A  
         __CFG_T3CMX$PORTC0 000000                 ??_write_Uin 005E               ___fladd@signs 000D  
         ??_init_io_display 0016                ___fladd@aexp 000E                ___fladd@bexp 000F  
        __end_of_write_Iout 39EA           __CFG_FOSC$INTIO67 000000          __end_of_write_Uout 3B46  
